<!DOCTYPE html>

<html>

    <head>
        <title>Page Title</title>    

                 <script src="https://code.jquery.com/jquery-3.1.1.js"></script>
                 <script src="https://kit.fontawesome.com/d828ced68e.js" crossorigin="anonymous"></script>
                 <script src="https://cdnjs.cloudflare.com/ajax/libs/parallax/3.1.0/parallax.min.js"></script>
                 <script src="https://unpkg.com/swiper/swiper-bundle.min.js"></script>
               <script src="https://www.gstatic.com/firebasejs/7.17.1/firebase.js"></script>
               <link href="https://fonts.googleapis.com/css?family=Material+Icons|Material+Icons+Outlined|Material+Icons+Two+Tone|Material+Icons+Round|Material+Icons+Sharp" rel="stylesheet">
         <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
         <link rel="stylesheet" href="https://unpkg.com/swiper/swiper-bundle.min.css" />
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Akaya+Telivigala&family=Caveat&family=Akaya+Telivigala&family=Concert+One&family=Cookie&family=Courgette&family=Dancing+Script&family=Dosis&family=Festive&family=Fredoka+One&family=Great+Vibes&family=Indie+Flower&family=Lobster&family=Mochiy+Pop+P+One&family=Oswald:wght@600&family=Patrick+Hand&family=Permanent+Marker&family=Quintessential&family=Roboto&family=Rock+3D&family=Rowdies&family=Secular+One&family=Shizuru&family=Tangerine&family=Yanone+Kaffeesatz:wght@400;500;546&display=swap" rel="stylesheet">
              <script src="https://cdnjs.cloudflare.com/ajax/libs/color-thief/2.3.0/color-thief.umd.js"></script>
               <link href='https://fonts.googleapis.com/css?family=Akronim' rel='stylesheet'>
                <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet">
                <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
            <link href="https://fonts.googleapis.com/css?family=Shrikhand|Charmonman|Cinzel|Cookie|Fredoka+One|Great+Vibes|Kaushan+Script|Kodchasan|Maven+Pro|Nunito|Orbitron|Pacifico|Permanent+Marker|Poiret+One|Righteous|Satisfy|Handlee|KoHo|Cedarville+Cursive|Allerta|Berkshire+Swash|Allura|Armata|Cairo|Corben|Delius+Swash+Caps|Electrolize|Ewert|Exo|Heebo:800|Itim|Jura|Kanit|Khand|Monda|PT+Sans|Play|Rajdhani|Ropa+Sans|Ruda|Saira+Semi+Condensed|Sunflower:300|Titillium+Web|Vollkorn+SC|Poiret+One" rel="stylesheet"> 
            <link href="https://fonts.googleapis.com/css?family=Alegreya+SC|Allerta+Stencil|Anton|Audiowide|Coiny|Dancing+Script|Diplomata+SC|Do+Hyeon|Erica+One|Faster+One|Fontdiner+Swanky|Freckle+Face|Fredericka+the+Great|Great+Vibes|Hanalei+Fill|Henny+Penny|Homemade+Apple|Indie+Flower|Jua|Megrim|Metal+Mania|Monoton|Monsieur+La+Doulaise|Niconne|Oleo+Script+Swash+Caps|Pacifico|Parisienne|Permanent+Marker|Press+Start+2P|Sacramento|Satisfy|Shojumaru|Special+Elite|Stalinist+One|Tangerine|Ubuntu|UnifrakturCook:700|Yatra+One|Yellowtail|Yesteryear" rel="stylesheet">
              <link href="https://fonts.googleapis.com/css?family=Amatic+SC|Architects+Daughter|Bad+Script|Cookie|Courgette|Covered+By+Your+Grace|Dancing+Script|Gloria+Hallelujah|Great+Vibes|Handlee|Indie+Flower|Kaushan+Script|Pacifico|Patrick+Hand|Permanent+Marker|Sacramento|Satisfy|Shadows+Into+Light|Shadows+Into+Light+Two|Tangerine|Yellowtail" rel="stylesheet"> 
              <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Sofia">
           <link href='https://fonts.googleapis.com/icon?family=Material+Icons' rel='stylesheet'/>
             <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> 
  <link href="https://cdn.bootcss.com/font-awesome/5.5.0/css/all.css" rel="stylesheet"> 
  <link href="https://cdn.bootcss.com/font-awesome/5.3.0/css/all.css" rel="stylesheet"> 
           <link href="https://fonts.googleapis.com/css?family=Baloo+2|Montserrat&display=swap" rel="stylesheet">
        <link href="https://unpkg.com/ionicons@4.5.10-0/dist/css/ionicons.min.css" rel="stylesheet">
<link href="https://fonts.googleapis.com/css?family=Montserrat:bold" rel="stylesheet">
    </head>
    
    <style>
    
*{

    outline:0;
    font-size: 19px ;
    -webkit-tap-highlight-color: transparent ;
    -moz-tap-highlight-color: transparent ;
    -o-tap-highlight-color: transparent ;
    tap-highlight-color: transparent ;
     -webkit-touch-callout: none; /* iOS Safari */
}
ay{


    -webkit-user-select: none; /* Safari */
     -khtml-user-select: none; /* Konqueror HTML */
       -moz-user-select: none; /* Old versions of Firefox */
        -ms-user-select: none; /* Internet Explorer/Edge */
            user-select: none; /* Non-prefixed version, currently
                                  supported by Chrome, Edge, Opera and Firefox */

}
body{
  Margin: 0 ;
  box-sizing: border-box;
  background-color: #000 ;
}
#welcome_bg{
  position: fixed ;
  Height: 100% ;
  Width: 100% ;
  Display: block ;
  background-color : #000 ;
  transition:.5s;
  z-index: 100;
}
#1st_come{
  position: fixed ;
  top: 0 ;
  bottom: 0 ;
  transition: 1s ease ;
  transform: 0 ;
}
#welcome_inner{
  position: absolute ;
  Height: 98% ;
  margin:  1% ;
  Width: 98% ;
  box-shadow: inset 0px 0px 8px #fff ;
  Border-radius :  5px ;
  display:  flex ;
  Justify-content : center ;
  flex-direction: column ;
  align-items: center ;
}


.content2 {
margin-bottom:  45% ;
  position: relative;
  font-size: 1em ;
  box-sizing: border-box;
  font-family:'Akronim';
  Background-color : #e67e22 ;
}

.content2 h2 {
  color: #fff;
  font-size: 4em;
  position: absolute;
  transform: translate(-50%, -50%);
}

.content2 h2:nth-child(1) {
  color: transparent;
  -webkit-text-stroke: 2px #c67c22;
}

.content2 h2:nth-child(2) {
  color: #000 ;
  animation: animatey 4s ease-in-out infinite;
}

@keyframes animatey {
  0%,
  100% {
    clip-path: polygon(
      0% 45%,
      16% 44%,
      33% 50%,
      54% 60%,
      70% 61%,
      84% 59%,
      100% 52%,
      100% 100%,
      0% 100%
    );
  }

  50% {
    clip-path: polygon(
      0% 60%,
      15% 65%,
      34% 66%,
      51% 62%,
      67% 50%,
      84% 45%,
      100% 46%,
      100% 100%,
      0% 100%
    );
  }
}
.content2 {
/*
    margin-top:    28%   ;

    display:flex ;
    align-items: center ;
    justify-content:center ;*/
    font-weight:bold    ;
 animation:blink 2s infinite linear;
}
@keyframes blink{
  0%,1%,5%,10%,15%,30%{
opacity:0.5;
  }
  30%,3%,8%,13%,20%{
    opacity:1;
  }
}
.content2 span {
        ont-size: 20vw;
        text-shadow: -0.08em 0.03em 0.12em rgba(0, 0, 0, 0.7);
      }
      .content2 span:not(:first-child) {
        margin-left: -0.18em;
      }
       #second_come{

   position: fixed ;

   width: 100% ;
   Top: 0 ;
   Left: 0 ;
   height: 100% ;
   z-index : 45  ;
   transition:.7s;
   Display: none ;
   background-color: #e67e22 ;
 }     
#third_come{
   position: fixed ;
   Top: 0 ;
   Left: 0 ;
   Min-Height: 100% ;
   Min-Width: 100% ;
   z-index:  ;
   Display: none ;
   Background-color : red ;
 }
     .content3{
        position: absolute ;
        Bottom: 5px ;
         font-family: Handlee ;
         Color: #e67e22 ;
      }
      

.shrink_class{

transition: 1s ease;
-webkit-transform: scale(0.9);
-ms-transform: scale(0.9);
transform: scale(0.9);
transition: 0.2s ease;
}
.grow_class{
transition: 1s ease;
-webkit-transform: scale(1.0);
-ms-transform: scale(1.0);
transform: scale(1.0);
transition: 1s ease;
}


.button_effect {

   tap-highlight-color: rgba(255,255,255,0);
   -webkit-tap-highlight-color: rgba(255,255,255,0);
}

.button_effect:active {
   -webkit-transform: translateY(4px);
   border-bottom-width: 1px;
}
  #intro_body{
    Position : fixed ;
    Top :  0 ;
    Right :  0 ;
    width: 0% ;
    Height: 100% ;
    background-color : #000 ;
    transition:0.5s;
  }
 #intro_pad{
   position: absolute ;
   width: 100% ;
   Height: 100% ;
   display: flex ;
   justify-content: center ;
   align-items:  center ;
 } 
 .intro_divs{
   position: bsolute ;
   width: 100% ;
   Height: 100% ;
   Background-color : #e67e22 ;
   Top: 0 ;
   Left: 0 ;
   display: flex ;
   align-items : center ;
   justify-content : center ;
 }
 #intro_skip{
   position:  absolute ;
   padding-bottom: 3px  ;
   padding-top: 3px  ;
   Top: 0 ;
   margin: 10px ;
   Right: 0 ;
     display: none ;
   justify-content: center ;
   Font-weight : bold ;
   Color: rgb(59, 59, 59) ;
   align-items:  center ;
   z-index: 2 ;
   font-family : 'koho', sans-serif ;
 } 
 #intro_bot{
   position:  absolute ;
   Width : 100% ;
   Hight: 5px ;
   z-index: 3 ;
   background-color: #0004 ;
   display: flex ;
   align-items : center ;
   justify-content : center ;
   bottom: 5px ;
   box-shadow : 0px 0px 1px #000 ;
   order-radius : 23px ;
 }
.intro_fat{
  Width: 92% ;
  ax-Height: 150px ;
  align-self : flex-end ;
  justify-self: center ;
  min-height: 10px ;
  Border-radius : 10px ;
   z-index: 2 ;
   padding: 2% ;
   box-shadow: 0px 0px 3px #000 ;
  height: ;
  position: absolute ;
  font-weight: bold ;
  Bottom: 30px ;
  background-color: #4444 ;
  font-family: 'koho', sans-serif ;
  color : #fff ;
} 
#content_skip{
  display : flex ;
  align-items : center ;
  justify-content : center ;
  min-width : 92% ;
  padding : 2% ;
  padding-top : 3% ;
  padding-bottom : 3% ;
  margin : 2% ;
  color : #fff ;
  font-family: 'koho', sans-serif  ;
  position: absolute ;
  border-radius: 5px ;
  box-shadow: 0px 0px 3px #000 ;
  bottom : 5%  ;
  background-color : #4444 ;
}
.switch_btns{
  width: 5px ;
  height: 5px ;
  padding: 2px ;
  margin: 1% ;
  background-color: #e67e22 ;
  order-right: 1px solid #000 ;
   Border-radius : 50% ;
   transition : all 0.1s ease ;
   box-shadow : 0px 0px 3px #000 ;
}
.switch_controlclass{
  bckground-color : blue ;
  margin-top: -5px;
}
 #content_one{
   background: -webkit-linear-gradient(90deg,rgba(0,0,0,1),  transparent,transparent ),url("https://www.dropbox.com/s/pa0xeb15v1b0iuo/HD-wallpaper-popcorn-dish-wooden-surface.jpg?raw=1");
          background-size: cover;
          background-position: 0 20%;
          background-repeat: no-repeat;
          display: flex ;
 }
 #content_two{
   background: -webkit-linear-gradient(90deg,rgba(0,0,0,1),  transparent,transparent ),url("https://www.dropbox.com/s/0ck8li2xl4p5l4p/HD-wallpaper-popcorn-corn-bowl-table.jpg?raw=1");
          background-size: cover;
          background-position: 0 20%;
          background-repeat: no-repeat;
 }
 #content_three{
   background: -webkit-linear-gradient(90deg,rgba(0,0,0,1),  transparent,transparent ),url("https://www.dropbox.com/s/0agf2oj86vlww1p/HD-wallpaper-popcorn-blue-cinema-film-food-movie-red-box.jpg?raw=1");
          background-size: cover;
          background-position: 0 20%;
          background-repeat: no-repeat;
 } 
 .display_flex{
  display: flex ;
} 




.input:hover{
    border: 1px solid #e67e22;
  olor: #c67c22;
}  
#add_emailval, #add_listval{
  color: #fff ;
}
#add_emailval:hover, #add_listval:hover{
    border: 1px solid #fff ;
  color: #fff;
}  
.input-group{
    position: relative;
    margin: %;
   Width: 96% ;
}
.input{
   Width: 96.5% ;
  Padding-top:  10px ;
  Padding-bottom: 10px ;
  Outline: none ;
  Border : 0 ;
  Background-color : #0000  ;
  Border-radius : 5px ;
  Margin : 1% ;
  Margin-bottom : 15px ;
  Box-shadow :  0px 0px 3px #000 ;
  font-family: 'koho', sans-serif  ;
}
.placeholder
{
    position: absolute;
    top: 10px;
    right: 8px;
    font-size: 20px;
    padding: 0px 5px;
    color: rgb(59,59,59);
    transition: 0.3s;
    pointer-events: none;
}
.input:focus + .placeholder
{
    top: -10px;
    color: #e67e22;
    background-color: #0000;
}
#add_emailval:focus + .placeholder, #add_listval:focus + .placeholder
{
    top: -10px;
    color: rgb(59,59,59);
    background-color: #0000;
}
  #palm_bg{
    Position : fixed ;
    Top : 0 ;
    Left : 0 ;
    Width: 100% ;
    Height : 100% ;
    background-color: #e67e22 ;
    background-image: linear-gradient(to bottom, #cc5814, #000000);
    Display : flex ;
    Flex-direction : column ;
    Justify-content : center ;
    Align-items : center ;
    font-family: 'koho', sans-serif  ;
  }
 .palm_div{
    Min-Width: 85% ;
    Padding: 2% ;
    Margin: 1% ;
    Max-Height : 400px ;
    Min-Height : 200px ;
     background: rgba(255, 255, 255, 0.1);
    box-shadow: 0 20px 50px rgba(0, 0, 0, 0.15);
    backdrop-filter: blur(5px);
    transition:all 0.5s;
    Border-radius : 8px ;
    Display : flex ;
    Justify-content : enter ;
    Align-items : center ;
    flex-direction: column ;
  }
  #palm_switch{
    Width: 95% ;
    Padding: 0px ;
    Border-radius : 5px ;
    Justify-content : space-between ;
    display: flex ;
    margin-bottom: 10px ;
  }
  #switch_in{
    background-color: #cc5814 ;
  }
 .palm_btns{
    box-shadow: 0px 0px 3px #000 ;
   Width: 50%;
   margin: 2px ;
    padding-bottom: 10px ;
    padding-top: 10px ;
    Border-radius : 5px ;
   background-color: #0006 ;
   text-align: center ;
 }
.palm_one{
  Width: 95% ;
  Padding-top:  10px ;
  Padding-bottom: 10px ;
  background-color: #0006 ;
  margin-top: 20px ;
  margin-bottom: 15px ;
  text-align: center ;
  Border-radius : 5px ;
  Box-shadow :  0px 0px 3px #000 ;
}
#check_div span,.check_div span{
  margin: 2px ;
}
#check_div,.check_div{
  Display: flex ;
  align-items: center ;
}
.color_orange{
  color: #e67e22 ;
  
}
.majorbold_text{
  Font-weight: bold ;
  font-size: 20px ;
}
#film_tag span,#film_genre span{
   margin: 2px ;
   margin-right: 5px ;
}
.colr_orange{
  
}
.border_bottom{
  padding: 5px ;
  border: 0 ;
  border-bottom: 1px solid #4444 ;
  display: ;
}
#forgot_passval,#add_emailval,#add_listval{
  box-shadow : 0px 0px 3px rgb(59, 59, 59) ;
  color: #fff ;
}
#add_emailval, #add_listval{
  color: #fff ;
}
#forgot_passdiv,#add_emaildiv,#add_listdiv{
  position: fixed ;
  Width: 94% ;
  display: flex ;
  align-items: center ;
  justify-content: center ;
  padding: 2% ;
  background-color: #000 ;
  Border-radius : 5px ;
  box-shadow : 0px 0px 3px #000 ;
  bottom: -300px ;
  padding-bottom: 10px ;
  Padding-top : 10px ;
  margin-left: 1%;
  height: ;
  z-index: 7 ;
  transform-style: 0.5s ;
  
}
#add_emaildiv,#add_listdiv{
  display: flex ;
  flex-direction: column ;
}
#palm_google{
  Width: 94% ;
  Padding: 2% ;
   Padding-top:  8px ;
  Padding-bottom: 8px ;
  background-color: #ff7600 ;
  margin-top: 20px ;
  Text-align : right ;
  position: absolute ;
  Display: flex ;
  Justify-content : space-between ;
  Align-items : center ;
  Font-weight : bold ;
  font-size: 20px ;
  Border-radius : 5px ;
  box-shadow: 0px 0px 8px #000 ;
  bottom: 15px ;
}
#palm_signin{
  Display : none ;
  Wildth: 0 ;
}


#term_slide_exit{

position: absolute ;
top: 0; 
margin: 2% ;
margin-left: 0% ;
}
#term_slide{
  height: 100% ;
  width: 0% ;
 left: 0 ;
  position: fixed ;
  background-color: #000 ;
  display:  ;
  box-shadow: 0px 0px 3px #000;
  color:#fff; 
  overflow-y: scroll;
border-radius: 0 ;
  transition: 0.1s ;
  z-index:4;
}
#mail_error_divhide:hover{
  height: 59px ;
   overflow: visible ;
    text-overflow: clip ;
    white-space: normal ;
}
#mail_error_divhide{

  position: fixed ;

  bottom: -300px;
    transition: 0.5s;
  left: 0 ; 
  padding: 3% ; 
  padding-bottom: 10px ;
  Padding-top : 10px ;
  margin: 3% ; 
  width: 88% ;
  background-color: #000 ;
  font-size: 90% ;
  color: #fff ;
  border-radius: 9px ;
  box-shadow: 0px 2px 8px #000 ;
  z-index: 5 ;
  display: flex;
  align-items: center ;
  
}
#all_tabs{
  position: fixed ;
  Top: 0 ;
  Margin: 0 ;
  Left: 0 ;
  Height: 99% ;
  Width: 98% ;
  padding: 1% ;
  Display: none ;
  Flex-direction : column ;
  align-items: center ;
  Justify-content : center ;
  Background-color : #000 ;
  
}
Footer{
  Position: fixed ;
  Bottom: 0 ;
  left: 0 ;
  Margin: 0 ;
  ackground-color: #111313 ;
  background-color: #000 ;
  Width: 90% ;
  Padding-left: 5% ;
  Padding-right: 5% ;
  Padding-bottom: 8px ;
  Padding-top : px ;
  display: flex ;
  box-shadow: 0px 0px 3px #fff ;
  Justify-content: space-between ;
  transition: 0.5s ease ;
}
.two_footer{
  padding: 2% ;
  height: 50vh ;
  background-color : #e67e22 ;
  border-top-left-radius: 5px ;
  border-top-right-radius: 5px ;
}
#more_footbtn{
  Border-radius : 1009px ;
  Padding: 10px ;
  Padding-top : 10px ; 
}
.foot_items{
  Border-radius : 1009px ;
  Padding: 10px ;
  Padding-top : 10px ; 
}
.ripple {
  background-position: center;
  transition: background 0.8s;
}
.ripple:hover {
  background: #0006 radial-gradient(circle, transparent 1%, #e67e22 1%) center/15000%;
}
.ripple:active {
  background-color: #e67e22 ;
  background-size: 100%;
  transition: background 0s;
}
.foot_hover{
  border-top: 2px solid #e67e22 ;
  Border-radius: 0px ;
  Transition: .5s ;
  Padding-top: 12px ;
}
/*  rc     #rc      #rc{    .rc   */
#rc div{
  float: right ;
  background-color: #0006 ;
  width : 29px ;
  height : 30px ;
  display: flex ;
  align-items: center ;
  justify-content: center ;
  margin: 1px ;
  padding: 1px ;
  background-color: #e67e22 ;
  border-radius: 1px;
  box-shadow: 0px 0px 3px #000 ;
}
#rc{
  Display: none ;
  height: auto ;
  min-Height: 20px ;
  max-Height: 120px ;
  Width: 100px ;
  padding: 2px ;
  Background-color: #000 ;
  Border-radius: 5px ;
  position: fixed ;
  box-shadow: 0px 0px 13px #000 ;
  z-index: ;
}
.all_divs{
  Position: fixed ;
  Top: 0 ;
  Right: 0 ;
  Width: 98% ;
  Height : 98% ;
  background-color: #0f0f0f ;
  display: none ;
  padding: 1% ;
  transition: .15s ease ;
}
#viewtab{
  background-color: #000 ;
  ackground-color: #0f0f0f ;
  Display: block ;
  width: 0% ;
}
.all_inner{
  Diplay: flex ;
  flex-direction: column ;
  Position: absolute ;
  Justify-content: enter ;
  align-items : center ;
  width: 100% ;
  Height : 100% ;
  Top: 0 ;
  Left: 0 ;
  overflow-y: scroll ;
  overflow-x: hidden ;
}
#filmtab .all_inner{
  Display : flex ;
  
}
#searchtab .all_inner{
min-height : 100% ;
min-width : 100% ;
max-height : 100% ;
max-width : 100% ;
background-color : #000 ;
display: flex ;
flex-direction : column ;
}
#search_link{
  min-width: 80% ;
  padding: 3% ;
  padding-left: 4% ;
  padding-right : 4% ;
  display : flex ;
  align-items :center ;
  background-color : #4444 ;
  border-radius : 20px ;
  color: #ababab;
  font-family: 'koho', sans-serif ;
  justify-content : space-between ;
}
#search_tabtop{
  min-width : 100% ;
  min-height: 80px ;
  max-height: 80px ;
  background-color: #000 ;
  display: flex ;
  align-items: center ;
  justify-content: Space-around ;
  color: #ababab ;
  position : absolute ;
  top: 0;
}
#search_tagbottom{
  overflow-y : scroll ;
  min-width: 100% ;
  max-width: 100% ;
  min-height: calc(100% - 90px );
  max-height: calc(100% - 90px );
  top: 90px ;
  height : auto ;
  background-color: #000 ;
  position : absolute ;
  to: % ;
}
.swiper_containerthree, .swiper-wrapper{
  width : 100% ;
  height: 100% ;
}

#moretab{
  background: #0003 ;
  z-index: 2 ;
}
#more_bg{
  padding: 2% ;
  padding-top : 3% ;
  margin: 1% ;
  height: 40%;
  width: 94% ;
  position: fixed ;
  left: 0 ;
  bottom: -30px ;
  display: flex ;
  transition: 0.5s ease ;
  flex-direction: column ;
  justify-content: space-between ;
  align-items: center ;
  order-top-left-radius: 5px ;
  order-top-right-radius: 5px ;
  background-color: #242526 ;
  box-shadow: 0px 0px 8px #000 
  z-index:  ;
  color: #fff ;
  font-family: 'koho',sans-serif ;
  
}
#more_opt1{
  display: flex ;
  justify-content: Space-between ;
  width: 96% ;
  min-height: 20% ;
  background-color: #0000;
  border-radius: 3px ;
  align-items: center ;
}
#more_opt1 div span{
  font-size: 12px ;
}
#more_opt1 div{
  display: flex ;
  box-shadow: 0px 0px 3px #000 ;
  flex-direction: column ;
  justify-content: center ;
  align-items: center ;
  background-color: #000 ;
  border-radius: 8px ;
  adding-top: 30% ;
  adding-bottom: 30% ;
  height: 90% ;
  min-width: 30% ;
  margin: 1px ;
  padding : 1px ;
}
#more_opt2 section,#more_opt3 section{
  display: flex ;
  align-items : center ;
  padding-left: 5% ;
  color: ;
}
#more_opt2{
  display: flex ;
  justify-content: Space-around ;
  flex-direction: column ;
  width: 96% ;
  min-height: 60% ;
   background-color: #000;
  border-radius: 3px ;
}
#more_opt3{
  display: flex ;
  justify-content: space-between ;
  width: 96% ;
  min-height: 10% ;
  background-color: #000 ;
  border-radius: 3px ;
}
.ellipsis_text{
    white-space:nowrap ;
    overflow: hidden ;
    text-overflow: ellipsis;
}
@keyframes pulsey {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.2);
  }
  100% {
    transform: scale(1);
  }
}

.like_effect {
  animation: pulsey 0.5s ;
}

.pulse_effect:hover {
  animation: pulse 0.5s;
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.03);
  }
  100% {
    transform: scale(1);
  }
}

#film_plus,#feed_plus{
  display: flex ;
  align-items: center ;
  justify-content: center ;
  padding: 5px ;
  position: fixed ;
  bottom: 0 ;
  bottom: 10% ;
  right: 5% ;
  margin: 5% ;
  background-color: #e67e22 ;
  box-shadow: 0px 0px 8px #000 ;
  border-radius: 50% ;
  z-index: 3;
}

#search_quote{
  text-transform: capitalize;
  Color: #fff ;
  Margin: 5px ;
  Margin-top : 15px ;
  text-align: left ;
  Width: 90% ;
  
}

.option_item{
  Min-Width: 41% ;
  Padding: 3% ;
  Padding-top: 20px ;
  Padding-bottom : 20px ;
  Margin: 5px ;
  float: left ;
  Display: flex ;
  Align-items: center ;
  justify-content: space-between ;
  background-color: #e67e22 ;
  Border-radius: 3px ;
  color: #fff ;
  Font-weight : bold ;
}

.btn {
    transform: translateX(0%);
    transition-duration: 0.2s;
    user-select: none;
    cursor: pointer;
    text-decoration: none;
    overflow: hidden;
    position: relative;
    -webkit-transition-duration: .5s;
    font-family: 'Roboto';
}

.btn:after {
    content: "";
    top: 0;
    left: 0;
    position: absolute;
    z-index: -1;
    height: 100%;
    width: 0;
    background: rgba(255,255,255,0.3);
    transition-duration: 0.5s;
    -webkit-transition-duration: .5s;
}

.btn:hover:after {
    width:100%;
}
#quote_one{
  background-image:url('https://www.dropbox.com/s/e85d53ube6ikotx/HD-wallpaper-military-camouflage.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#quote_two{
  background-image:url('https://dl.dropbox.com/s/yfn21vzudi3vdbt/HD-wallpaper-3d-red-heart-valentines-day-heart-romance.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#quote_three{
  background-image:url('https://www.dropbox.com/s/wexe8mgixe02i4p/HD-wallpaper-music-sadness-sadness-cemetery-music-winter-boy-guitar-snow-darkness-grief.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#quote_four{
  background-image:url('https://www.dropbox.com/s/ce1qgdgf2m4wdt6/HD-wallpaper-law-law-and-order-lawyer.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#quote_five{
  background-image:url('https://www.dropbox.com/s/ztb4z7tmlafpasw/HD-wallpaper-spiderman-8k-spiderman-superheroes.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#quote_six{
  background-image:url('https://www.dropbox.com/s/bi0b3fqb4rf0zhc/HD-wallpaper-money-heist-netflix-la-casa-de-papel-money-heist-tv-shows.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#quote_seven{
  background-image:url('https://www.dropbox.com/s/mxlu7gmnz8s1umu/hd-wallpaper-history-vintage-style-series.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#quote_eight{
  background-image:url('https://www.dropbox.com/s/mazob1qxyoaulut/HD-wallpaper-books-the-roots-of-knowledge-roots-knowledge-knowing-growing-book-trees-branches-brains.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#quote_nine{
  background-image:url('https://www.dropbox.com/s/jsi21a1bwz9lvrg/hd-wallpaper-mafia-guy-male-guy-costume-background-black-man-hq-cigarette-hat-graphy-mafia-smoke-style.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#quote_ten{
  background-image:url('https://www.dropbox.com/s/3hzvwknytrzfe57/hd-wallpaper-modern-home-office-interior-design-office-home.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#quote_eleven{
  background-image:url('https://www.dropbox.com/s/e87uxmzw2sxsums/hd-wallpaper-wentworth-miller-prison-break-season-5-wentworth-miller-prison-break-tv-shows.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#quote_twelve{
  background-image:url('https://www.dropbox.com/s/cn7idh4jjqnczoo/peakpx.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#quote_thirteen{
  background-image:url('https://www.dropbox.com/s/ug8l0y5vz5gpers/hd-wallpaper-drug-drug-others.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#quote_fourteen{
  background-image:url('https://www.dropbox.com/s/xd7h4i0l081423t/hd-wallpaper-love-prison-love-theme-s.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#quote_fifteen{
  background-image:url('https://www.dropbox.com/s/nkuby7dtqb0eneb/hd-wallpaper-time-travel-929-cool-futuristic-hud-new-space-tech.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#quote_sixteen{
  background-image:url('https://www.dropbox.com/s/dzjv02tm7ljohr9/hd-wallpaper-evil-zombie-concept-art-zombie-concept-art-artist-artwork-digital-art.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#quote_seventeen{
  background-image:url('https://www.dropbox.com/s/euo4jodmwxy0drh/HD-wallpaper-alien-covenant-2017-alien-paradise-lost.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#quote_eightteen{
  background-image:url('https://www.dropbox.com/s/bggrj4iroqe9lip/hd-wallpaper-a-discovery-of-witches.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#quote_nineteen{
  background-image:url('https://www.dropbox.com/s/cb79d5euy8j4h3a/HD-wallpaper-the-originals-vampire-diaries-woman-fantasy-elijah-actress-people-klaus-tv-series-rebekah-male-black-blonde-man-claire-holt-girl-joseph-morgan-daniel-gillies-actor.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#quote_twenty{
  background-image:url('https://www.dropbox.com/s/hgg41opxz7w8ur0/hd-wallpaper-dark-zombie-cowboy-western.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#quote_twentyone{
  background-image:url('https://www.dropbox.com/s/dmow06f0nfe9vsb/HD-wallpaper-atomic-explosion-nuclear-bomb-apocalypse-nuclear-explosion.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#quote_twentytwo{
  background-image:url('https://www.dropbox.com/s/ba03tlhm1b9xtkb/hd-wallpaper-question-mark-illustration.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#quote_twentythree{
  background-image:url('https://www.dropbox.com/s/rqe7pt20wbfr7iq/HD-wallpaper-skull-sex-creative-concepts-in-designs.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#quote_twentyfour{
  background-image:url('https://www.dropbox.com/s/1z9yrocsj0e6u80/hd-wallpaper-earth-moon-space.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#quote_twentyfive{
  background-image:url('https://www.dropbox.com/s/itj66sdkr2zhtld/HD-wallpaper-skulls-texture-scary-horror-skulls.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#quote_twentysix{
  background-image:url('https://www.dropbox.com/s/lqn0mhno59ns44a/HD-wallpaper-life-fantasy-death-birth-cg.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
     margin-bottom : % ;
}
#quote_twentyseven{
  ackground-image:url('https://www.dropbox.com/s/lqn0mhno59ns44a/HD-wallpaper-life-fantasy-death-birth-cg.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
     margin-bottom : % ;
}
.quote_twentyeight{
  visibility: hidden ;
}
.home_headbg{
  display: flex ;
  width: 100vw ;
  position: fixed ;
  background: #e67e22 ;
  justify-content: center ;
  align-items: center ;
  z-index: 7 ;
}
.home_head{
  position: fixed ;
  top: 3% ;
  width: 70% ;
  background-color : #000 ;
  box-shadow: 0px 0px 8px #000 ;
  Border-radius : 3px ;
  padding: 5px ;
  z-index: 2 ;
  display: flex ;
  justify-content: space-between ;   
  aign-items : center ;
}
.home_head .nav-item{
   width: 25% ;
  text-align: center ;
  font-size: 12px ;
  font-family : Handlee ;
  color: #fff ;
  padding: 5px ;
  display: flex ;
  justify-content: center ;
  align-items: center ;
  border-radius: 3px ;
  margin: 2px ;
  padding-bottom: 5px ;
  padding-top: 5px ;
  background-color : #4444 ;
  
}
#home_movbtn{
  
  background-color : #e67e22 ;
}
/*
.line{
  align-self: flex-start;
    width:15px;
    height:4px;
    border-radius:50px;
    background:white;
    position:absolute;
    bottom: 1px;
    argin-left: -5px;
    transition:all 0.3s ease-in-out;
}
*/
.home_tabs{
  min-width: 100% ;
  max-width: 100% ;
  min-height: 100% ;
  max-height: 100% ;
  display: none ;
  position: fixed ;
  background-color: #000 ;
  overflow-y : scroll ;
}
.home_son{
  position: fixed ;
  top: 0 ;
  left: 0 ;
  min-width: 100% ;
  max-width: 100% ;
  min-height: 30vh ;
  height: 30vh ;
  background-color: #000 ;
  
  background-color : purpe ;
    ackground-image:url('https://www.dropbox.com/s/e85d53ube6ikotx/HD-wallpaper-military-camouflage.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
background-position: center center ;
}
.home_tabsinner{
  min-width: 99% ;
  mrgin-left: 1px ;
  mrgin-right: 1px ;
  max-width: 99% ;
  z-index: 3 ;
  background-color: #0009 ;
  border-top-left-radius: 25px ;
  border-top-right-radius: 25px ;
  position: absolute ;
  top: 20% ;  
  min-height: 50vh  ;
  height: auto ;
  display: flex ;
  padding: 2px ;
  padding-top: 5vh ;
  flex-direction: column ;
  box-shadow: 0px 10px 25px #000 ;
  overflow-y : sroll ;
  overflow-x : hidden ;
}
#home_movies{
  display: block ;
}
.slide_navclass{
  position: fixed ;
  width: 0% ;
  Height : 100% ;
  ackground-color: #242526 ;
  Background-color: #000 ;
  Top: 0 ;
  Right: 0 ;
  Z-index : 2;
  transition: .15s ;
}
#chn_searchtab{
  
}
.answer_top{
  display: flex ;
  align-items: center ;
  Width: 85% ;
  margin: 10px ;
  margin-left : px ;
  padding-left: 1% ;
  padding-right: 5% ;
  Box-shadow: 0px 0px 3px #000 ;
  justify-content: sace-between ;
}
    .tab-content img{
      width: 100% ;
    }
    .tab-content {
      display: none;
      padding: 10px;
      padding-left: 0px;
      padding-bottom: 15vh;
      overflow-y : scroll ;
      columns:3;
   columns-gap:0px;
    }
      .column_grid img,.circle_divclass img{
    width: calc(33.33% - 10px);
  margin-bottom: 10px;
  width:100%;
  object-fit: cover;
  height: 100%;
    }
    .column_grid,.circle_divclass{
       overflow-y : scroll ;
      columns:3;
   columns-gap:0px;
   display: block ;
    }
      #tag_mvdiv img{
   
  oject-fit: cover;
  width:100%;
    }
    #tag_modiv{ 
        overflow-y : scroll ;
      columns:3;
   columns-gap:0px;
    }

    .tab-content.active {
      display: block;
    }
    .p_header{
      font-family: Monospace ;
      font-weight: bold ;
    }
.answer_exit{
  margin-right: 3px ;
  background-color:  ;
}
#clear_searchbtn{
  color: #a9a9a9 ;
  display: flex ;
  align-self: center ;
  justify-self: flex-end ;
  argin-left: -3% ;
}
#search_answer{
  display: flex ;
  flex-direction : column ;
}
#search_inner .answer_top{
  width: auto ;
  max-width: 94% ;
  ackground-color: #e67e22 ;
  justify-content: space-between ;
}
#search_inner{
  min-width : 100% ;
  min-height : 100% ;
  max-width : 100% ;
  max-height : 100% ;
  overflow-y : scroll ;
}
#answer_input,#chan_input{
  outline: none ;
  border: 0 ;
  background-color : #fff ;
   Min-width: 250px ;
   width: 83vw ;
  padding: 2% ;
  Padding-top: 7px ;
  Padding-bottom: 7px ;
  background-color: #272727 ;
  Border-radius : 3px ;
  text-transform: capitalize;
font-size: 16px ;
font-family: 'koho', sans-serif;
color: #fff ;
}
#answer_input{
  padding-right: 5% ;
}
.search_answertabs{
  in-height: 92% ;
  min-width : 100% ;
  background-color: #000 ;
  margin : 1px ;
  display: none ;
}
#answer_movies,.search_tabstyle{
  display: flex;
  flex-wrap: wrap;
  verflow-y : scroll ;
}

#answer_movies section div::before, .search_tabstyle section div::before{
   content: "\f005";
  font-family: "Font Awesome 5 Free";
  font-weight: 900;
  color: gold ;
  margin-right: 1px;
}
#answer_movies section div, .search_tabstyle section div{
  position: absolute ;
  bottom: 0 ;
  right: 0 ;
  color: #fff ;
  background-color: #0006 ;
  width: 100% ;
  display: flex ;
  align-items: flex-end ;
  font-family: 'koho',sans-serif ;
}
#answer_movies section, .search_tabstyle section{
  flex-basis: calc(33.33% - 5px);
  in-width: 30px;
  min-height: 30vh ;
  box-shadow: 0px 0px 8px #000;
  background-color: #0003;
  position: relative ;
  margin: 2.5px;
   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}

#surf_list{
 overlow-y : scroll ;
  min-height: 100vh ;
  max-height: 100vh ;
  eight: 80% ;
  position: relatve ;
  Width : 100% ;
  padding-bottom: 30% ;
  Background-color : #000 ;
}
#search_tagtab{
 ovrflow-y : hidden ;
  min-hight: 100% ;
  height: 100vh ;
  position: relatve ;
  Width : 100% ;
  padding-bottom: 30% ;
  Background-color : #4444 ;
}
.search_tagspans{
  padding: 2% ;
  margin: 1% ;
  padding-left: 5% ;
  padding-right:  5% ;
  font-family : 'koho', sans-serif ;
  color: #fff ;
  display : flex ;
  align-items : center ;
  justify-content : center ;
  border-radius: 18px ;
  background-color : #4444 ;
  white-space : nowrap ;
}
#search_taghead{
  position: absolute ;
  min-height : 10px ;
  max-height : 50px ;
  min-width : 100% ;
  max-width : 100% ;
  background-color: #000 ;
  overflow-x : scroll ;
  display: flex ;
}
.swiper_containerfour{
  min-width : 96% ;
  max-width : 96% ;
  background-color : #e67e22 ;
  margin: 2% ;
  margin-top: 50px ;
  margin-left: 0 ;
  margin-right: 0 ;
  position: absolute ;
}
#search_tagval{
  margin: 0 ;
  padding : 0 ;
  
}
.son_slider{
 min-width : 100% ;
 max-width : 100% ;
  height : auto ;
}
.view_slider,.post_board,#actor_latest {
    font-family: sans-serif;
    scroll-snap-type: x mandatory;    
    display: flex;
    -webkit-overflow-scrolling: touch;
    overflow-x: scroll;
    width: 100% ;
    Height : auto :
    ackground-color: #fff ;
}
.macro_board,.vote_bg {
    font-family: sans-serif;
    scroll-snap-type: x mandatory;    
    display: flex;
    -webkit-overflow-scrolling: touch;
    overflow-x: scroll;
    
    width: 100% ;
    Height : auto :
    ackground-color: #fff ;
}
.view_board {
    font-family: sans-serif;
    /*
    scroll-snap-type: x mandatory;    
    -webkit-overflow-scrolling: touch;
    overflow-x: scroll;
    */
    overflow-x: hidden ;
    display: flex;
    width: 100% ;
    Height : auto :
    ackground-color: #fff ;
}

.slide_board {
    box-shadow: 0px 0px 3px #000 ;
    border-right: 1px solid white;
    padding: 1% ;
    Min-width: 98%  ;
    Border-radius: 0.1px;
    Margin: 1% ;
    Margin-top : 0% ;
    outline: none ;
    Border: 0 ;
    height: 80vh ;
    transition: 0.5s ease ;
    eight: 0; /* set the initial height of the wrapper to zero */
  padding-bottom: calc(100% / aspect-ratio); /* set the padding-bottom to maintain the aspect ratio
  
    scroll-snap-align: start;
  */
    text-align: center;
    position: relative;
background-color:#e67e22;
position: relative;
 
 
   no-repeat-center-center:fixed;

     -webkit-background-size: contain ;
     -moz-background-size: contain ;
     -o-background-size: contain ;
     background-size: contain ; 
     background-repeat: no-repeat ;
     background-position: center center ;
}
#status_bg{
  width: 100% ;
  height: auto ;
  background-color : #000 ;
  poition : relative ;
  border-radius: 3px ;
  margin-bottom: 5% ;
}
.one_status{
  min-width: 100% ;
  min-height: 50vh ;
  max-width: 100% ;
  max-height: 120vh ;
  border-radius: 3px ;
  box-shadow: 0px 0px 3px #000 ;
  color: #fff ;
  font-family: 'koho', Sans-Serif;
}
.status_inner{
  min-width: 100% ;
  min-height: 100% ;
  max-width: 100% ;
  max-height: 100% ;
  display: flex ;
  flex-direction: column ;
  
}
.status_top{
  min-width: 100% ;
  min-height: 70vh ;
  max-width: 100% ;
  max-height: 70vh ;
  background-image:url('https://www.dropbox.com/s/uwm01syutz5t66h/images%20%2820%29.jpeg?raw=1');
ackground: -webkit-linear-gradient(90deg,rgba(0,0,0,1),  transparent,transparent ),url("https://www.dropbox.com/s/k13vpb2y28886j7/bulgasal%203.jpg?raw=1");
 
   no-repeat-center-center:fixed;
border-top-left-radius: 3px ;
border-top-right-radius: 3px ;
     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
     background-size: cover; /* or 'contain' depending on your desired effect */
      background-position: center;
      
      transition: background-size 0.5s ease; /* Add a transition for smooth animation */
}
.status_bot{
  width: 94% ;
  padding: 3% ;
  display: flex ;
  align-items: flex-start ;
}
.status_image{  
  min-height: 120px ;
  min-width: 100px ;
  max-height: 95px ;
  max-width: 75px ;
  border-radius: 3px ;
  background-image:url('https://www.dropbox.com/s/uwm01syutz5t66h/images%20%2820%29.jpeg?raw=1');
ackground: -webkit-linear-gradient(90deg,rgba(0,0,0,1),  transparent,transparent ),url("https://www.dropbox.com/s/k13vpb2y28886j7/bulgasal%203.jpg?raw=1");
 
   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; /* or 'contain' depending on your desired effect */
      background-position: center center;
      
      transition: background-size 0.5s ease; /* Add a transition for smooth animation */
      margin-right: 3% ;
}
.status_side .son_filmgen{
  flex-wrap: wrap ;
  min-width: 100% ;
  max-width: 100% ;
  hite-space: normal ;
}
.status_side{
  display: flex ;
  flex-direction: column ;   
  width: calc(98% - 80px);
  idth: 100% ;
  ackground-color: red;
}
.vote_bg{
  height: auto ;
  align-items: center ;
    justify-content: center ;
}
.vote_board {

    box-shadow: 0px 0px 3px #000 ;

    border-right: 1px solid white;
    padding: 1% ;
    Min-width: 45%  ;
    Border-radius: 0.1px;
    Margin: 1% ;
    Margin-top : 0% ;
    outline: none ;
    Border: 0 ;
    height: 50vh   ;
    transition: 0.5s ease ;
  padding-bottom: calc(100% / aspect-ratio); /* set the padding-bottom to maintain the aspect ratio */
  
    scroll-snap-align: start;
    text-align: center;
    position: relative;
background-color:#e67e22;
position: relative;
 background-image:url('https://www.dropbox.com/s/uwm01syutz5t66h/images%20%2820%29.jpeg?raw=1');
ackground: -webkit-linear-gradient(90deg,rgba(0,0,0,1),  transparent,transparent ),url("https://www.dropbox.com/s/k13vpb2y28886j7/bulgasal%203.jpg?raw=1");
 
   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
     background-size: cover; /* or 'contain' depending on your desired effect */
      background-position: center;
      
      transition: background-size 0.5s ease; /* Add a transition for smooth animation */
    }

    .vote_board:hover {
      background-size: 120%; /* Set the desired size when hovered */
    
}
.slide_section {
    box-shadow: 0px 0px 3px #000 ;
    border-right: 1px solid white;
    padding: 1% ;
    Min-width: 98%  ;
    Border-radius: 5px;
    Margin: 1% ;
    outline: none ;
    Border: 0 ;
    height: 250px ;
    scroll-snap-align: start;
    text-align: center;
    position: relative;
background-color:#0006 ;
 background-image:url('https://www.dropbox.com/s/uwm01syutz5t66h/images%20%2820%29.jpeg?raw=1');
background-repeat: repeat-x; 
background-repeat: repeat-y;
   no-repeat-center-center:fixed;
background-repeat: no-repeat ;
     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
.son_section {
    box-shadow: 0px 0px 0px #000 ;
    border-right: 1px solid white;
    padding: 1% ;
    Margin: 1% ;
    Min-width: 96%  ;
    max-width: 96%  ;
    Border-radius: 5px;
    outline: none ;
    Border: 0 ;
    height: 250px ;
    scroll-snap-align: start;
    text-align: center;
    position: relative;
ackground-color:#e67e22;
display: flex ;
flex-direction: column ;
     align-items: center ;
     justify-content: center ;
background-repeat: repeat-x; 
background-repeat: repeat-y;
   no-repeat-center-center:fixed;
background-repeat: no-repeat ;
     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
.actor_section {
    box-shadow: 0px 0px 0px #000 ;
    border-right: 1px solid white;
    padding: 1% ;
    Min-width: 96%  ;
    Max-width: 96%  ;
    Border-radius: 5px;
    Margin: 1% ;
    outline: none ;
    Border: 0 ;
    height: 300px ;
    scroll-snap-align: start;
    text-align: center;
    position: relative;
ackground-color:#e67e22;
display: flex ;
flex-direction: column ;
     align-items: center ;
     justify-content: center ;
background-repeat: repeat-x; 
background-repeat: repeat-y;
   no-repeat-center-center:fixed;
background-repeat: no-repeat ;
     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
.son_innerboard{
  min-height: 55% ;
  min-width: 95% ;
  margin-bottom : 2% ;
  border-radius: 5px ;
  box-shadow: 0px 0px 3px #000 ;
}
.actor_innerboard{
  min-height: 60% ;
  max-height: 60% ;
  min-width: 95% ;
  max-width: 95% ;
  margin-bottom : 2% ;
  border-radius: 5px ;
  box-shadow: 0px 0px 3px #000 ;
  display : flex ;
  align-items: center ;
  justify-content : space-between ;
  overflow-x : hidden ;
}
#known_latest{
  min-height: 100% ;
  min-width: 33% ;
  max-height: 100% ;
  max-width: 33% ;
  border-radius: 3px ;
  box-shadow : 0px 0px 3px #000 ;
  no-repeat-center-center:fixed;
background-repeat: no-repeat ;
     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
.son_innertwo{
  display: flex ;
  align-items: flex-start ;
  min-width: 100% ;
  min-height: 43% ;
  max-width: 100% ;
  max-height: 45% ;
  margin-left: 5% ;
}
.son_filmimage{
  min-width: 25% ;
  min-height: 100% ;
  max-width: 25% ;
  max-height: 100% ;
  background-color: #0000 ;
  box-shadow: 0px 0px 3px #000 ;
  border-radius: 5px ;
   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
     margin-right: 2% ;
}
.son_filmmore{
  display: flex ;
  flex-direction : column ;
  color: #fff ;
  ackground-color: #242526 ;
  font-family: 'koho', sans-serif ;
  align-items : flex-start ;
  width: 70% ;
}
.son_filmname{
  font-weight: 1000 ;
  font-size: 16px ;
}
.son_filmgen .tag{
  float: left ;
  font-size: 12px ;
}
.son_filmgen{
  width: 85% ;
  align-self: flex-start ;
  text-align: left ;
    white-space:nowrap ;

    overflow: hidden ;

    text-overflow: ellipsis;
}
.son_filmtwo{
  display: flex ;
}
.son_filmimdb{   
  margin-right : 6px ;
  font-size: 12px ;
}
.son_filmimdb::before {
  content: "\f005";
  font-family: "Font Awesome 5 Free";
  font-weight: 900; 
  color: gold ;
  display: inline-block;
  margin-left : 3px ;
  margin-right : 3px ;
}
.son_filmfile::before {
  content: "\f114";
  font-family: "Font Awesome 5 Free";
  font-weight: 900; 
  color: gold ;
  display: inline-block;
  margin-left : 3px ;
  margin-right : 3px ;
}
.son_filmfile{
  margin-right : 6px ;
  font-size: 12px ;
}
.son_filmlen{
  margin-right : 6px ;
  font-size: 12px ;
}


.board_more div{
  margin: 1px ;
}
.board_name{
  font-size: 17px ;
  font-weight: bold ;
}
.board_imdb{
  padding: 3% ;
  padding-bottom: 5px ;
  padding-top: 5px ;
  margin-right: 15px ;
  background-color: #e67e22 ;
  Border-radius : 3px ;
  display: flex ;
  min-width: 25px ;
  max-width: 25px ;
  flex-direction : row ;
  align-items: center ;
  justify-content: center ;
    white-space:nowrap ;
float: right ;
    overflow: hidden ;

    text-overflow: ellipsis;
}
.board_info span{
  font-size: 14px ; 
}
.board_info{
  display: flex ;
  white-space:nowrap ;
  align-items : center;
}
.circle {
  width: 30px;
  height: 30px;
  background-color: #555;
  color: white;
  padding: 65px ;
  border-radius: 50%;
  text-align: center;
  line-height: 30px;
  font-size: 16px;
}

.board_more{
  border-right: 2px solid #e67e22 ;
  display: flex ;
  padding: px ;
  flex-direction: column ;
  color: #fff ;
  background-color: #4444 ;
  position: absolute ;
  bottom: 0.2px ;
  right: 2px ;
  width: 100% ;
  font-family: 'koho', sans-serif ;
  text-align: right ;
  align-items: flex-end ;
}
.latest{
  width: 98% ;
  height: 300px ;
  padding: 1% ;
  margin-top: 5px ;
  margin-bottom: 5px ;
  display: flex ;
  flex-direction: column ;
  background-color :  ;
    position: relative ;
}
.latest_top{
  display: flex ;
  height: 8% ;
  padding-left : 5px ;
  justify-content: space-between ;
  font-weight : 509 ;
  Color: #fff ;
  font-family: 'koho', sans-serif ;
}
.latest_bot{
  display: flex ;
  height: 98% ;
  overflow-x: scroll ;
    position: relative ;
  background-color: # ;
}
#trending_value:hover {
  ext-decoration : underline ;
  background-color : #2779d0 ;
  color: #fff ;
  transition : all 0.5s ease ;
}
#trending_value{
  padding : 2% ;
  padding-left: 5% ;
  padding-right: 5% ;
  background-color : #4444 ;
  color : #2779d0 ;  
  display: flex ;
  justify-content: center ;
  align-items: center ;
  font-family : 'koho', sans-serif ;
  font-weight: 500 ;
  margin-left: 2% ;
  border-radius: 3px ;
  box-shadow : 0px 0px 3px #000 ;
}
.rank_bot{
  Width: 96% ;
    Height: 250px ;
    margin: 1% ;
    padding: 1% ;
    Display: flex ;
    overflow-x: scroll ;
} 
.late_kids{
  min-width: 180px ;
  min-height: 90% ;
    background-image:url('https://www.dropbox.com/s/e48oj5gomv0faji/images%20%2810%29.jpeg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
     margin: 2.5px ;
     background-position: center center ;
}
.actor_frame{
   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
     margin: 2.5px ;
     background-position: center center ;
    height: 280px ;
    min-width: 280px ;
    max-width: 280px ;
    border-radius: 50% ;
    box-shadow: inset 0px 0px 3px #000 ;
}
.rank_kids{
  min-width: 150px ;
  min-height: 90% ;
    ackground-image:url('https://www.dropbox.com/s/2uik0l9wkyg9fd1/images%20%2823%29.jpeg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
     position: relative ;
     margin: 2.5px ;
     box-shadow: 0px 0px 3px #000 ;
     display: flex ;
     flex-direction: column ;
     justify-content: center ;
     align-items: center ;
}
.rank_no{
    font-size: 12px ;
    position: absolute  ;
    right: 0 ;
    top: 0 ;
    padding: 10px ;
    Border-radius: 2px ;
    border-bottom-left-radius: 20px ;
    Border-top-right-radius: px ;
    margin-bottom: -2px ;
    margin-right: -2px ;
    box-shadow: 0px 0px 8px #000 ;
    background-color: #000 ;
    font-family: 'Montserrat', sans-serif;
font-weight: bold;
font-size: 2rem;
  color: white;
  -webkit-mask-image: linear-gradient(to bottom, transparent, white 50%);
  mask-image: linear-gradient(to bottom, transparent, white 50%);

}
#second_partview{
  background-color: #242526 ;
  width: 100% ;
  pdding: 1% ;
  Padding-top : 4% ;
  Padding-bottom : 14% ;
  border-top-left-radius: 10px ;
  border-top-right-radius: 10px ;
  box-shadow: 0px 0px 30px #000 ;
    position: relative ;
}
#match_bg{
  Width: 94% ;
  min-height: 400px ;
  padding: 3% ;
  padding-top : 4% ;
  display: flex ;
  flex-direction: column ;
  ustify-content: center ;
  align-items : center ;
  background-color: #0006 ;
  margin-bottom: 30px ;
  box-shadow: 0px 0px 3px #000 ;
  Border-radius : 5px ;
}
#match_up{
  width: 98% ;
  background-color : #242526;
  height: auto ;
  margin: 10px ;
  padding: 10px ;
  Border-radius : 5px ;
   display: flex ;
   justify-content: space-between ;
}
#match_one{
  display: flex ;
  flex-direction: row ;
  width: 70% ;
}
#match_img{
   background-image:url('https://www.dropbox.com/s/e85d53ube6ikotx/HD-wallpaper-military-camouflage.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
     min-height: 80px ;
     Min-Width : 80px ;
     margin-right: 10px ;
     background-color: #0006 ;
     box-shadow: 0px 0px 3px #000 ;
}
#match_two{
  display: flex ;
  flex-direction: column ;
  color : #fff ;
  font-size: 70% ;
  justify-content: space-between ;
  max-Width: 80% ;
}
.bold_text{
  font-weight : bold ;
}
#match_imdb, #match_time{
  font-size: 12px ;
  margin-left: 5px ;
}
#match_imdb::before {
  content: "\f005";
  font-family: "Font Awesome 5 Free";
  font-weight: 900;
  color: gold ;
  margin-right: 1px;
}

#match_box{
  Width: 100% ;
  height: 250px ;
  background-color: #0006 ;
  box-shadow: 0px 0px 3px #000 ;
  Border-radius : 5px ;
   display: flex ;
   flex-direction: column ;
}
#match_btn{
  width: 90% ;
  padding-bottom: 10px ;
  padding-top: 10px ;
  margin: 10px ;
  background-color: #fff ;
  Border-radius: 23px ;
  text-align: center ;
}
.modal {

    width: 90%;

    height: 200px;
    overflow: hidden;
    ackground: #34495e;
    background: #242526 ;
    position: fixed;
    bottom: -300px;
    right: 20px;
    transition: 1s;
    box-sizing: 10 ;
    box-shadow: 0px 0px 3px #000 ;
}

.modal img {
    width: 35%;
    height: 200px;
    float: left;
}
#modal_note,#modam_note{
  display: -webkit-box;
        -webkit-line-clamp: 5;
        -moz-line-clamp: 5;
        -webkit-box-orient: vertical;
        -moz-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
}
.modal .content0 {
    width: 65%;
    padding: 20px;
    Padding-top : 2px;
    box-sizing: border-box;
    float: left;
    color: #fff;
}

.content0 h1 {
    font-size: 20px;
}

.content0 p {
    font-size: 15px;
}

.content0 a {
    display: inline-block;
    background: #e74c3c;
    padding: 10px 30px;
    border-radius: 5px;
    color: #fff;
    cursor: pointer;
    transition: 0.5s;
     display : flex ;

    align-items : center ;

    justify-content : center ;
}

.content0 a:hover {
    background: #c0392b;
}

.icon {
    position: absolute;
    z-index: 9999;
    top: 14px;
    right: 14px;
    font-size: 20px;
    color: #000;
    opacity: 0.7;
    cursor: pointer;
    transition: 0.5s;
}

.icon:hover {
    transform: rotate(90deg);
    opacity: 1;
}




.modam {
    width: 90%;
    height: 200px;
    overflow: hidden;
    background: #34495e;
    position: fixed;
    bottom: -300px;
    right: 20px;
    z-index: 5 ;
    transition: 0.5s;
    display: none ;
    /*  remove the display if you still want to use it */
}

.modam img {
    width: 35%;
    height: 200px;
    float: left;
}

.modam .content0 {
    width: 65%;
    padding: 20px;
    box-sizing: border-box;
    float: left;
    color: #fff;
}



#macro_bg{
  width: 0 ;
  height: 100% ;
  z-index: 15;
  background-color: #fff  ;
   background-image: linear-gradient(to bottom, #000 , #000000 );
   box-shadow :inset 0px 0px 8px #000 ;
  position: fixed ;
  transition: 0.5s ease ;
  top: 0 ;
  left: 0 ;
}
#macro_inner{
  height: 100% ;
  width: 100% ;
  padding: 0% ;
  background : #000 ;
  

  overflow-x: hidden ;

  overflow-y: scroll ;
  position: relative ;
  transition: all 0.5s ease ;
}
.macro_board{
  
  box-shadow: 0px 0px 5px #000 ;
  border-radius: 5px ;
}
#macro_top{
  min-width: 100% ;
  background-color: #0002 ;
  height: 35vh;
  border-top-left-radius: 5px ;
  display: flex ;
  flex-direction: column ;
  justify-content: center ;
  align-items: center ;
    background-image:url('https://i.imgur.com/CU6MnFO.jpg');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
  border-top-right-radius: 5px ;
  Border-radius : 5px ;
    scroll-snap-align: start;
    text-align: center;
margin: 2px ;
margin-top : 0px ;
margin-bottom : 0px ;
}
#macro_video{
   margin: 0 ;
    padding: px ;
    padding-top : px ;
    width: 100% ;
    dsplay: none ;
    height: auto ;
}
#m_profile div{
  width:  48% ;
  height:  93% ;
  border-radius: 3px ;
  margin: 1% ;
  ackground-color: purple ;
  padding: 5px ;
   
}
#m_profname{
  font-family: Monospace ;
  color: #fff ;
  font-size: 20px ;
  font-weight : bold ;
  text-align: center ;
  display: flex ;
  align-items: center ;
  justify-content: center ;
  argin: 88px ;
  width: ;
  flex-wrap: wrap ;
}
#major_intel span{
  font-size: 12px ;
  color: #fff ;
  font-family : 'koho', sans-serif ;
  margin : 1% ;
}
#major_intel{
  width: 100% ;
  display: flex ;
  background-color : #0000 ;
  align-items : center ;
  justify-content : center ;
  
}
#intel_adult{
  display: none ;
  align-self: start ;
}
#m_profimg,.m_profimg,#m_profmore{
   background-image:url('https://www.dropbox.com/s/bu18tg6m5mlu7wd/MV5BOGNkNWY3NmMtMDQ3NS00NWUzLWExYTMtMzFmZDg1ZWNiMTg0XkEyXkFqcGdeQXVyMTA1OTcyNDQ4._V1_FMjpg_UX1000_.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
     background-color :;
}
.m_profvid{
   ackground-image:url('https://www.dropbox.com/s/bu18tg6m5mlu7wd/MV5BOGNkNWY3NmMtMDQ3NS00NWUzLWExYTMtMzFmZDg1ZWNiMTg0XkEyXkFqcGdeQXVyMTA1OTcyNDQ4._V1_FMjpg_UX1000_.jpg?raw=1');

   no-repeat-center-center:fixed;
max-width: 150px ;
margin: 0 ;
     ackground-size: cover; 
     background-color :;
}
.moment_vid{
  
}
 #morefilm_val,#checkfilm_val{
     width: 100% ;
    max-height: 350px ;
    display: flex ;
    overflow-x: scroll ;
   
  }
   #morefilm_val div{

    background-image:url('https://www.dropbox.com/s/bu18tg6m5mlu7wd/MV5BOGNkNWY3NmMtMDQ3NS00NWUzLWExYTMtMzFmZDg1ZWNiMTg0XkEyXkFqcGdeQXVyMTA1OTcyNDQ4._V1_FMjpg_UX1000_.jpg?raw=1');




   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover ; 
     min-width : 200px ;
     height : 300px ;
     margin: 0.1vh ;
    
  }
  #film_homepage a{
    text-decoration: none ;
    color: #fff ;
    word-break : break-all ;
  }
 #closet_webval a{
    text-decoration: none ;
     font-size : 12px ;
   margin-left : 0 ;
    word-break : break-all ;
    color: #7c7c7c ;
  }
  #moment_val{
     width: 100% ;
    max-height: 260px ;
    display: flex ;
    overflow-x: scroll ;
   
  }
  #cast_val{
     width: 100% ;
    max-height: 260px ;
    display: flex ;
    overflow-x: scroll ;
   -webkit-overflow-scrolling: touch;
   scroll-behavior: smooth;
  transition: scroll-left 0.5s ease-in-out;
}
.m_castdiv{
  width:  600px ;
  height:  250px ;
  padding: 1px ;
  margin: 2px ;
  margin-left : 0px ;
  display: flex ;
  justify-content: center ;
  align-items : center ;
  background-color : #0000 ;
  flex-direction: column ;
}
.m_castimg{
  min-width:  200px ;
  max-width:  200px ;
  min-height:  200px ;
  Border-radius: 8px ;
  margin: 0px ;
  box-shadow:inset 0px 0px 3px #000 ;
  margin-bottom : 1px ;
   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 



}
#m_imgone{
  background-image:url('https://www.dropbox.com/s/rlltjswsuwww457/9hJ59ogLxgcZDkvfGcjLHqbB5Pl.jpg?raw=1');
}
#m_imgtwo{
  background-image:url('https://www.dropbox.com/s/67icm232161cm1p/images%20%2835%29.jpeg?raw=1');
}
#m_imgthree{
  background-image:url('https://www.dropbox.com/s/kba28bqn9qwq4pl/images%20%2834%29.jpeg?raw=1');
}
#m_imgfour{
  background-image:url('https://www.dropbox.com/s/rfla5d7sjlyor31/HD-wallpaper-joseph-morgan-the-vampire-diaries-the-originals-black-man-bw-klaus-tv-series-white-actor.jpg?raw=1');
}
#m_imgfive{
  background-image:url('https://www.dropbox.com/s/05wdzb7s4qesalv/kOJelnLSb89SeivbOCt1l94Hz2d.jpg?raw=1');
}

.m_castname{
  font-weight: bold ;
  font-size: 16px ;
  max-width: 90% ;
     white-space:nowrap ;
    overflow: hidden ;
    text-overflow: ellipsis;
}
.m_castchar{
  max-width: 90% ;
  font-size: 12px ;
     white-space:nowrap ;
    overflow: hidden ;
    text-overflow: ellipsis;
}
#m_profile{
  width: 100% ;
  height: 35vh ;
  box-shadow: 0px 0px 1px #000 ;
  margin-top: 5px ;
  display: flex ;
  border-radius: 3px ;
  position: bsolute ;
  margin-bottom: 20px ;
}
.major_btns{
    padding: 2% ;
    padding-left: 10px;
    width: 30% ;
    padding-bottom: 1.5vh ;
    padding-top: 1.5vh ;
    eight: 100% ;
    border-radius: 8px;
    margin: 1px ;
    text-align:center;
    background-color: #0000 ;
    font-family: 'koho', Sans-Serif;
}
#major_switch{
    min-width: 80% ;
    margin-top: 3vh ;
    max-width: 100% ;
    padding: 2px ;
   
    height: 5.5vh ;
    background-color:#0009  ;
    border-radius: 5px;
    ox-shadow:0px 0px 5px #fff ;
    display: flex ;
    justify-content: space-around;
    align-items: center;
    color: #c7d8dc32;
    position: ixed ;
    top: 1% ;
    left: 0 ;
    z-index: 2 ;
    transition: all 0.5s ease ;
}
.m_switch{
    bckground-color:#e67e22;
    ox-shadow:  0px 0px 2px #e67e22 ;
    font-weight: bold ;
    border-bottom : 1px solid #fff ;
    border-radius: 0;
    text-transform : capitalize ;
    color: #fff ;
}
#major_bg{
  min-width: 100%  ;
  max-width: 100%  ;
  min-height: 100% ;
  max-height: 100% ;
  position: ixed ;
  overflow-: scroll ;
  margin-top: 10px ;
  left: 0 ;
  top: 8% ;
  background-color: #0002 ;
  transition: all 0.5s ease ;
transition: scroll-behavior 0.5s ease;
}


#major_bg.scroll-top {
  scroll-behavior: smooth;
}
.major_kids{
  min-width: 100%  ;
  overflow-y: scroll ;

  max-width: 100%  ;
overflow-x: hidden ;
  min-height: 100vh ;
  max-height: 100% ;
  position: ixed ;
  margin-top: 10px ;
  left: 0 ;
  background-color: #000 ;
  display: none ;
  scroll-snap-align: start;
}
#review_bot{
  
  display: flex ;
  justify-content: pace-between ;
  align-items: center ;
}
#review_size{
  min-width: 98vw ;
  min-height: 2vh  ;
  max-width: 98vw ;
  max-height: 40vh  ;
  position: fixed ;
  padding: 2% ;
  padding-bottom : 5px  ;
  padding-left : 5px  ;
  argin: 2% ;
  margin-bottom : 0 ;
  bottom: 0 ;
  left: 0 ;
  box-shadow: 0px 0px 8px #000 ;
  border-top-left-radius: 8px ;
  border-top-right-radius: 8px ;
  border-radius: 0px ;
  background-color: #232424 ;
  display : flex ;
  z-index: 2 ;
  flex-direction :column ;
  verflow-y : scroll ;
}
#review_foot{
  min-height: auto ;
  max-height: 100px ;
  min-width: 100% ;
  max-width: 100% ;
  background-color: #0000 ;
  display: flex ;
  overflow-x: scroll ;
}
#review_foot img, #review_foot video{
  min-width: 50px;
  min-height : 50px;
  min-width: 50px;
  min-height : 50px;
  border-radius: 5px ;
  margin: 2px ;
  foat: right ;
}
#rev_bot1,#rev_bot2{
  display: flex ;
  align-items: center ;
  justify-content : pace-between ;
  width: 80% ;
  ackground: #e67e22 ;
}
#rev_bot2{
  justify-content : space-between ;
  
  
}
#rev_bot2{
  width: 20% ;
  color: #fff ;
}
#rev_img{
  min-width : 40px ;
  min-height : 40px ;
  border-radius: 50% ;
  background-color: #aaaaaa ;
}
#rev_send{
  margin-right: 10% ;
}
#rev_text{
  height: auto ;
  width: 83% ;
  background-color: #0000 ;
  outline: 0 ;
  border: 0 ;
  color: #fff ;
  font-size: 15px ;
  border-bottom: 1px solid #fff ;
  margin-left: 2px ;
  overflow-y : scroll ;
}
#review_inner{
  min-height: 100vh ;
  min-width: 100vw ;
  max-height: 100% ;
  max-width: 100% ;
  overflow-y: scroll ;
  background-color: #000 ;
  transition: all 0.5s ease ;
}
.major_imdb span{
  margin: 1px ;
}
.major_imdb{
  padding: 1% ;
  margin : 1% ;
  padding-bottom: 5px ;
  padding-top: 5px ;
  background-color: #e67e22 ;
  Border-radius : 3px ;
  display: flex ;
  max-width: 105px ;
  flex-direction : row ;
  align-items: center ;
  justify-content: center ;
    white-space:nowrap ;
float: right ;
color: #fff ;
    overflow: hidden ;

    text-overflow: ellipsis;
}
#major_view{
  display: block ;
}

.no_scrollbar::-webkit-scrollbar-thumb {

    background: #0000;
    border-radius:30px   ;
}
.no_scrollbar::-moz-scrollbar-thumb {
    background: #0000;
    border-radius:30px   ;
}
 .lit_txt,#lit_txt{

    margin: 1px ;
    margin-bottom : 2%  ;
    padding:  3px ;
padding-left: 5px ;
     border-left: 3px solid #e67e22 ;
border-radius: 3px ;
    font-family: 'koho', sans-serif ;
    font-size: 23px ;
    font-weight: bold ;
    color: #fff ;
 }
 .lit_note{
   color: #fff ;
   font-size: 16px ;
   margin: 1px ;
 }
 #award_txt{

    margin: 1px ;
    margin-bottom : 20px  ;
    padding:  3px ;
pdding-left: 5px ;
mrgin-left: 3% ;
     order-left: 1px solid #e67e22 ;
border-radius: 3px ;
     font-family: 'koho', sans-serif ;
    font-size: 20px ;
    font-weight: bold ;
    color: #fff ;
 }
 #jolly_element{
   max-height : 50vh ;
   overflow-y : hidden ;
   overflow-x : hidden ;
 }
 #jolly_head{
   min-width : 98% ;
   max-width : 98% ;
   display : flex ;
   align-items: center ;
   justify-content : space-between ;
 }
 #jolly_val{
   width: 100% ;
   min-height: 150px ;
   display: flex ;
   align-items: center ;
   flex-direction : column ;
   verflow-x: scroll ;
 }
 .jolly_cover{
   width: 90% ;
   min-height: 160px ;
   box-shadow: 0px 0px 0px #000 ;
   border-radius: 3px ;
   padding: 3% ;
   background-color: #2222 ;
   display: flex ;
   align-items: flex-start ;
   margin-left: 2% ;
   margin-top: 1% ;
   margin-bottom: 1% ;
 }
 .jolly_img{
   min-height: 150px ;
   min-width : 120px ;
   max-height: 150px ;
   max-width : 120px ;
   margin-right: 2% ;
     no-repeat-center-center:fixed;
background-repeat: no-repeat ;
     -webkit-background-size: cover ;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover ; 
     ackground-position: center center ;
     background-color : #0003 ;
     border-radius: 3px ;
     box-shadow: 0px 0px 1px #000 ;
 }
 .jolly_side{
   display: flex ;
   flex-direction: column ;
   width: calc(98% - 140px );
   align-items: flex-start ;
   font-family: 'koho', sans-serif ;
   color: #fff ;
 }
 .jolly_top{
   font-size: 20px ;
   font-weight: 500 ;
    white-space:nowrap ;
    overflow: hidden ;
    text-overflow: ellipsis;
 }
 .jolly_mid{
   
 }
 .jolly_bot span{
   font-size: 12px ;
   color: #676767;
 }
 .jolly_bot{
   width : 100% ;
   display: flex ;
   justify-content: space-between ;
 }
 .jolly_rate::before {
 content: "\f005";
  font-family: "Font Awesome 5 Free";
  font-weight: 900; 
  color: gold ;
  display: inline-block;
  margin-right: 1px ;
}
  #trailer_val div{
    background-image:url('https://www.dropbox.com/s/bu18tg6m5mlu7wd/MV5BOGNkNWY3NmMtMDQ3NS00NWUzLWExYTMtMzFmZDg1ZWNiMTg0XkEyXkFqcGdeQXVyMTA1OTcyNDQ4._V1_FMjpg_UX1000_.jpg?raw=1');



   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover ; 
     min-width : 150px ;
     height : 220px ;
     margin: 0.1vh ;
    
  }
  #photo_val div{
    background-image:url('https://www.dropbox.com/s/bu18tg6m5mlu7wd/MV5BOGNkNWY3NmMtMDQ3NS00NWUzLWExYTMtMzFmZDg1ZWNiMTg0XkEyXkFqcGdeQXVyMTA1OTcyNDQ4._V1_FMjpg_UX1000_.jpg?raw=1');



   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover ; 
     min-width : 150px ;
     height : 220px ;
     margin: 0.1vh ;
    
  }
  #film_trailer,#film_photo{

    width: 94% ;
    max-height: 250px ;
    padding: 2% ;
    margin: 3% ;
    margin-left: 0 ;
    padding-left: 0 ;
    ox-shadow: inset 0px 0px 2px #000;
    border-radius: 2px ;
    ackground: #080808;
    color: #fff ;
    display:  ;
  }
  .border_cover{

    width: 97% ;
    eight: 250px ;
    padding: 2% ;
    margin: 3% ;
    margin-left: 0% ;
    padding-left: 0% ;
    padding-right: 0% ;
    ox-shadow: inset 0px 0px 2px #000;
    border-radius: 2px ;
    ackground: #e67e22 ;
    color: #fff ;
    display:  ;
    height: auto ;
  }
  #trailer_val,#photo_val{
      width: 100% ;
    max-height: 230px ;
    display: flex ;
    overflow-x: scroll ;
   
  }  
  #macro_first{
    display: flex ;
    ustify-content: Space-between ;
    align-items: center ;
    padding: 5px ;
    box-shadow : 0px 0px 8px #000 ;
    background-color : #4444 ;
    position: absolute ;
    Border-radius : 5px ;
    argin : 3% ;
    width: 100% ;
    ackground-color : red ;
    z-index: 2 ;
    Top: 0 ;
    left: 0 ;
  box-shadow : 0px 0px 3px #000 ;
  color: #000 ;
  }
#macro_search:focus{
  border : 1px solid #000 ;
}
#macro_search{
  border-radius: 8px ;
  background-color: #4444 ;
  color: #fff ;
  padding : 5px ;
  padding-top : 7px ;
  padding-bottom : 7px ;
  border: 0 ;
  outline: 0 ;
  font-family: 'koho', sans-serif  ;   
  width: 85% ;
}
  #director_path{
    color: #fff ;
    display: flex ;
    flex-direction: row ;
    margin-left: 0% ;
    align-items : center ;
  }
  #director_val{
    font-size: 20px ;
    text-alig: center ;
  }
  #director_head{
    font-size: 20px ;
    color: #e67e22 ;
    font-weight: bold ;
    margin-right: 10px ;
  }
  #company_path{
    display: flex ;
    flex-direction : column ;
    min-width : 92% ;
    ackground-color : red ;
    padding: 2% ;
    padding-left : 0;
    margin: 2% ;
    margin-left : 0 ;
  }
  #company_val section{
    margin: 2% ;
    loat : right ;
    display: flex ;
    flex-direction : column ;
    align-items : center ;
  }
  #company_val section p{
    font-family : 'koho', sans-serif  ;
    font-size : 12px ;
    color: #fff ;
  }
  #company_val section div{
    box-shadow :inset 0px 0px 3px #000 ;
    min-width : 100px ;
    min-height : 100px ;
    max-width : 100px ;
    max-height : 100px ;
    background-color : #4444 ;
    border-radius : 50% ;
      background-position: center center ;
     -webkit-background-size: cover;
     -moz-background-size: cover;  
     -o-background-size: cover;
     background-size: contain ; 
     background-repeat: no-repeat ;
  }
  #company_val{
    width: 100% ;
    verflow-x : scroll ;
    ackground-color : yellow ;
    display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-auto-rows: minmax(100px, auto);
  gap: 10px;
  }
 
  #overall_btndiv{
    width: 100% ;
    padding-bottom: 10px;
    padding-top: 10px;
    margin-top: 10px;
    color: #000 ;
    display: flex ;
    justify-content: Space-between ;
    background-colo: #e67e22 ;
    align-items: flex-end ;
    box-shadow: 0px 0px 3x #000 ;
    border-radius: 5px ;
  }
  .overall_btns{
    Border-radius : 50%;
    padding: 10px ;
    height: 25px ;
    display: flex ;
    justify-content: center ;
    align-items: center ;
    width: 25px ;
    olor: #2f383a4a;
    background-color: #e67e22 ;
    box-shadow: 0px 0px 8px #000 ;
  }
  
  .capital_text{
    text-transform: capitalize ;
    }
 
.subtopic {
  margin-top: 80px; /* adjust as needed to push content below fixed header */
  position: relative;
}

.chevron {
  position: absolute;
  top: 0;
  right: 20px;
  cursor: pointer;
}

.answer_content {
  display: none;
}

.section {
  height: 1000px; /* for demo purposes only */
  display: none ;
}

.chevron.collapsed {
  transform: rotate(-90deg);
}
.section.visible {
  display: block;
}
.p_content {
  display: none;
  min-height: 100vh;
  min-width : 100vw ;
}
.square_divclass {
  line-height: 0;
  -webkit-column-count: 4;
  -webkit-column-gap: 4px;
  -moz-column-count: 4;
  -moz-column-gap: 4px;
  column-count: 4;
  column-gap: 4px;
}

.square_divclass img {
  width: 100% !important;
  height: auto !important;
  margin-bottom: 5px;
}

@media (max-width: 1200px) {
  .square_divclass {
    -moz-column-count: 4;
    -webkit-column-count: 4;
    column-count: 4;
  }
}
.p_chevron {
  float: right;
  font-size: 20px;
  margin-top: 5px;
}
#netcard_bg{
    position: fixed;
    width: 100% ;
    height: 250px;
    display:flex;
    align-items: center;
    bottom: -300px ;
    background-color:#000;
    left:0;
    transition: 0.5s ;
    box-shadow:0px 0px 13px #000;
    justify-content: center;
}
.font_12{
  font-size: 12px;
}
#netcard_div{
    min-width: 98% ;
    height: 240px ;
    border-top-left-radius: 5px ;
    border-radius: 3px;
    padding:1% ;
    padding-top: 2% ;
    padding-bottom: 2% ;
    display:flex;
    
    flex-direction: column;
    box-shadow:0px 0px 3px #000;
    background-color:#000;
    color:#fff;
}
#netcard_top{
    display: flex ;
    flex-direction:row;
    width: 100% ;
    height: auto ;
    background-color: ;
    justify-content:space-between;
}
#net_topone{
    display: flex ;
    background-color: #0001  ;
    flex-direction: row ;
    width: 100% ;
    max-height: 150px ;
    border-radius: 5px;
    padding-bottom: 10px;
}
#net_image{
    background-color:#0003;
    width: 150px ;
    height: 150px ;
    margin-right: 5px;
      background-image:url('https://www.dropbox.com/s/e85d53ube6ikotx/HD-wallpaper-military-camouflage.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#net_more{
    display:flex;
    flex-direction:column;
      width:100% ;
    justify-content:space-between;
}
#net_note{
     display: -webkit-box;
        -webkit-line-clamp: 7;
        -moz-line-clamp: 8;
        -webkit-box-orient: vertical;
        -moz-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
        font-size: 15px ;
}
#net_imdb{
  color: #e67e22 ;
  font-weight: bold ;
}
#net_toptwo{
    display:flex;
    flex-direction:column;
    width:80% ;
}
#net_name{
    font-weight:bold;
    font-size: 22px;
    text-align:center;
}
#net_info{
    margin-left: 5px;
    font-size: 12px;
    color: #fff   ;
    display:flex;
    justify-content:space-between;
}
#netcard_bot{
    display:flex;
    justify-content:space-between;
    align-items: center ;
    color: #fff ;
}
#netcard_foot span{
    display: flex;
    align-items:center;
    font-size: 12px ;
}
#netcard_foot span svg{
    margin-right: 5px;
}
#netcard_foot{
    width: 98% ;
    padding-top:  10px ;
    padding-bottom: 10px;
    background-color:#0000 ;
    box-shadow:0px 0px 3px #000 ;
    position:absolute;
    padding-left: 2% ;
    padding-right: 1% ;
    display: flex;
    border-radius: 1px;
    justify-content:space-between;
    bottom: 0% ;
    left: 0% ;
    align-items: center;
    font-weight:bold;
    color: #fff ;
}
#netcard_exit{
    position: absolute;
    top:0 ;
    right: 0 ;
    margin: 2% ;
    background-color:#0002 ;
    border-radius: 3px;
    box-shadow:0px 0px 1px #000;
}
 
#week_bg,#tag_bg,#biglatest_bg,.drop_topclass{
  height: 100vh ;
  width: 100vw ;
  right: 0 ;
  margin: 0 ;
  top: -100vh ;
  transition: 0.3s ease ;
  position: fixed ;
  background-color : #242526 ;
  z-index : 2 ;
  display: flex ;
  flex-direction: column ;
}
 #week_bg.drop, #tag_bg.drop,#biglatest_bg.drop,.drop_topclass.drop{
   top:0;
   opacity:1; 
} 
.pick_topclass{
  height: 100vh ;
  width: 100vw ;
  right: 0 ;
  margin: 0 ;
  bottom: -100vh ;
  transition: 0.3s ease ;
  position: fixed ;
  background-color : #242526 ;
  z-index : 2 ;
  display: flex ;
  flex-direction: column ;
}

.pick_topclass.drop{
   bottom:0;
   opacity:1; 
} 
#research_tab{
  height: 40vh ;
  z-index : 99 ;
  background: #000 ;
}
#research_inner section{
  color: #fff ;
  font-weight : 900 ;
  min-width: 94% ;
  max-width: 94% ;
  padding: 2% ;
  margin: 1% ;
  border-bottom : 0.1px solid #818181 ;
}
#research_inner{
  min-height : 100% ;
  min-width : 100% ;
  max-height : 100% ;
  max-width : 100% ;
  background: #4444 ;
  display : flex ;
  flex-direction : column ;
  align-items: flex-start ;
}
.fall_topclass{
   height: 100vh ;
  width: 100vw ;
  right: 0 ;
  margin: 0 ;
  bottom: -100vh ;
  transition: 0.5s ease ;
  position: fixed ;
  background-color : #242526 ;
  z-index : 2 ;
  display: flex ;
  flex-direction: column ;
}
.fall_topclass.drop{
   bottom:0;
   opacity:1; 
} 
#week_controls,#tag_bgtop,#latest_bgtop,#latest_controls,#drive_controls,#channelform_controls,#amenities_controls,#match_controls,#search_controls,#crew_controls, #tweet_controls,#sidebar_controls, #season_controls,#tag_controls{
  align-self: center ;
  position: absolute ;
  bottom: 3% ;
  width: 70% ;
  background-color : #000 ;
  box-shadow: 0px 0px 8px #000 ;
  Border-radius : 3px ;
  padding: 5px ;
  z-index: 2 ;
  display: flex ;
  justify-content: space-between ;
}
#tag_controls{
  z-index : 4;
  background-color : #4444 ;
  position: absolute ;
}
#tweet_controls{
  background-color: #4444;
}
#sidebar_controls{
  width: 100% ;
  bottom: 0 ;
  right: 0 ;
  min-height: 1% ;
  max-height: 20% ;
  align-items: flex-end ;
  justify-content: flex-end ;
  display: flex ;
  lex-direction : column ;
  background-color: #0000;
  box-shadow : 0px 0px 3px #0000 ;
}
#crew_controls{
  background-color: #272727;
  z-index: 3 ;
}
#amenities_controls{
  position: absolute ;
  background-color : # ;
  width: 85% ;
}
#channelform_controls{
  box-shadow: 0px 0px 1px #fff ;
  
}
#week_controls{
 min-width: 70% ;
 max-width: 75% ;
}
#film_controls{
    position: fixed ;
  top: 3% ;
  width: 70% ;
  background-color : #000 ;
  box-shadow: 0px 0px 8px #000 ;
  Border-radius : 3px ;
  padding: 5px ;
  z-index: 2 ;
  display: flex ;
  justify-content: space-between ;   
  aign-items : center ;
  align-self: center ;  
}
#my_chandot{
 align-self: end ;
}

/*
#my_channelimg{
  position: fixed ;
  min-height: 50px ;
  min-width : 50px ;
  border-radius: 50% ;
  background-color: #e67e22 ;
  box-shadow: 0px 0px 8px #000 ;
  top: 0 ;
  left: 0 ;
  margin: 2px ;
  padding : 2px ;
}
*/
.film_subtabs{
  position: fixed ;
  height: 100% ;
  width: 100% ;
  top: 0 ;
  right: 0 ;
  display: none ;
  box-shadow: 0px 0px 3px #000 ;
  overflow-y: scroll ;
  overflow-x: hidden ;
  transition: .5s ease ;
}
.film_subinners{
  min-height: 100% ;
  max-height: 100% ;
  min-width: 100% ;
  max-width: 100% ;
  background-color: #000 ;
  padding-bottom: 50% ;
  overflow-y: scroll ;
}
#feed_tabdiv, #option_tabdiv{
  background-color: #0006 ;
  padding : 0 ;
}
#feed_optionbg, #group_optionbg, #tweet_optionbg{
  position : absolute ;
  bottom: 0 ;
  left: 0 ;
  min-height: 100px ;
  max-height: 30vh ;
  padding : 2% ;
  width : 96% ;
  background: #2c2c2c ;
  color: #fff ;
  font-family : 'koho', sans-serif ;
  margin: 0;
  display: flex ;
  justify-content: center ;
  align-items : center ;
  flex-direction : column ;
  border-top-left-radius: 5px ;
  border-top-right-radius: 5px ;
}
#group_optionbg{
  background-color : #353535 ;
  display: none ;
}
#feed_optiontop{
  padding: 0.5% ;
  margin-bottom: 1% ;
  min-width : 10% ;
  max-width : 10% ;
  background-color : #0006 ;
  border-radius : 20px ;
}
#feed_optioninner{
  in-height: 85px ;
  min-width: 100% ;
  max-width: 100% ;
  ackground-color : #e67e22 ;
  display: flex ;
  justify-content: Space-around ;
  align-items : center ;
  flex-direction : column ;
}
.feed_options:hover{
  border-radius : 0px ;
  ackground-color : #0006 ;
  ox-shadow : 0px 0px 3px #000 ;
  border-bottom : 1px solid #000 ;
  color: ;
}
.feed_options{
  width: 98% ;
  padding-left: 2% ;
  display: flex ;
  align-items: center ;
  ackground-color : #e67e22 ;
  height: 50px ;
}
.feed_opticons{
  display: flex ;
  justify-content: center ;
  align-items : center ;
  padding: 2% ;
  width : 25px ;
  height : 25px ;
  color: #fff ;
  margin-right : 2% ;
  background-color : #6666 ;
  border-radius: 50% ;
}



/*
#add_newsbtn{
  position : fixed ;
  top: 0 ;
  left: 0 ;
  margin: 5px ;
  color: #fff ;
  width: 30px ;
  height: 30px ;
  padding: 5px ;
  box-shadow: 0px 0px 8px #000 ;
  border-radius: 5px ;
  display: flex ;
  align-items : center ;
  justify-content: center ;
  background-color: #0006 ;
}
*/
.post_cover{
  width: 100% ;
  min-height: 120px ;
  max-height: 120vh ;
  background-color: #000 ;
  margin-top: 5px ;
  display: flex ;
  flex-direction: column ;
  margin-bottom : 5px ;
  position: relative ;
}
.post_profile{
  display: flex ;
  align-items: center ;
  justify-content: space-between ;
  padding: 5px ;
  padding-top: 7px ;
  padding-left: 7px ;
  padding-right: 7px ;
  color: #fff ;
  margin-bottom : 3px ;
}
.post_profcont{
  display: flex ;
  flex-direction: row ;
  justify-content: sace-between ;
  width: 85% ;
}
.post_profname{
  font-size: 12px ;
  font-weight: bold ;
  color: #fff ;   
   white-space:nowrap ;
    overflow: hidden ;
    text-overflow: ellipsis;
}
.post_profmore{
margin-right: 5px ; 
}
.post_profimg{
  width: 30px ;
  height: 30px ;
  margin-right : 3% ;
  box-shadow: 0px 0px 1px #fff ;
    background-image:url('https://www.dropbox.com/s/e85d53ube6ikotx/HD-wallpaper-military-camouflage.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
     border-radius: 50% ;
     
}
.post_valdiv section{
  scroll-snap-align: start;
  min-width: 100% ;
  max-width: 100% ;
  width: 100vw ;
  min-height: 0vh ;
  max-height: 80vh ;
  background: #000 ;
    text-align: center ;
  display: flex;
  adding-bottom: calc(100% / aspect-ratio); /* set the padding-bottom to maintain the aspect ratio */
transition: 0.5s ease ;
  justify-content: center;
  align-items: center;
     overflow: hidden ;  ackground-image:url('https://www.dropbox.com/s/jz8wrkjq2v2w658/images%20%2821%29.jpeg?raw=1');

   no-repeat-center-center:fixed;
background-position: center ;
   background-repeat: no-repeat;
     background-size: contain ; 

}
.post_valdiv video{
  scroll-snap-align: start;
  min-width: 100% ;
  height: 0 ;
  max-width: 100% ;
  width: 100vw ;
  min-height: 50vh ;
  background: #0005 ;
    text-align: center ;
  display: flex;
  position: ;
  adding-bottom: calc(100% / aspect-ratio); /* set the padding-bottom to maintain the aspect ratio */
transition: 0.5s ease ;
  justify-content: center;
  align-items: center;
     overflow: hidden ;  ackground-image:url('https://www.dropbox.com/s/jz8wrkjq2v2w658/images%20%2821%29.jpeg?raw=1');

   no-repeat-center-center:fixed;
background-position: center ;
   
     background-size: cover ; 

}

.center_text {
  text-align: center;
}
#gggg,.gggg{
  background-color : red ;
}
.post_valdiv aside{
  display: flex ;
  justify-content: center ;
  align-items : center ;
  min-height: 200px ;
  max-height: 500px ;
  width: 100% ;
  background-color: #0000 ;
  padding-bottom: calc(100% / aspect-ratio); /* set the padding-bottom to maintain the aspect ratio */
transition: 0.5s ease ;
scroll-snap-align: start;
 no-repeat-center-center:fixed;
background-position: center ;
   background-repeat: no-repeat;
     background-size: contain ; 
}
.post_valdiv{
  min-width: 100% ;
  min-height: 0% ;
  max-width: 100% ;
  width: 100% ;
  max-height: 70% ;
  position : relative ;
  background-color: #000 ;
    scroll-snap-type: x mandatory;    
    display: flex;
    -webkit-overflow-scrolling: touch;
    overflow-x: scroll;
    overflow-y: hidden ;
    align-items : center ;
    jstify-content : center ;
      no-repeat-center-center:fixed;
background-position: center ;
   background-repeat: no-repeat;
     background-size: contain ; 
}
.post_foot{
  display: flex ;
  flex-direction: column ;
  align-items: center ;
  justify-content: space-between ;
  min-width: 100% ;
  max-width: 100% ;
  background-color: #000 ;
  min-height: % ;
  color: #fff ;
  padding-top: 3% ;
}
.first_foot div span {
  margin: 1% ;
  margin-left : 5% ;
  margin-right : 5% ;
}
.like_foot{
  margin-left: 3% ;
  width: 45% ;
}
.first_foot{
  display : flex ;
  width: 100% ;
  justify-content: space-between ;
  align-items: center ;
  background-color: #0000 ;
}
.linked_films img,.linked_films div{
  in-height : 50px ;
  in-width : 50px ;
  height : 100% ;
  width : 100% ;
  ax-height : 15px ;
  ax-width : 15px ;
  float: right ;
  margin: 1px ;
  border-radius: 1px ;
  box-shadow: 0px 0px 3px #000 ;
   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
.linked_films{
  overflow-x: scroll ;
  display: flex ;
  max-width: 200px ;
  max-height: 30px ;
  min-height: 0px ;
  padding-top : 10px ;
  border-top-left-radius: 5px ;
  border-radius: 5px ;
  border-bottom-left-radius: 5px ;
  background-color: #101415 ;
  padding-bottom : 10px ;
  bckground-color: #e67e22 ;
  float: right ;
}
.second_foot{
  ackground-color: red ;
  align-self: flex-start;
  margin-left: 5% ;
  margin: 5% ;
  margin-bottom: 5% ;
}
.like_no{
  font-family: Handlee ;
  font-size: 10px ;
  float: left ;
  width: ;
}
#follow_tabdiv{
  background-color:   ;
  display: block ;
}
#verify_addbtn{
  display: none ;
}
#tag_bgtop{
  top: 0 ;
  padding: 3% ;
  max-height: 20px ;
  font-family: 'koho' ,sans-serif ;
  color: #fff ;
  width: 95% ;
  display: flex ;
  align-items : center ;
  text-transform: capitalize ;
  justify-content: Space-between ;
}
#latest_bgtop{
  top: 0 ;
  padding: 3% ;
  max-height: 20px ;
  font-family: 'koho' ,sans-serif ;
  color: #fff ;
  width: 95% ;
  text-transform: capitalize ;
}
#tag_headerval{
  text-transform: capitalize ;
    white-space:nowrap ;
    overflow: hidden ;
    text-overflow: ellipsis;
}
#latest_bgtop{
  background-color: #000 ;
  align-items: center ;
  display: flex ;
  margin-top : 0 ;
  top: 0 ;
  justify-content : flex-end ;
}
#sort_btn{
  box-shadow: 0px 0px 8px #000 ;
  display : flex ;
  color: #707070;
}
#sort_div{
  position: fixed ;
  background: #000 ;  
   background: rgba(255, 255, 255, 0.1);
    box-shadow: 0 20px 50px rgba(0, 0, 0, 0.15);
    backdrop-filter: blur(5px);
  bottom: 0 ;
  left: 0 ;
  margin: 2% ;
  width: 96% ;
  max-height: 50vh ;
  min-height: 2vh ;
  display: none ;
  border-radius: 5px ;
  box-shadow: 0px 0px 8px #000 ;
  z-index: 3 ;
}
.selected_sort::before {
  content: "\f00c";
  font-family: "Font Awesome 5 Free";
  margin-right: 10px ;
}
.selected_sort{
  background-color: #0004 ;
  font-weight: bold ;
  box-shadow: 0px 0px 3px #000 ;  
}
#sort_inner section{
  width:  95% ;
  display: flex ;
  align-items: center ;
  padding-bottom : 3% ;
  padding-top : 3% ;
  margin: 1% ;
  padding-left: 2% ;
  color: #fff ;
  font-family: 'koho', sans-serif ;
  border-radius: 25px ;
}
#sort_inner{
  min-height: 100% ;
  min-width: 100% ;
  max-height: 100% ;
  max-width: 100% ;
  display: flex ;
  align-items: center ;
  flex-direction: column ;
}
#latest_controls,#search_controls{
  width: 75% ;
}
.week_controlbtns,.tag_controlbtns,.search_controlbtns,.latest_controlbtns,.drive_controlbtns,.film_controlbtns,.form_controlbtns,.amenities_controlbtns,.match_controlbtns,.crew_controlbtns, .tweet_controlbtns,.sidebar_controlbtns,.tag_controlbtns,.hash_controlbtns{
  width: 30% ;
  text-align: center ;
  font-size: 12px ;
  font-family : Handlee ;
  color: #fff ;
  padding: 5px ;
  display: flex ;
  justify-content: center ;
  align-items: center ;
  border-radius: 3px ;
  margin: 2px ;
  padding-bottom: 5px ;
  padding-top: 5px ;
  background-color: #e67e22 ;
  background-color : #4444 ;
  
}
.hash_controlbtns{
  transition : all 0.5s ease ;
}
.sidebar_controlbtns{
  border-radius: 50% ;
  height: 15px ;
  width: 15px ;
  display: flex ;
  align-items : center ;
  justify-content : center ;
  padding: 2% ;
}
.tweet_controlbtns{
  transition: all 0.5s ease ;
}
#channel_formbtn{
  
  background-color: #e67e22 ;
}
.search_tagdivs{
  min-height: 100% ;
  max-height: 100% ;
  min-width: 100% ;
  max-width: 100% ;
  background-color: #0009 ;
  padding: 0 ;
  display: none ;
  overflow-y: scroll ;
  overflow-x: hidden ;
}
.week_tabs{
  width: 100vw ;
  height: 100vh ;
   padding: 1% ;
  display: none ;
  overflow-y: scroll ;
  overflow-x: hidden ;
  padding-left: 0;
  padding-right: 0;
  left: 0 ;
  margin: 0 ;
  ackground-color: pink  ;
}
#action_tagdiv{
  display: flex ;
  overflow: scroll ;
}
#week_nomtab{
  display: block ;
  overflow: scroll ;
}
.latest_bgdivs{
  overflow-y: scroll ;
  display: flex;
  flex-wrap: wrap;
  transition: all 0.5s ease ;
   min-height: 98% ;
  max-height: 98% ;
  min-width: 100% ;
  max-width: 100% ;
  background-color: #0002 ;
  padding: 0 ;
  margin: 0 ;
  overflow-x: hidden ;
}
.latest_bgdivs section{
  flex-basis: calc(33.33% - 5px);
  in-width: 30px;
  min-height: 30vh ;
  box-shadow: 0px 0px 8px #000;
  background-color: #0003;
  position: relative ;
  margin: 2.5px;
   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
      transition: all 0.5s ease ;
      }
.week_tabinners{
 min-height: 90% ;
 max-height: 90% ;
 ackground: #e67e22 ;
overflow-y: scroll ;
overflow-x: hidden ;
  min-width: 100% ;
  max-width: 100% ;
}
#week_sugtab .week_tabinners{
  display: flex ;
  flex-direction: column ;
  background-color: #0001 ;
  align-items: center ;
}
.my_nomchat{
  box-shadow: 0px 0px 3px #000 ;
  border-top-right-radius: 3px ;
  border-bottom-right-radius: 3px ;
  border-left: 1px solid #e67e22 ;
  background-color: #4444 ;
  color: #fff ;
  width: 94% ;
  padding: 5px ;
  margin : 5px ;
  font-family: Handlee ;
  max-height: 10%;
  overflow-y: scroll ;
}
.chat_group{
  width: 100% ;
  background-color: #0000 ;
  display: flex ;
  justify-content : flex-end ;
  align-items: flex-end ;
  margin: 1px ;
}
#chat_circles{
  min-width: 25px ;
  min-height: 25px ;
  max-width: 25px ;
  max-height: 25px ;
  margin: 1px ;
  border-radius: 50% ;

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
  box-shadow: 0px 0px 3px #000 ;
}
.week_notify span{
  color: #e67e22 ;
  text-transform: capitalize ;
}
.week_notify{
  box-shadow: 0px 0px 3px #000 ;
  border-top-right-radius: 3px ;
  border-bottom-right-radius: 3px ;
  border-left: 1px solid #e67e22 ;
  background-color: #4444 ;
  color: #fff ;
  width: 94% ;
  padding: 5px ;
  margin : 5px ;
  font-family: Handlee ;
  max-height: 10%;
  overflow-y: scroll ;
}
.nom_listbg{
  min-width: 96% ;
  min-height: 140px ;
  padding: 1% ;
  margin: 1% ;
  display: flex ;
  border-top-right-radius: 5px ;
  border-bottom-right-radius: 5px ;
  border-left: 1px solid #fff ;
  background-color: #0006 ;
  box-shadow: 0px 0px 2px #000 ;
  justify-content :space-between ;
}
.week_tabinners .nom_listbg:nth-child(even) {
  border: 0;
  border-right: 1px solid #fff ; 
  border-radius: 0;
  border-top-left-radius: 5px ;
  border-bottom-left-radius: 5px ;
}
.nom_img{
  min-width: 150px ;
  min-height:  150px ;
  box-shadow: 0px 0px 3px #000 ;
    background-image:url('https://www.dropbox.com/s/r0bc3ppy9hbc3xx/crazy%20love%201.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
.nom_txt .display_flex{
  color: #e67e22 ;
  font-size: 9px ;
  margin: 3px ;
  align-items: center ;
  justify-content: flex-start ;
  ackground-color: #fff ;
}
.nom_txt .display_flex span{
  color: #e67e22 ;
  font-size: 9px ;
  margin: 3px ;
}
.nom_txt{
    min-width: 90% ;

  min-height:  150px ;
padding: 2px ;
  box-shadow: 0px 0px 3px #000 ;
  display: flex ;
  flex-direction: column ;
  justify-content:space-betwee ;
}
.nom_name{
  color: #fff ;
  font-weight: bold ;
  font-size: 16px ;
  margin: 2px ;
}
.nom_star{
  display: flex ;
  align-items: center ;
  justify-content: center ;
}
.nom_left div{
  
  margin-right : 5px ;
}
.nom_right span{
  margin-left : 7px ;
  color: #fff ;
}
.nom_right{
  display: flex ;
  align-items : flex-end ;
  jstify-content: flex-end ;
}
.week_answerdiv{
  width: 100% ;
  min-height: 85vh ;
  max-height: 85vh ;
  padding: 2% ;
  padding-left : 0% ;
  padding-right : 0% ;
  padding-bottom: 20vh ;
  background-color: #000 ;
}
#message_box{
    min-width: 96% ;
    min-height: 150px ;
    background-color: #0006 ;
    display:flex;
    flex-direction: row ;
    padding:5px ;
    color:#fff;
    border-top: 1px solid #000 ;
    border-bottom: 1px solid #242526 ;
}
#message_up section{
    max-width: 50px ;
    min-width: 50px ;
    min-height: 50px ;
    max-height: 50px ;
    ax-width: 15% ;
    border-radius: 50% ;
   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#message_middle div{
    margin: 2px ;
    font-size: 12px ;
}
#message_middle{

    min-width: 85% ;
    margin: 3px ;
    display:flex;
    flex-direction:column;
    min-height: 100% ;
    background-color: ;
    box-shaow: 0px 0px 3px #fff ;
    justify-content:space-between;
}
#message_innertop{
    display:flex;
    padding:5px;
    justify-content: space-between;
    font-weight:bold;
    font-family: Handlee ;
}
#message_innermiddle{
    word-break: break-all;
}
#message_innerbot{
    ackground-color:#e67e22;
}
#message_innerbot div{
    width: 20px ;
    height: 20px ;
    margin:1px;
    float: right ;
    border-radius: 50% ;
}









.week_messagediv{
  min-width: 96% ;
  max-width: 96% ;
  min-height: 10vh ;
  max-height: 12vh ;
  position: absolute ;
  bottom: 0 ;
  border-top-left-radius: 22px ;
  border-top-right-radius: 22px ;
  box-shadow: 0px 0px 3px #fff ;
  padding: 2% ;
  background-color: #000 ;
  display: flex ;
  flex-direction: column ;
  align-items: center ;
  justify-content: center ;
  transition : 0.5s ease ;
}
#fake_weektxt{
  outline: 0 ;
  border: 0 ;
  background-color : #0000 ;
  width: 90% ;
  padding: 2% ;
  color: #fff ;
  font-family: 'koho', sans-serif ;
  border-bottom: 1px solid #fff ;
}
#fake_weekbtn{
  width: 90% ;
  padding: 2% ;
  padding-top: 10px ;
  padding-bottom : 10px ;
  background: #fff ;
  color: #000 ;
  text-align: center ;
  margin-top : 10px ;
  margin-bottom : 10px ;
  border-radius : 5px ;
}
.wk_inputclass{
  min-height: 70vh ;
  max-height: 73vh ;
  z-index: 3 ;
  align-items: flex-tart ;
}
.wk_inputclass textarea{
  width: 90% ;
  min-height: 30vh;
  max-height: 50vh;
  color: #fff ;
  border: 1px solid #fff ;
  border-radius: 0px ;
  box-shadow: 0px 0px 3px #000 ;
  margin-top: 5vh ;
}
#tag_box img{
  in-height: 100% ;
  max-height: 100% ;
  min-width: 85px ;
  max-width: 100px ;
  border-radius: 3px ;
  margin-left: 2px ;
    background-image:url('');
box-shadow: 0px 0px 3px #000 ;
outline: 0 ;
border: 0 ;
   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#tag_box{
  display: none ;
  width: 98% ;
  height: 100px ;
  max-height: 150px ;
  overflow-x: scroll ;
  background: #000  ;
  position: fixed ;
  right: 0 ;
  margin : 0 ;
  bottom: 0 ;
  z-index: 15 ;
  padding-top: 1% ;
  padding: 1% ;
  box-shadow: 0px 0px 3px #000 ;
}






    /* just keep this class here  */
.week_controlclass{
  background: #e67e22 ;
}
.tweet_controlclass{
  background: #e67e22 ;
  color: #000 ;
}
#radio1, #radio2,#radio3,#radio4,#radio5,#radio6,#radio7,#radio8,#radio9,#radio10,#radio11, #radio12,#radio13,#radio14,#radio15,#radio16,#radio17,#radio18,#radio19,#radio20,#radio21 {
    display: none;
}
.label1, .label2,.label3,.label4,.label5,.label6,.label7,.label8,.label9,.label10,.label11, .label12,.label13,.label14,.label15,.label16,.label17,.label18,.label19,.label20,.label21 {
    position: abolute;
    display: flex;
    flex-direction: row;
    left: 30px;
    align-items: center ;
}
.choose{
    position: relative;
    display: block;
    top: -4px;
    right: 10px;
    width: 20px;
    height: 20px;
    border-radius: 200px;
    border: 3px solid #000;
    transition: .25s;
}
#radio1:checked ~ .label1 .choose{
    width: 10px;
    height: 10px;
    border: 8px solid #000;
}
#radio2:checked ~ .label2 .choose{
    width: 10px;
    height: 10px;
    border: 8px solid #000;
}
#radio3:checked ~ .label3 .choose{
    width: 10px;
    height: 10px;
    border: 8px solid #000;
}
#radio4:checked ~ .label4 .choose{
    width: 10px;
    height: 10px;
    border: 8px solid #000;
}
#radio5:checked ~ .label5 .choose{
    width: 10px;
    height: 10px;
    border: 8px solid #000;
}
#radio6:checked ~ .label6 .choose{
    width: 10px;
    height: 10px;
    border: 8px solid #000;
}
#radio7:checked ~ .label7 .choose{
    width: 10px;
    height: 10px;
    border: 8px solid #000;
}
#radio8:checked ~ .label8 .choose{
    width: 10px;
    height: 10px;
    border: 8px solid #000;
}
#radio9:checked ~ .label9 .choose{
    width: 10px;
    height: 10px;
    border: 8px solid #000;
}
#radio10:checked ~ .label10 .choose{
    width: 10px;
    height: 10px;
    border: 8px solid #000;
}
#radio11:checked ~ .label11 .choose{
    width: 10px;
    height: 10px;
    border: 8px solid #000;
}
#radio12:checked ~ .label12 .choose{
    width: 10px;
    height: 10px;
    border: 8px solid #000;
}
#radio13:checked ~ .label13 .choose{
    width: 10px;
    height: 10px;
    border: 8px solid #000;
}
#radio14:checked ~ .label14 .choose{
    width: 10px;
    height: 10px;
    border: 8px solid #000;
}
#radio15:checked ~ .label15 .choose{
    width: 10px;
    height: 10px;
    border: 8px solid #000;
}
#radio16:checked ~ .label16 .choose{
    width: 10px;
    height: 10px;
    border: 8px solid #000;
}
#radio17:checked ~ .label17 .choose{
    width: 10px;
    height: 10px;
    border: 8px solid #000;
}
#radio18:checked ~ .label18 .choose{
    width: 10px;
    height: 10px;
    border: 8px solid #000;
}
#radio19:checked ~ .label19 .choose{
    width: 10px;
    height: 10px;
    border: 8px solid #000;
}
#radio20:checked ~ .label20 .choose{
    width: 10px;
    height: 10px;
    border: 8px solid #000;
}
#radio21:checked ~ .label21 .choose{
    width: 10px;
    height: 10px;
    border: 8px solid #000;
}
#add_nomibg div span{
  color: #fff ;
  fot-size: 12px ;
  font-family: Handlee ;
}
#add_nomibg div{
  display: flex ;
  width: 96% ;
  margin: 2px ;
  padding: 5px ;
  justify-content: space-between ;
  background-color: #0006 ;
  border-radius: 3px ;
  padding-bottom: 5px ;
  padding-top: 5px ;
}
#add_nomibg .lit_txt{
  width: 80% ;
}
#add_nomibg{
  position: fixed ;
  z-index: 2 ;
  width: 96% ;
  height: 75vh ;
  left: 0 ;
  bottom: -60% ;
  background-color: #242526;
  box-shadow :0px 0px 13px #000 ;
  padding: 2% ;
  transition: 0.5s ease ;
  overflow-y: scroll ;
}
#add_nomicollect img{
  margin: 1px ;
  transition: 0.5s ease ;
}
#add_nomiscene img,#add_nomimoment video{
  margin: 1px ;
  transition: 0.5s ease ;
   scroll-snap-align: start;
}
#add_nomicollect img:hover{
  
/*
grow animation 
-webkit-transform: scale(1.2);
-ms-transform: scale(1.2);
transform: scale(1.2);
transition: 1s ease;
*/
}
#add_nomicollect{
  width : 96.5% ;
  height: 250px ;
  background-color: #0006 ;
  padding: 5px ;
  display: flex ;
  overflow-x: scroll ;
}
#add_nomiscene,#add_nomimoment{
  width : 96.5% ;
  height: auto ;
  height: 250px ;
  background-color: #0006 ;
  padding: 5px ;
  display: flex ;
  overflow-x: scroll ;
  scroll-snap-type: x mandatory;   
    -webkit-overflow-scrolling: touch;
}
#nomi_sceneinput,#nomi_momentinput,#nomi_imageinput,#nomi_idinput{
  width: 95% ;
  padding: 2% ;
  background-color: #000 ;
  color: #fff ;
  outline: 0 ;
  border: 1px solid #000 ;
  border-radius: 3px ;
  padding-bottom: 7px ;
  padding-top : 7px ;
  margin-bottom: 10px ;
  margin-top : 5px ;
}
#add_nomisubmit{
  width: 95% ;
  padding-top : 7px ;
  padding-bottom : 7px ;
  border-radius: 5px ;
  box-shadow: 0px 0px 3px #000 ;
  font-family : Monospace ;
  color: #fff ;
  margin: 5px ;
  background: #e67e22 ;
  text-align: center ;
  display : flex ;
  align-items: center ;
  justify-content: center ;
  position: relative ;
  bottom: 0 ;
}
.overflow_yclass {
  overflow-y : scroll ;
}
.overflow_xclass {
  overflow-x : scroll ;
}
.img_class{
  -webkit-filter: brightness(50%);
-webkit-transition: all 1s ease;
-moz-transition: all 1s ease;
-o-transition: all 1s ease;
-ms-transition: all 1s ease;
transition: all 1s ease;
}

#drive_bg{
  background-color: #000;
  display: flex ;
  flex-direction: column ;
  align-items : cnter ;
}
#drive_bg .answer_top{
  background-color: # ;
  align-items: center ;
  position:  ;
  border-radius: 3px ;
  padding-top: 5px ;
  padding-bottom : 5px ;
}
.drive_inner{
  position: relative ;
  min-height: 100% ;
  min-width : 100% ;
  max-height: 100% ;
  max-width : 100% ;
  display: none ;
  ackground-color: #e67e22 ;
}
#popular_div{
  display: flex ;
}
#drive_name{
  color: #fff ;
  font-family: 'koho', sans-serif ;
  text-transform: capitalize ;
}

.happier{
  width: 98% ;
  padding: 2px ;
  margin: 2px ;
  margin-bottom : 5px ;
  height: 300px ;
  background-color: #0006 ;
  box-shadow: 0px 0px 8px #000 ;
   display: flex ;
  overflow-x: scroll ;
    position: relative ;
}
.latest_jsclass{
   margin: 1px ;
    margin-bottom : 20px  ;
    padding:  3px ;
padding-left: 5px ;
     border-left: 6px solid #e67e22 ;
border-radius: 3px ;
    font-family: Monospace ;
    font-size: 23px ;
    font-weight: bold ;
    color: #fff ;  
    align-items: center ;
    justify-content: space-between ;
    display: flex ;
}
.float_right{
  float: right ;
}
.align_center{
  align-items: center ;
}
.align_start{
  align-items: flex-start ;
}
.align_end{
  align-items: flex-end ;
}
.justify_between{
  justify-content : space-between ;
}
.display_block{
  display: block ;
}
.display_none{
  display: none ;
}
#latest_movdiv{
  background-color : #e67e22 ;
}
#post_footer span{
  margin: 2px ;
  margin-left : 3px ;
  margin-right : 3px ;
}
#post_footer{
  padding: 2% ;
  position: absolute ;
  bottom: 0 ;
  left: 0 ;
  padding-top : 5px ;
  padding-bottom : 5px ;
  display: flex ;
  margin-bottom : 1px ;
  margin-top : 1px ;
  margin-left : 1%  ;
  margin-right : 1%  ;
  margin-bottom : 5px  ;
  align-items: center ;
  width: 94% ;
  border-top: 0px solid #fff ;
  background-color: #fff ;
  border-radius: 5px ;
  box-shadow: 0px 0px 8px #fff ;
  color: #000 ;
  ax-height: 15% ;
}
.post_typedivs{
  min-width: 98% ;
  max-width: 98% ;
  padding-top : 2% ;
  padding : 1% ;
     scroll-snap-align: start;
  min-height: 88vh ;
  max-height: 90vh ;
  box-shadow: 0px 0px 3px #fff ;
  display: flex ;
  align-items: center ;
  justify-content: space-between ;
  flex-direction: column ;
  background:  #000 ;
     }
.post_sendbtns span{
  margin-right: 5px ;
}
.post_sendbtns{
  padding: 2% ;
  padding-top : 15px ;
  padding-bottom : 15px ;
  text-align: center ;
  font-family: Handlee ;
  color: #000 ;
  background: #fff ;
  width: 90% ;
  margin-left: 3% ;
  margin-right: 3% ;
  border-radius: 30px ;
  display: flex ;
  align-items: center ;
  justify-content: center ;
  box-shadow: 0px 0px 8px #fff ;
}
#post_textarea{
   min-width: 94% ;
  max-width: 94% ;
  min-height: 86% ;
  font-family: Monospace ;
  fot-size: 12px ;
  color: #000 ;  
  outline: 0 ;
  border: 0 ;
    overflow-x: scroll;
}

.content_editable {

      width: 100%; /* set the width of the textarea, input, or div */
      max-width: 100%; /* set the width of the textarea, input, or div */
overflow-y : scroll ;
      text-align: center; /* center the text within the element */
    }
.post_textcover{
  margin: % ;
  margin-bottom : 2% ;
   min-width: 98% ;
  max-width: 98% ;
  padding: 1% ;
   min-height: 70vh ;
   max-height: 80vh ;
  border-radius : 7px ;
  background-color: #fff ;
  font-family: Monospace ;
  fot-size: 12px ;
  color: #000 ;  
  outline: 0 ;
    overflow-x: scroll;
    display: flex ;
    flex-direction: column ;
      align-items: center ;
  justify-content: center ;
  position: relative ;
}
.post_textbtns{
  min-width: 99% ;
  background-color: #000 ;
  min-height: 50px ;
  margin: 1px ;
  position: absolute ;
  box-shadow : 0px 0px 3px #000 ;
  bottom: 0;
  border-radius: 5px ;
  display: flex ;
  justify-content: space-around;
  align-items: center ;
  color: #fff ;
  z-index: 2 ;
}
.poll_cover .post_textbtns {
  position: relative ;
  margin-bottom : 5px ;
}
.poll_cover{
  position: absolute ;
  display : flex ;
  flex-direction: column ;
  bottom: 0% ;
  width: 98% ;
  min-height: 50px ;
  background-color : #0006 ;
  padding: 1%;
}
#poll_options{
  display : flex ;
  width: 100% ;
  align-items : center ;
  justify-content : center ;
}
#poll_options div{
  width: 90% ;
  padding: 5px ;
  padding-bottom: 10px ;
  padding-top : 10px ;
  display: flex ;
  align-items: center ;
  background-color: #0006 ;
  border-radius: 8px ;
  box-shadow: 0px 0px 3px #000 ;
}
#blank_div,#blank_poll{
   transition: background-color 0.5s ease;
  
}
#blank_imgparent video{
  width: 100% ;
  border-radius: 3px ;
  margin: 1px ;
  height: 150px ;
  width: 150px ;
   scroll-snap-align: start;
}
#blank_imgparent img{
  width: 100% ;
  border-radius: 3px ;
  margin: 1px ;
  height: 150px ;
  width: 150px ;
   scroll-snap-align: start;
}
#blank_smsparent video{
  width: 100% ;
  border-radius: 3px ;
  margin: 1px ;
  height: 150px ;
  width: 150px ;
   scroll-snap-align: start;
}
/* smsPreview  */
#blank_smsparent aside{
  border-radius: 8px ;
  color: #fff ;
  background: #e67e22 ;
  padding: 3px ;
  padding-left : 5px ;
  padding-right : 5px ;
  top: 0 ;
  margin: 2% ;
  box-shadow :0px 0px 3px #000 ;
  position: absolute ;
}
#blank_smsparent img{
  width: 100% ;
  border-radius: 3px ;
  margin: 1px ;
  height: 100% ;
  position: relative ;
  width: 100% ;
   scroll-snap-align: start;
}
#blank_imgparent{
  font-family: sans-serif;
    scroll-snap-type: x mandatory;    
    display: flex;
    -webkit-overflow-scrolling: touch;
    overflow-x: scroll;
    
    width: 100% ;
    Height : auto :
    max-height : 200px :
    background-color:  ;
    position: absolute ;
    bottom: 0 ;
}
#blank_smsparent{
  font-family: sans-serif;
    scroll-snap-type: x mandatory;    
    display: flex;
    background: #0000 ;
    -webkit-overflow-scrolling: touch;
    overflow-x: scroll;
    overflow-y: hidden ;
    min-height: 100% ;
    min-width : 100% ;
    max-height: 100% ;
    max-width : 100% ;
}
#blank_smscover{
    width: 96% ;
    padding: 2% ;
    Height : 98vh ;
    ax-height : 250px ;
    background-color: #000 ;
    position: absolute ;
    bottom: 0 ;
    left: 0 ;
    border-top-left-radius: 12px ;
    border-top-right-radius: 12px ;
    box-shadow: 0px 0px 8px #000 ;
    transition: 0.5s ease ;
    display : none ;
}
#blank_smshead{
  position: absolute ;
  top: 0 ;
  left: 0 ;
  margin: 3% ;
  z-index: 3 ;
  width: 90% ;
  display: flex ;
  justify-content :space-between ;
  align-items: center ;
  color:#fff ;
}
#blank_caption{
  position: absolute ;
  bottom: 0 ;
  left: 0 ;
  margin: 3% ;
  margin-right : 0% ;
  margin-left : 1% ;
  z-index: 3 ;
  ont-size: 12px ;
  width: 92% ;
  padding: 2%;
  outline: 0 ;
  border: 0 ;
  box-shadow : 0px 0px 3px #000 ;
  background-color: #0006 ;
  color: #fff ;
  transition: 0.5s ease ; 
   min-height : 20px ;
   font-family: 'koho', sans-serif ;
  max-height : 50px ;
  overflow-y : scroll ;
}
#post_colorcomment{
  min-width: 96% ;
  padding : 2% ;
  min-height: 50vh ;
  max-height: 50vh ;
  max-width: 96% ;
  background-color : #e67e22 ;
  color: #fff ;
  display: flex ;
  align-items: center ;
  txt-align: center ;
  font-family: Monospace ;
  justify-content: center ;
  border-radius: 3px ;
  word-break: break-all;
}
#post_quespoll section{
  min-width: 96% ;
  heght: 46% ;
  padding: 2% ;
  mrgin: 1% ;
  border-radius: 5px ;
}
#ques_pollsec{
  background-color:#0006 ;
  height: 65% ;
   display: flex ;
  flex-direction: column ;
  align-items: center ;
  color: #fff ;
  margin-bottom: 2px ;
}
#opt_pollsec{
  height: 26% ;
  background-color:#0006 ;
}
#post_quespoll{
  background-color : #242526 ;
  min-width:  98% ;
  max-width:  90% ;
  min-height: 60vh ;
  max-height: 70vh ;
  padding: 1% ;
  border-radius : 5px ;
  display: flex ;
  flex-direction: column ;
  justify-content: space-between ;
  align-items: enter ;
  box-shadow : 0px 0px 3px #000 ;
}
#ques_pollprof {
  display: flex ;
  flex-direction: row ;
  justify-content: space-between ;
  align-items: center ;
  font-family: Monospace ;
  width: 100% ;
  padding-top : 5px ;
  padding-bottom: 5px ;
}
#ques_pollimg{
 min-height: 50px ;
 min-width : 50px ;
 background-color: #0006 ;
 box-shadow: 0px 0px 3px #fff ;
 border-radius: 50% ;
}
#ques_polltext{
  width :98% ;
  height :85% ;
  padding: 1% ;
  background-color: #0006 ;
  border-radius: 3px ;
  color: #fff ;
  font-family: Monospace ;
}
#post_stuffbg .answer_top{
  box-shadow: 0px 0px 8px #0000 ;
  color: #fff ;
}
#post_stuffbg{
  background-color : #000 ;
}
#post_smsbg{
  background-color: #4e4e4e ;
  color: #fff ;
}
#post_smsbg .answer_top{
  box-shadow: 0px 0px 8px #0000 ;
  color: #fff ;
  position: absolte ;
  top: 0 ;
  left: 0 ;
  margin: 0 ;
  display: flex ;
  width: 94% ;
  padding-left: 3% ;
  padding-right: 3% ;
  justify-content: space-between ;
  background-color: #0003 ;
}
#sms_inner{
  min-height: 100% ;
  min-width : 100% ;
  max-height: 100% ;
  max-width : 100% ;
  display: flex ;
  background-color: ;
  flex-direction: column ;
  position: relative ;
  justify-content: space-between ;
    no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
     background-position: center center ;
  transition: 0.5s ease ;
} 
#sms_mybg section{
  min-width: 100px ;
  min-height: 100px ;
  max-width: 150px ;
  max-height: 150px ;
  border-radius: 5px ;
  margin: 2px ;
  margin-left : 5px ;
  z-index: 3 ;
  transition: 0.5s ease ;
  box-shadow: 0px 0px 3px #000 ;
  
}
#sms_myinner{
min-height: 100% ;
min-width : 100% ;
max-height: 100% ;
max-width : 100% ;
display: flex ;
align-items: center ;
overflow-x: scroll ;
}
#sms_mybg{
  position: absolute ;
  bottom: 0 ;
  margin: 1% ;
  padding: 1% ;
  width: 96% ;
  max-height: 20vh ;
  background-color: #0006 ;
  box-shadow: 0px 0px 8px #000 ;
  display: none ;
}
#sms_editable{
  align-self : center ;
  justify-self: center ;
  font-size: 45px ;
}
#sms_editable * {
  font-size: 45px;
}

#hashtag_div{
  position: absolute ;
  background-color: #0006 ;
  border-radius: 3px ;
  box-shadow: 0px 0px 3px #000 ;
  padding: 2% ;
  max-height: 40vh ;
  min-height: 2vh ;
  min-width: 40vw ;
  max-width: 45vw ;
  color: #fff ;
  font-family: 'koho', sans-serif ;
  display: none ;
  overflow-y: scroll ;
  z-index: 20;
}
#hashtag_inner section{
  width : 100% ;
  display: flex ;
  align-items : center ;
  height : auto ;
  
}
#hashtag_inner p{
  color: #fff ;
  font-size: 12px ;
  white-space:nowrap ;
    overflow: hidden ;
    text-overflow: ellipsis;
}
#hashtag_inner div{
  min-height: 70px ;
  min-width: 50px ;
  border-radius: 1px ;
  margin-top: 1px ;
  margin-bottom: 1px ;
   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
     margin-right: 5% ;
     background-position: center center ;  
}
#hashtag_inner{
  min-height: 100% ;
  min-width : 100% ;
  max-height: 100% ;
  max-width : 100% ;
  display: flex ;
  flex-direction : column ;
  overflow-y: scroll ;
  align-items: center ;
}
#sms_footer section{
  width: 98% ;
  padding: 1% ;
  display: flex ;
  justify-content: Space-around ;
  align-items : center ;
}
#sms_footer{
  position: absolte ;
  width: 98% ;
  max-height: 50vh ;
  min-height: 20px ;
  padding: 1% ;
  box-shadow: 0px 0px 2px #000 ;
  left: 0 ;
  bottom: 0 ;
  display: flex ;
  background-color: #0003 ;
  justify-content: Space-around ;
  align-items : center ;
  flex-direction: column ;
  transition: 0.5s ease ;
}
#pol_parent section{
   scroll-snap-align: start;
   min-width: 100% ;
   max-width: 100% ;
   min-height: 90% ;
   max-height: 90% ;
   background-color: ed ;
   box-shadow: 0px 0px 3px #0000 ;
  display: flex ;
  align-items: center ;
  border-radius: 3px ;
  margin: 1px ;
}
#pol_parent{
  min-width: 98% ;
  max-width: 98% ;
  min-height: 1vh ;
  max-height: 15vh ;
  padding: 5px ;
  ackground-color: blue ;  
    scroll-snap-type: x mandatory;    
    display: flex;
    -webkit-overflow-scrolling: touch;
    overflow-x: scroll;
}
#pol_div{
  display: flex ;
  align-items: center ;
  min-width: 95% ;
  min-height: 85% ;
  max-width: 95% ;
  max-height: 85% ;
  padding: 5px ;
  background-color: #0006 ;
  box-shadow: 0px 0px 8px #000 ;
  border-radius: 5px ;
  flex-direction : row ;
  position : relative ;
  justify-content : space-between ;
  overflow: hidden ;
}
#pol_top{
  min-width: 95% ;
  min-height : 100% ;
  max-height : 100% ;
  max-width: 95% ;
  padding-top : 7px ;
  padding-bottom : 7px ;
  margin-bottom : 2px ;
  padding: 5px ;
  background-color: # ;
  display: flex ;
  align-items: center ;
  justify-content: Space-around ;
}
.pol_input{
  background-color : #0000 ;
  outline: 0 ;
  border: 0 ;
  border-bottom : 2px solid #000 ;
  width: 70vw ;
  color: #fff ;  
  height: 90%;
  padding-bottom: 5px ;
  padding-top : 5px ;
}
#pol_foot img, #pol_foot video{
  width: 30px ;
  height: 30px ;
  border-radius: 2px ;
  margin: 2px ;
  float: right ;
}
#pol_foot{
  min-width: 100% ;
  min-height: 10% ;
  max-width: 100% ;
  position: asolute ;
  max-height: 10% ;
  padding-top: 2px ;
  padding-bottom: 2px ;
  background-color: #0000 ;
  display: flex ;
  overflow-x: scroll ;
}
#pol_new{
  display: flex ;
  flex-direction : column ;
  min-width: 80vw ;
}
#pol_content input{
  color: #0000 ;
}
#pol_content::befor {
  content: "\f005";
  font-family: "Font Awesome 5 Free";
  font-weight: 900;
}
#pol_content{
  
  display: flex ;
  justify-content: center ;
  max-width: 10px ;
  height: 10px ;
  border-radius: 5px ;
  padding : 10px ;
  background-color: #0006 ;
  box-shadow: 0px 0px 3px #000 ;
  align-items : center ;
  overflow: hidden ;
}
#sms_butt div{
  display: flex ;
  justify-content: center ;
  align-items: center ;
  color: #fff ;
  width: 32.8% ;
  height:  9.8vh ;
  text-align: center ;
  float: right ;
  margin: 1px ;
  border-radius: 3px ;
  background-color : #0008 ;
}
#sms_butt{
  width: 100% ;
  padding: % ;
  height: 0px ;
  background-color: #0003;
  display:none  ;
  border-radius: 3px ;
  transition: 0.5s ease ;
}
#color_switch{
  font-family: 'Orbitron', sans-serif ;
  font-size: 20px ;
}
#sms_textarea{
  border-radius: 10px ;
  background-color: #0006 ;
  width: 60% ;
  padding : 5px ;
  padding-bottom : 1px ;
  padding-top : 5px ;
  pdding-top : 10px ;
  adding-bottom : 10px ;
  height: auto ;
  display: flex ;
  align-items: center ;
  outline: 0 ;
  border: 0 ;
}
#no_channelbutton{
  width: 92% ;
  padding: 2% ;
  padding-top : 10px ;
  padding-bottom : 10px ;
  margin-top : 5px ;
  margin-bottom : 5px ;
  text-align: center ;
  background-color: #0006 ;
  border-radius: 5px ;
}
#no_channeltext{
}
#no_channelinner{
  min-width: 100% ;
  font-family: Monospace ;
  max-width: 100% ;
  min-height : 100% ;
  max-height : 100% ;
  display: flex ;
  flex-direction: column ;
  align-items: center ;
}
#no_channelbg{
  width: 94% ;
  padding: 2% ;
  margin : 1% ;
  margin-bottom : 2% ;
  display: none ;
  min-height: 50px ;
  max-height: 150px ;
  background-color: #242526 ;
  box-shadow: 0px 0px 8px #000 ;
  border-radius: 5px ;
  color: #fff ;
  z-index: 3  ;
  position: fixed ;
  left: 0 ;
  bottom: 0 ;
}
#channelform_inner{
  min-height: 100% ;
  max-height: 100% ;
  min-width : 100% ;
  max-width : 100% ;
  background-color: #242526 ;
    background-image: linear-gradient(to bottom, #cc5814, #000000);
  display: flex ;
  flex-direction: column ;
  
  justify-content: center ;
}
#channel_form{
  min-width: 91% ;
  min-height: 56vh ;
  padding: 2% ;
  display: flex ;
  flex-direction: column ;
  align-items : center ;
  justify-content: space-between ;
  box-shadow: 0px 0px 3px #000 ;
  border-radius: 5px ;
  background-color: #0006 ;
  align-self : center ;
}
#nnelform_top{
  margin-bottom : 2px ;
  margin-top : 2px ;
  min-width: 96% ;
  min-height: 25% ;
  background-color: #0006 ;
  border-radius: 5px ;
  padding: 5px ;
  display: flex ;
  justify-content:  ;
  align-items: center ;
}
#nnelform_img{
  min-width: 100px ;
  min-height : 100% ;
  border-radius: 3px ;
  background-color : #0006 ;
  display: flex ;
  flex-direction: column ;
  justify-content: center ;
  align-items: center ;
  background-repeat: no-repeat;
  background-position: center center;
  background-size: cover;
  box-shadow: inset 0px 0px 2px #000;


}
#nnelform_name{
  margin-bottom : 2px ;
  margin-top : 2px ;
  min-width: 65% ;
  max-width: 65% ;
  min-height: 100% ;
  background-color: #0000 ;
  border-radius: 5px ;
  padding: 5px ;
  color: #fff ;
  font-family :Monospace ;
  text-transform: capitalize ;
  outline: 0 ;
  border: 0 ;
  font-size : 12px ;
  overflow-x: scroll ;
}
#nnelform_text{
  margin-bottom : 2px ;
  margin-top : 2px ;
  min-width: 96% ;
  min-height: 50% ;
  background-color: #0006 ;
  border-radius: 5px ;
  padding: 5px ;
  color: #fff ;
  font-family :Monospace ;
  text-transform: capitalize ;
  outline: 0 ;
  border: 0 ;
  font-size : 12px ;
}
#nnelform_tag{
  margin-bottom : 2px ;
  margin-top : 2px ;
  outline: 0 ;
  border: 0 ;
  font-size : 12px ;
  min-width: 96% ;
  min-height: 10% ;
  background-color: #0006 ;
  border-radius: 5px ;
  padding: 5px ;
  color: #fff ;
  font-family :Monospace ;
  text-transform: capitalize ;
}
.brown_placeholder::placeholder {
  color: #242526 ;
}
.white_placeholder::placeholder {
  color: #ced7d9 ;
}
/* Hide the default file input */
.file-input-label input[type="file"] {
  position: absolute;
  width: 1px;
  height: 1px;
  overflow: hidden;
  opacity: 0;
}
.custom_alert .display_column{
  margin-left : 5px ;
}
.custom_alert{
  width: 92% ;
  padding: 2% ;
  margin: 2% ;
  padding-bottom: 7px ;
  padding-top: 7px ;
  bottom: -50% ;
  z-index: 20 ;
  font-family : Monospace ;
  position: fixed ;
  transition : 0.1s ease ;
  display: flex ;
  justify-content: space-between ;
  border-radius: 5px ;
  align-items: center ;
  box-shadow: 0px 0px 3px #000 ;
}
#custom_alertsuccess{
  background-color: #e67e22 ;
  color: #000 ;
}
#custom_alertfailure, #asake_alertfailure{
  background-color: #000 ;
  color: #fff ;
}
#custom_messagesus,#custom_messagefail, #asake_messagefail{
  font-size: 12px ;
}
#link_text,.link_text{
  color: #e67e22;
  font-family: Handlee;
  text-decoration: underline;
  font-size: 15px ;
}
.display_column{
  display : flex ;
  flex-direction : column ;
}
#mygroup_list{
  
  background-color: #0003 ;
  color: #fff ;
}
#grouplist_inner{
  position: relative ;
  display: flex ;
  flex-direction: column ;
  width: 96% ;
  padding: 2% ;
  padding-top : 0 ;
  padding-bottom : 0 ;
  transition :all 0.5s ease ;
  max-height : 100% ;
  min-height : 100% ;
  background-color: #000 ;
  color: #fff ;
  box-shadow: 0px 0px 3px #000 ;
  border-radius: 5px ;
  transition: 0.5s ease ;
  font-family: 'koho',sans-serif ;
  margin: 0% ;
  justify-content: space-between ;
  lign-items: center ;
  overflow-y: scroll ;
}
#grouplist_val aside, #whatsapp_bot aside, #whatsapp_head aside{
display : flex ;  
flex-direction : column ;
align-items : flex-start ;
  width: calc(90% - 70px);
}
#grouplist_val header, #whatsapp_bot header, #whatsapp_head header{
  color: #fff ;
  font-family : 'koho', sans-serif ;
  width: 100% ;
  font-weight : bold ;
}
#grouplist_val div, #whatsapp_bot div, #whatsapp_head div{
color: #898989 ;
font-size : 12px ;
}
#grouplist_val nav, #whatsapp_bot nav, #whatsapp_head nav{
  min-width : 50px;
  min-height : 50px ;
  max-width : 50px;
  max-height : 50px ;
  border-radius : 50% ;
  margin-right: 7% ;
    position : relative ;
    ackground-image:url('https://www.dropbox.com/s/e85d53ube6ikotx/HD-wallpaper-military-camouflage.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
     background-position: center center ;
}
#whatsapp_bot section, #whatsapp_head section{
  width: 97% ;
  padding: 1%  ;
  argin: 1% ;
  display : flex ;
  align-items : center ;
  border-bottm : 0.1px solid #2c2c2c ;
  transition: all 0.5s ease ;
  postion : relative ;
}
#whatsapp_head{
  ackground: #4444 ;
  width: 100% ;
  margin-top: 70px ;
}
#grouplist_val section{
  width: 97% ;
  padding: 1%  ;
  argin: 1% ;
  display : flex ;
  align-items : center ;
  border-bottom : 0.1px solid #2c2c2c ;
  transition: all 0.5s ease ;
  postion : relative ;
}
#whatsapp_bot section.selected_to_share::before {
  content: "\f058";
  font-family: "Font Awesome 5 Free";
  font-weight: 900;
  color: #b6b6b6 ;
  margin-right: 1px;
  psition: absolute ;
  font-size : 30px ;
  bottom: 0 ;
  right: 0 ;
  margin: 2% ;
  transition : all 0.5s ease ;
}
#whatsapp_bot section.selected_to_share {
background-color : #4444 ;
}
#whatsapp_head section.selected_to_share::before {
  content: "\f058";
  font-family: "Font Awesome 5 Free";
  font-weight: 900;
  color: #b6b6b6 ;
  margin-right: 1px;
  psition: absolute ;
  font-size : 30px ;
  bottom: 0 ;
  right: 0 ;
  margin: 2% ;
  transition : all 0.5s ease ;
}
#whatsapp_head section.selected_to_share {
background-color : #4444 ;
}
#grouplist_top span{
  margin-right : 3px ;
  margin-left : 0 ;
}
#grouplist_top{
  position : absolute ;
  width: 100% ;
  pdding: 3%  ;
  height: 8% ;
  color: #fff ;
  font-family: 'koho', sans-serif ;
  top: 0 ;
  left: 0 ;
  margin: 0 ;
  background-color : #2222  ;
  display : flex ;
  align-items : center ;
  box-shadow : 0px 0px 3px #000 ;
}
#grouplist_val{
  position: absolute ;
  width: 96% ;
  padding: 2% ;
  height: 90% ;
  top: 10% ;
  left: 0 ;
  overflow-y : scroll ;
  background:#3333 ;
}
#opera_bg{
  width: 100% ;
  height: 40vh ;
  position: fixed ;
  z-index: 30 ;
  bottom: -70%  ;
  left: 0 ;
  background-color: #000 ;
  box-shadow: 0px 0px 15px #000 ;
  transition: 0.5s ease ;
  isplay : none ;
}
#opera_inner{
  display: flex ;
  flex-direction: column ;
  min-height: 100% ;
  min-width : 100% ;
  max-height: 100% ;
  max-width : 100% ;
  background-color: #0008 ;
  justify-content: space-between ;
}
#opera_board section{
  scroll-snap-align: start;
   min-height: 100% ;
  min-width : 100% ;
  max-height: 100% ;
  max-width : 100% ;
  background-color : purpe ;
    ackground-image:url('https://www.dropbox.com/s/e85d53ube6ikotx/HD-wallpaper-military-camouflage.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
     background-color: #0004 ;
}
#opera_vidsection iframe {
  width: 100%; /* Set the width of the iframe */
  height: 100% ; /* Set the height of the iframe */
  border: none; /* Remove the border */
  box-shadow: 0 0 5px rgba(0, 0, 0, 0.3); /* Add a box shadow */
  order-radius: 8px; /* Add rounded corners */
  ackground-color: #f2f2f2; /* Set the background color */
  /* Add any other desired styles */
}

#opera_board{
  scroll-snap-type: x mandatory;    
  display: flex;
  -webkit-overflow-scrolling: touch;
    overflow-x: scroll;
  min-height: 25vh ;
  min-width : 100% ;
  max-height: 25vh ;
  max-width : 100% ;
  background-color: #242526 ;
}
#opera_foot{
  min-height: 15vh ;
  min-width : 100% ;
  max-height: 15vh ;
  max-width : 100% ;
  background-color: #0009 ;
  display: flex ;
  flex-direction: column ;
}
#opera_image{
    min-height: 35% ;
  min-width : 25% ;
  max-height: 35% ;
  max-width : 50% ;
  position: absolute ;
  left: 0% ;
  margin: 5px ;
  margin-bottom : 0 ;
  margin-left : 0 ;
  bottom: 0% ;
  box-shadow: 0px 0px 3px #000 ;
  border-radius: 5px ;
  ackground-color : purple ;
  background-color : #0006 ;
    background-image:url('https://www.dropbox.com/s/e85d53ube6ikotx/HD-wallpaper-military-camouflage.jpg?raw=1');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
     background-position: center center ;
}
#opera_oneleg{
  width: 65% ;
  align-self: end ;
  z-index: 15 ;
  background-color: #0000 ;
  padding: 5px ;
}

  
#opera_twoleg {
  align-self : end ;
  position: absolute ;
  bottom: 0 ;
}
#opera_twoleg a {
    display: inline-block;
    background: #e74c3c;
    padding: 10px 20px;
    border-radius: 5px;
    color: #fff;
    margin: 2px ;
    margin-right: 5vw  ;
    
    cursor: pointer;
    transition: 0.5s;
}

#opera_twoleg a:hover {
    background: #c0392b;
}

#opera_name{
  color: #fff ;
  font-size: 20px ;
  font-weight: bold;
  font-family : 'koho', sans-serif;
}
#opera_detail span{
  margin: 1px ;
  font-size: 12px ;
  color: #d5ddde;
}
#opera_imdb{
  color: gold;
  
}
#opera_imdb::before {
  content: "\f005";
  font-family: "Font Awesome 5 Free";
  font-weight: 900;
  color: gold ;
  margin-right: 1px;
}
#opera_seas::before {
  content: "\f114";
  font-family: "Font Awesome 5 Free";
  font-weight: 900;
  color: gold ;
  margin-right: 1px;
}
#opera_seas{
  color: #fff ;
  display : none ;
}

.opera_more{
  display: flex ;
  flex-direction: row ;
  align-items : flex-start ;
  justify-content: space-between ;
  background-color:  ;
  padding: 5px ;
  padding-top : 0px ;
}
#opera_collectbtn, #opera_bellbtn, #opera_listbtn, #opera_sharebtn{
    Border-radius : 50%;
    padding: 10px ;
    height: 15px ;
    display: flex ;
    justify-content: center ;
    align-items: center ;
    width: 15px ;
    background-color: #0006 ;
    margin: 1px ;
    margin-left : 3px ;
    margin-right : 3px ;
    color: #d5ddde ;
    box-shadow: 0px 0px 8px #000 ;
}
#chan_searchtab{
  display: flex ;
  flex-direction: column ;
  background-color : #000 ;
}
#chan_top{
  position: abolute ;
  top: 0 ;
  left: 0 ;
  width: 96% ;
  padding-bottom: 10px ;
  padding-top : 10px ;
  padding-left: 3% ;
  display: flex ;
  max-height : 5vh ;
  align-items : center ;
}
#chan_results{
  overflow-y: scroll ;
  Min-width: 100vw ;
  Max-width: 100vw ;
  min-height: 90vh ;
  max-height: 90vh ;
  background-color: cyan ;
}
#loader {
   width: 40px; 
   height:40px;
   background: #eee;
   border-radius: 50%;
   position: fixed;
   left:-webkit-calc(50% - 20px);
   left:-moz-calc(50% - 20px);
   left:calc(50% - 20px);
   opacity: 0;
   top: 20vh;
   border: solid 2px #181d20;
   display: flex ;
   align-items: center ;
}

.arr {
   width: 20px;
   height: 20px; 
   border: 2px solid #e67e22 ;
   margin: 10px auto;
   border-radius: 50%;
   border-left-width: 0;
   border-top-width: 0;
}

#loader.moveup {
   transition: all .5s;
   top : 10px !important;
   animation: rotating 3s .3s linear infinite
}

#loader.fadegone {
    top : 10px !important;
    animation: shrinking .5s 0s linear;
    animation-fill-mode: forwards;
}

@keyframes rotating {
    from {
        transform: rotate(360deg);
    }
        
   to {
       /*top: 10px;*/
       transform: tranlateY(10px) rotate(0deg);
   } 
}

@keyframes shrinking {
    from {
        transform: rotate(360deg) scale(1,1);
        filter: opacity(100%);
    }
    
   to {
       transform: rotate(0deg) scale(0,0);
       filter: opacity(0%);
   } 
}
#film_bgcom{
  display: flex ;
  align-items : center ;
  justify-content: center ;
  background-color: #0004 ;
   background: rgba(255, 255, 255, 0.1);
    box-shadow: 0 20px 50px rgba(0, 0, 0, 0.15);
    backdrop-filter: blur(5px);
    transition: .2s ;
    z-index: 27 ;
}
.film_bgpop{
    order:3px solid transparent ;
    border-radius: 0 ;
    padding:0;
    margin: 0 ;
    color:violet;
    background-color:lightgrey;
    
   
    transition:all 0.5s;
    display: none ;
   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#enlarge_img,#enlarge_video{
  width: 100% ;
  height: auto ;
}
#enlarge_contbg{
  position: absolute ;
  bottom: 0 ;
  width: 100% ;
  background-color: #e67e22 ;
  height: 20vh ;
  padding: 2% ;
  display : none ;
  transition: 0.5s ease ;
}
#enlarge_continner{
  display: flex ;
  min-width: 100% ;
  min-height: 100% ;
  max-width: 100% ;
  max-height: 100% ;
}
#amenities_inner{
  position: relative ;
  min-width: 100% ;
  min-height: 100% ;
  max-width: 100% ;
  max-height: 100% ;
  ackground-color: #e67e22 ;
  display: flex ;
  flex-direction: column ;
  align-items: center ;
  justify-content: center ;
}
.amentities_tabs{
  position:absolute  ;
  min-width: 100% ;
  min-height: 100% ;
  max-width: 100% ;
  max-height: 100% ;
  top: 0 ;
  left: 0 ;
  background-color: #242526 ;
  display : none ;
  overflow-y: hidden ;
}
#collection_tab{
  display : block ;
  ackground-color: #e67e22 ;
}
.amen_tabinner{
  min-width: 100vw ;
  min-height: 94vh ;
  max-height: 94vh ;
  max-width: 100vw ; 
  background-color: #242526 ;
}   
.amen_head{
  min-width: 96vw ;
  min-height: 5vh ;
  max-height: 7vh ;
  max-width: 96vw ;
  display: flex ;
  overflow: hidden ;
  align-items : center ;
  justify-content : space-between ;
  padding: 1% ;
  padding-right: 2% ;
  padding-left: 2% ;
  background-color: #000 ;
  color: #fff ;
  font-family: 'koho', sans-serif ;
}
#add_newsoption{
  position: fixed ;
  top: 0 ;
  left: 0 ;
  width: 100% ;
  height: 100% ;
  display: none ;
  background-color : #0003 ;
}
#news_optioninner section{
  scroll-snap-align: start;
  min-width: 100% ;
  min-height : 100% ;
  max-width: 100% ;
  max-height : 100% ;
  border-radius: 5px ;
  box-shadow: 0px 0px 3px #000 ;
}
#news_optioninner{
  scroll-snap-type: x mandatory;    
  display: flex;
    -webkit-overflow-scrolling: touch;
    overflow-x: scroll;
   adding: 2% ;
  adding-top : 3% ;
  argin: 1% ;
  height: 30%;
  width: 96% ;
  position: fixed ;
  left: 0 ;
  bottom: -30px ;
  margin-left: 2% ;
  margin-right: 2% ;
  margin-bottom : 2% ;
  border-radius: 5px ;
  display: flex ;
  transition: 0.5s ease ;
  justify-content: space-between ;
  align-items: center ;
  order-top-left-radius: 5px ;
  order-top-right-radius: 5px ;
  background-color: #242526 ;
  box-shadow: 0px 0px 8px #000 
  z-index:  ;
  color: #fff ;
  font-family: 'koho',sans-serif ;
  
}
#spec1_div{
  display: flex ;
  flex-direction: column ;
  justify-content: Space-around ;
  align-items: center ;
}
#spec1_box{
  min-width: 90vw ;
  min-height : 18vh ;
  max-width: 85vw ;
  max-height : 18vh ;
  box-shadow: 0px 0px 2px #000 ;
  border-radius: 3px ;
  background-color: #0006 ;
  margin-top : 2% ;
  margin: 1% ;
}
#spec1_title{
  margin: 1% ;
  background-color: #0006 ;
  min-width: 96% ;
  min-height : 3vh ;
  max-width: 96% ;
  max-height : 3vh ;
  box-shadow: 0px 0px 2px #000 ;
}
#spec1_prof{
  display: flex ;
  min-width: 100% ;
  max-width: 100% ;
  align-items: center ;
  justify-content: space-between ;
}
#spec1_img{
  box-shadow: 0px 0px 2px #000 ;
  background-color: #0006 ;
  min-width: 40px ;
  min-height : 40px ;
  max-width: 40px ;
  max-height : 40px ;
  border-radius: 50% ;
  margin: 2% ;
  
}
#spec1_name{
  margin: 2% ;
  box-shadow: 0px 0px 2px #000 ;
  background-color: #0006 ;
  min-width: 50% ;
  min-height : 2vh ;
  max-width: 50% ;
  max-height : 2vh ;
  border-right: 2px ;
}
#spec2_div{
  display: flex ;
  flex-direction: row ;
  align-items: center ;
  justify-content: space-between ;
}
#spec2_bron{
  min-width: 65vw ;
  max-width: 65vw ;
  min-height: 15vh ;
  max-height: 15vh ;
  display: flex ;
  flex-direction : column ;
  align-items: flex-end ;
}
#spec2_title{
  background-color: #0006 ;
  min-width: 60vw  ;
  min-height: 7vh  ;
  max-width: 60vw  ;
  max-height: 7vh  ;
  box-shadow: 0px 0px 2px #000 ;
  border-radius: 2px ;
  margin: 2% ;
  margin-right : 2% ;
}
#spec2_name{
  margin-right : 2% ;
  border-radius: 2px ;
  background-color: #0006 ;
  min-width: 20vw  ;
  min-height: 5vh  ;
  max-width: 20vw  ;
  max-height: 5vh  ;
  box-shadow: 0px 0px 2px #000 ;
}
#spec2_img{
  margin: 2% ;
  background-color: #0006 ;
  box-shadow: 0px 0px 2px #000 ;
  min-width: 25vw ;
  min-height: 15vh ;
  max-width: 15px ;
  max-height: 15px ;
  border-radius: 8px ;
}
#spec3_div{
  display: flex ;
  flex-direction: column ;
  align-items: center ;
  justify-content: center ;
}
#spec3_box{
   min-width: 86vw ;
  min-height : 18vh ;
  max-width: 86vw ;
  max-height : 18vh ;
  border-radius: 3px ;
  margin-top : 2% ;
  margin: 1% ;
  display: flex ;
  justify-content: space-between ;
}
#three_box1{
  background-color: #0006 ;
  box-shadow: 0px 0px 2px #000 ;
  border-top-left-radius: 3px ;
  border-bottom-left-radius: 3px ;
  min-width: 42vw ;
  min-height: 18vh ;
}
#three_box2{
  background-color: #0006 ;
  box-shadow: 0px 0px 2px #000 ;
  border-top-right-radius: 3px ;
  border-bottom-right-radius: 3px ;
  min-width: 42vw ;
  min-height: 18vh ;
}
#four_box1{
  background-color: #0006 ;
  box-shadow: 0px 0px 2px #000 ;
  border-top-left-radius: 3px ;
  border-bottom-left-radius: 3px ;
  min-width: 27.5vw ;
  min-height: 18vh ;
}
#four_box2{
  background-color: #0006 ;
  box-shadow: 0px 0px 2px #000 ;
  border-top-right-radius: 3px ;
  border-radius: 0px ;
  min-width: 27.5vw ;
  min-height: 18vh ;
}
#four_box3{
  background-color: #0006 ;
  box-shadow: 0px 0px 2px #000 ;
  border-top-right-radius: 3px ;
  border-bottom-right-radius: 3px ;
  min-width: 27.5vw ;
  min-height: 18vh ;
}
#spec3_prof{
  min-width : 90vw ;
  min-height : 10vw ;
  display: flex ;
  align-items: center ;
}
#spec3_img{
  min-height: 50px ;
  margin: 2%  ;
  min-width : 50px ;
  box-shadow : 0px 0px 2px #000 ;
  background-color : #0006 ;
  border-radius: 50% ;
}
#spec3_title{
  min-height: 3vh ;
  min-width : 50vw ;
  box-shadow : 0px 0px 2px #000 ;
  background-color : #0006 ;
}
#spec5_div{
  display: flex ;
  flex-direction: column ;
  align-items : center ;
}
#spec5_box div{
   min-width: 42vw ;
  min-height : 8vh ;
  float: right ;
  background-color : #0006 ;
  margin: 2% ;
}
#spec5_box{
   min-width: 88vw ;
  min-height : 20vh ;
  ax-width: 85vw ;
  max-height : 20vh ;
  border-radius: 3px ;
  margin-top : 2% ;
  margin: 1% ;
}



::-webkit-scrollbar-thumb {
    background: #0000;
    border-radius:30px   ;
}
::-moz-scrollbar-thumb {
    background: #0000;
    border-radius:30px   ;
}
.notag{
  text-transform: capitalize ;
  font-family : 'koho',sans-serif ;
}
.notag::after {
  content: "  ● ";
  display: inline-block;
  font-size: 5px ;
  margin-left : 3px ;
  margin-right : 3px ;
}  
.tag{
  text-transform: capitalize ;
  font-family : 'koho',sans-serif ;
}
.tag::after {
  content: "  ● ";
  display: inline-block;
  font-size: 5px ;
  margin-left : 3px ;
  margin-right : 3px ;
}  
.tag:hover {
  text-decoration: underline; 
}  
#create_newsbg{
  position: fixed ;
  bottom: 0 ;
  left: 0 ;
  margin : 1% ;
  margin-right : 2% ;
  margin-left : 2% ;
  width: 96% ;
  height: 85% ;
  box-shadow: 0px 0px 13px #000 ;
  border-top-left-radius : 8px  ;
  border-top-right-radius : 8px  ;
  z-index: 2 ;
  display : none ;
  background-color: #000 ;
  color: #fff ;
}
#create_newsexit{
  position: absolute ;
  top: 0 ;
  left: 0 ;
  margin: 3% ;
  z-index: 2 ;
}
#create_newsinner{
  position: relative ;
  min-height: 100% ;
  min-width: 100% ;
  max-height: 100% ;
  max-width: 100% ;
  border-top-left-radius : 8px  ;
  border-top-right-radius : 8px  ;
  background-color: #242526 ;
}
/* Tooltip container */
.help_svg{
  position:  fixed ;
  z-index: ;
  top: 7%  ;
  right: 1% ;
  margin: % ;
  z-index: 1;
  width: 12%  ;
  background-color:none;
}
#suggest_help{
  margin: 1% ;
  top: 0 ;
  left: 0 ;
  position: absolute ;
}
/* Tooltip text */
.help_svg .tooltiptext {
  visibility: hidden;
  width: 86%;
  background-color: #e67e22;
  color: #fff;
  font-size: 5vw ;
  font-family:'koho',sans-serif ;
  text-align: left;
  overflow-y:  croll ; 
  padding: 3%;
  border-radius: 6px;

  /* Position the tooltip text */
  position: fixed ;
  z-index: 5;
  ottom: 125%;
  left: 3%;
  margin-left: ;
 height: auto  ;
  /* Fade in tooltip */
  opacity: 0;
  transition: opacity 0.3s;
}
/* Tooltip arrow */
.help_svg .tooltiptext::after {
  content: "";
  position: absolute;
  top: 100%;
  left: 50%;
  margin-left: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: #e67e22 transparent transparent transparent;
}

/* Show the tooltip text when you mouse over the tooltip container */
.help_svg:hover .tooltiptext {
  visibility: visible;
  opacity: 1;
}

.toggle-btn {
  cursor: pointer;
  display: flex;
  align-items: center;
  float: right ;
  align-self: end ;
  position: relative ;
  margin-bottom : 10px;
}

.chevron {
  width: 0;
  height: 0;
  border-top: 5px solid transparent;
  border-left: 8px solid rgb(59,59,59) ;
  border-bottom: 5px solid transparent;
  margin-right: 10p
  color: #fff ;
}
.chevron.collapsed {
  transform: rotate(-90deg);
}

.content {
  display: none;
  margin-top: 10px;
  color: #fff ;
  font-family : 'koho', sans-serif ;
}

.content.visible {
  display: block;
}
.confirm_inner{
  min-height: 100% ;
  min-width : 100% ;
  max-height: 100% ;
  max-width : 100% ;
  background-color: #0003 ;
  display: flex ;
  align-items: center ;
  flex-direction : column ;
}
#confirm_bg,#confirm_bgtwo{
  position: fixed ;
  bottom: -300px ;
  left: 0 ;
  transition: 0.5s ease ;
  max-height: 12vh ;
  width: 90vw ;
  z-index: 22 ;
  padding: 3% ;
  margin: 2% ;
  background-color: #000 ;
  box-shadow: 0px 0px 8px #000 ;
  border-radius: 8px ;
  color: #fff ;
  font-family: 'koho', sans-serif ;
}
#addmoment_bg, #addcloset_bg{
  z-index: 20 ;
  background-color : #0003 ;
/*
  position: fixed ;
  bottom:  ;
  left: 0 ;
  transition: 0.5s ease ;
  max-height: 12vh ;
  width: 90vw ;
  padding: 3% ;
  margin: 2% ;
  background-color: #000 ;
  box-shadow: 0px 0px 8px #000 ;
  border-radius: 8px ;
  color: #fff ;
  font-family: 'koho', sans-serif ;
*/
}
.official_inner{
  position: absolute ;
  bottom: 10px ;
  left: 0 ;
  transition: 0.5s ease ;
  max-height: 12vh ;
  width: 90vw ;
  z-index: 5 ;
  padding: 3% ;
  margin: 2% ;
  background-color: #121212 ;  
  box-shadow: 0px 0px 8px #000 ;
  border-radius: 8px ;
  color: #fff ;
  font-family: 'koho', sans-serif ;
}

#confirm_text,#confirm_texttwo, #addmoment_text, #addcloset_text{
  font-size: 12px ;
  align-self: flex-start ;
}
.confirm_btns{
  width: 100% ;
  display: flex ;
  flex-direction: row ;
  justify-content: space-between ;
}
.confirm_opt{
  margin: 2% ;
  padding: 2% ;
  padding-left: 5% ;
  padding-right: 5% ;
  border-radius: 3px ;
  background-color : #242526 ;
  font-weight: bold ;
}
#confirm_no,#confirm_notwo,#confirm_decline,#confirm_nega{
  color: #000 ;
  background-color : #fff ;
}
#alert_bg{
  position: fixed ;
  z-index: 20;
  width: 92vw ;
  max-height: 5vh ;
  padding: 1% ;
  margin: 1% ;
  margin-right : 3% ;
  margin-left : 3% ;
  top: -50% ;
  transition: 0.2s ease ;
  left: 0 ;
  border-radius : 8px ;
  box-shadow: 0px 0px 13px #000 ;
  background-color: #0008 ;
}
#alert_inner{
  min-height: 100% ;
  min-width: 100% ;
  max-height: 100% ;
  max-width: 100% ;
  display: flex ;
  align-items : center ;
}
#alert_text{
  font-size: 12px ;
  color: #fff ;
  font-family: 'koho ', sans-serif ;
}
#alert_icon{
  color: #fff ;
  margin: 5px ;
}
#share_bg{
  position: fixed ;
  width: 90% ;
  border-top-left-radius: 18px ;
  border-top-right-radius: 18px ;
  box-shadow: -5px 0px 8px #000 ;
  max-height: 90vh;
  min-height: 30vh;
  background: #000 ;
  padding: 5% ;
  bottom: 0 ;
  left: 0 ;
  display: none ;
  transition :all 0.5s ease ;
}
#share_inner section{
  width: 100% ;
  display: flex ;
  justify-content: space-between ;
  align-items: center ;
  margin-bottom: 2% ;
}
#share_inner{
  min-height: 90% ;
  min-width : 90% ;
  max-height: 90% ;
  max-width : 90% ;
  background-color: #0000 ;
  position: absolute ;
  display: flex ;
  flex-direction: column ;
  overflow-y: scroll ;
  align-items: center ;
  border-top-right-radius : 5px ;
  border-radius : 5px ;
  color: #fff ;
  padding-bottom: 2vh ;
}
#share_profilebox{
  display : flex ;
  width: 80% ;
  padding: 1% ;
  margin: 1% ;
  align-items : center ;
}
#share_image{
  min-width: 40px ;
  min-height: 40px ;
  box-shadow: 0px 0px 3px #000 ;
  border-radius: 50% ;
  background-color : #aeaeae ;
   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
     margin-right : 2% ;
}
#share_name{
  font-size: 16px ;
  color: #fff ;
  font-family: 'koho', sans-serif ;
    white-space:nowrap ;
    overflow: hidden ;
    text-overflow: ellipsis;
}
#share_lilbtn{
  padding: 2px ;
  margin: 3px ;
  
}
#comment_tabbg{
  ackground : #0f0f0f ;  
  background : #000 ;  
  idth: 100% ;
  z-index : 20 ;
}
#comment_tabinner, .commentclass_tabinner{
  min-height: 100% ;
  min-width: 100% ;
  max-height: 100% ;
  max-width: 100% ;
  display : flex ;
  flex-direction : column ;
  background-color: #0000 ;
  position:  relative ;
  align-items :center ;
  justify-content : spce-between ;
  font-family: 'koho',sans-serif ;
  color: #fff ;
}
#comment_middle section aside div, .commentclass_middle section aside div{
  font-size: 12px ;
}
#comment_middle section aside, .commentclass_middle section aside{
  display: flex ;
  flex-direction: column ;
  align-items: center ;
}
.comment_msg, .commentclass_middle section nav p{
  font-size: 16px ;
  color: #fff ;
  overflow-y : scroll ;
}
#comment_middle section nav header, .commentclass_middle section nav header{
  min-height: 40px ;
  min-width : 40px ;
  max-height: 40px ;
  max-width : 40px ;
  background-color : #4444 ;
  margin: 2% ;
  border-radius: 50% ;
   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
     box-shadow: 0px 0px 3px #000 ;
}
#comment_middle section nav, .commentclass_middle section nav{
  display : flex ;
  align-items: flex-end ;
  width: 90% ;
}
#comment_middle section, .commentclass_middle section{
  display: flex ;
  justify-content : space-between ;
  align-items: flex-end ;
  margin-top : 1% ;
  margin-bottom : 1% ;
  padding : 3% ;
  padding-top : 1% ;
  padding-bottom : 1% ;
  width: 94% ;
  ackground-color : red;
   border-bottom : 0.1px solid #4e4e4e ;
}
#comment_middle, .commentclass_middle{
  margin: 0% ;
  padding-bottom: 20% ;
  margin-top: 2% ;
  position: bsolute ;
  max-height: 100% ;
  min-width: 100% ;
  max-width: 100% ;
  background: #0000 ;
  overflow-y: scroll ;
  align-self : flex-end ;
}
.comment_below{
  color: #444444;
  display : flex ;
  align-items : center ;
  min-width: 20% ;
  padding: 1% ;
  width: 100px ;
  ackground-color : #e67e22 ;
  margin-top : 2% ;
  justify-content : Space-between ;
}
.comment_date{
  font-size: 15px ;
  white-space : nowrap ;
}
#comment_bot, .commentclass_bot{
  position : absolute ;
  bottom: 0 ;
  width: 96% ;
  padding: 2% ;
  max-height: 40% ;
  background-color : #000 ;
  display: flex ;
  flex-direction: column ;
  justify-content : center ;
  align-items : center ;
  border-top: 0.1px solid #818181 ;
}
#comment_boinner, .commentclass_boinner{ 
  width: 96% ;
  padding: 2% ;
  max-height: 20% ;
  ackground-color : #000 ;
  display: flex ;
  align-items : flex-end ;
}
#comment_inputdiv, .commentclass_inputdiv{
  outline: 0 ;
  border: 0 ;
  padding: 1% ;
  border-radius: 5px ;
  box-shadow : 0px 0px 3px #000 ;
  width: 90% ;
  display: flex ;
  align-items : flex-end ;
  background-color : #353535  ;
  color: #fff ;
}
#comment_text, #review_text{
  outline: 0 ;
  border: 0 ;
  border-radius: 5px ;
  width: 90% ;
  padding: 2% ;
  color: #fff ;
  ackground-color : #e67e22 ;
  font-family: 'koho', sans-serif ;
  font-size : 16px ;
  min-height : 20px ;
  max-height : 150px ;
  transition : all 0.5s ease ;
  overflow-y : scroll ;
}
#comment_sms{
  color: #000 ;
}
#comment_send, #review_sendbtn{
  width: 10% ;
  display :flex ;
  justify-content:center ;
  align-items : center ;
  background-color :  ;
  color: #fff ;
}
.match_resdivs{
  min-height: 100% ;
  min-width : 100% ;
  max-height: 100% ;
  max-width : 100% ;
  background-color: #0f0f0f ;  
  overflow-y: scroll ;
  display: none ;
}
#match_ansinn{
  min-height: 100% ;
  min-width : 100% ;
  max-height: 100% ;
  max-width : 100% ;
  background-color: #0000 ;  
  overflow-y: scroll ;
  display: block ;
}
.selected{
  box-shadow: 0px 0px 3px #fff ;
  background-color: #0006 ;
  font-weight: bold ;
}
#match_resmov section {
  min-height: 100px ;
  min-width : 100px ;
  float: right ;
   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#match_resmov{
  display: block ;
  background-color : ;
}
#change_matchdiv p{
  padding : 3% ;
  background: #0003 ;
  border-radius: 25px ;
  margin-left: 5vh ;
  margin-top: 5vh ;
  padding-left: 5% ;
  padding-right: 5% ;
  margin: 2% ;
  display: inline-block ;
}
#change_matchdiv{
  position: absolute ;
  bottom: 0 ;
  left: 0 ;
  width: 100% ;
  padding: 0% ;
  height : 0 ;
  max-height : 70vh ;
  background-color: #242526  ;
  box-shadow: 10px 0px 30px #000 ;
  transition: 0.5s ease ;
  border-top-left-radius: 13px ;
  border-top-right-radius: 13px ;
  display:  ;
  overflow-y: scroll ;
  padding-bottom: 10% ;
}
#share_playlistdiv div::before {
  content: "\f07c";
  font-family: "Font Awesome 5 Free";
  font-weight: 900;
  margin-right: 8px;
}
#share_playlistdiv div{
  width: 95% ;
  color: #fff ;
  font-family: 'koho', sans-serif ;
  padding-top : 2% ;
  padding : 2% ;
  margin-top : 2% ;
  margin-bottom : 2% ;
  text-transform: capitalize ;
}
#share_playlistdiv{
  position : fixed ;
  width: 96% ;
  padding: 2% ;
  bottom: -50% ;
  height: 10vh ;
  left: 0 ;
  z-index: 20 ;
  display: flex ;
  align-items: center ;
  flex-direction: column ;
  border-top-right-radius: 12px ;
  border-radius: 12px ;
  box-shadow :0px 0px 8px #000 ;
  background-color: #000 ;
  transition : all 0.5s ease ;
}

.flex_section section{
  flex-basis: calc(33.33% - 5px);
  min-height : 30vh ;
  box-shadow : 0px 0px 8px #000 ;
  background-color : #0003 ;
  position: relative ;
  margin : 2.5px ;
  no-repeat-center-center : fixed ;
  background-size: cover ;
  -webkit-background-size: cover ;
  -moz-background-size: cover ;
  -o-background-size: cover ;
  transition : all 0.5s ease ;
  background-position: center center ;
}
.flex_section {
  display: flex;
  flex-wrap: wrap;
  ackground-color: #e67e22;
  transition: all 0.5s ease ;
}
.flex_section{
  overflow-y: scroll ;
}

.twit_cover .movie_title, .twit_cover .serie_title, .twit_cover .cast_title, .twit_cover .hash_title{
     
      text-transform: capitalize;
      font-style: normal;
    
}
.twit_cover{
  width: 100% ;
  min-height: 50px ;
  display: flex ;
  align-items: flex-end ;
  justify-content: Space-between ;
  margin-bottom : 2% ;
  padding-top : 5px ;
  padding-bottom : 5px ;
  position: relative ;
  border-bottom : 0.1px solid #4e4e4e ;
  ox-shadow: 0px 0px 1px #4e4e4e ;
}
.twit_pollcover{
  margin-top: 2% ;
  width: 95% ;
  min-height: 100px ;
  display : flex ;
  flex-direction: column ;
  ackground-color : #e67e22 ;
}
.poll_range{
  position : absolute ;
  background: #523706 ;
  padding: 0 ;
  margin: 0 ;
  left: 0 ;
  in-width : 10px ;
  min-height : 100% ;
  max-height : 98% ;
  z-index : 1 ;
  border-top-right-radius : 3px ;
  border-bottom-right-radius : 3px ;
  border-radius : 3px ;
  transition : all 0.5s ease ;
}
.twit_polls div{
  font-family : 'koho', sans-serif ;
  margin-right: 3% ;
  position :relative ;
  z-index : 2 ;
}

.poll_count::before{
  content: "\f161";
  font-family: "Font Awesome 5 Free";
  font-weight: 900;
  color: #a6a6a6 ;
  margin-right: 3px;
}
.poll_count{
  z-index : 2 ;
  color: #a6a6a6 ;
}
.twit_polls span{
  z-index : 2 ;
  font-family : 'koho', sans-serif ;
}
.twit_polls{
  border-radius : 3px ;
  box-shadow : 0px 0px 1px #4f4f4f ;
  margin: 2% ;
  padding: 2% ;
  width: 96% ;
  display : flex ;
  align-items : center ;
  color: #fff ;
  margin-left: 0 ;
  position: relative ;
}
.poll_below span{
  font-size : 12px ;
  color: #939393;
}
.poll_below{
  margin-top: 7% ;
  width: 95% ;
  display : flex ;
  justify-content : space-between ;
}
.twit_post{
  position: relative ;
  min-width: 85% ;
  max-width: 85% ;
  min-height : 10px ;
  ax-height : 90vh ;
  border-radius: 3px ;
  ackground-color: cyan ;
  background-color: #0006 ;
  box-shadow: 0px 0px 2px #000 ;
  display: flex ;
  flex-direction: column ;
  justify-content: Space-around ;
}
.twit_head{
  width: 96% ;
  in-height: 20px ;
  display : flex ;
  osition: absolute ;
  padding: 1% ;
  margin : 1% ;
  margin-left : 0 ;
  padding-left : 0 ;
  top: 0 ;
  background:#0000 ;
  color: #939393 ;
  font-family : 'koho', sans-serif ;
}
.twit_userdate::before{
   content: "-"; 
  font-family: "Font Awesome 5 Free";
  margin: 1px;
  font-size: 5px ;
}
.twit_username::before{
   content: "@"; 
}
.twit_username, .twit_userdate{
  font-size : 14px ;
}
.twit_username{
  margin-right: 1px ;
  max-width : 85% ;
  white-space:nowrap ;
    overflow: hidden ;
    text-overflow: ellipsis;
}
/*  egg_cover  egg   */ 
.egg_div div{
  min-height: 60px ;
  min-width : 40px ;
  max-height: 30px ;
  max-width : 30px ;
  border-radius: 2px ;
  margin: 2px ;
  float: right ;
  background: #0003 ;
  box-shadow: 0px 0px 3px #000 ;
  justify-content: flex-end ;
   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
     background-position: center center ;
}
.egg_div{
  min-width: 98% ;
  max-width: 98% ;
  min-height: 5px ;
  ax-height: 50px ;
  margin: 2px ;
  ackground-color : #e67e22 ;
  isplay: flex ;
  align-items: center ;
}
.twit_text{
  margin-top: 2% ;
  font-size: 16px ;
  color : #fff ;
  font-family:'koho',sans-serif ;
}
.twe_listcontainer .egg_div div{
  background-color : #4444 ;
}
.twe_listcontainer{
  display : flex ;
  flex-direction : column ;
  align-items : center ;
  ackground-color : red ;
  min-width : 96% ;
  padding : 1% ;
  min-height : 100% ;
  max-width : 96% ;
  max-height : 100% ;
  borde: 1px solid #fff ;
  padding-top : 5px ;
  padding-bottom : 5px ;
  overflow-y : scroll ;
}
#tlist_topinput{
  color: #fff ;
  ext-align : center ;
      width: 98%; /* set the width of the textarea, input, or div */
      max-width: 98%; /* set the width of the textarea, input, or div */
      ont-size : 16px ;  
      margin-top: 3% ;
min-height : 40px ;
max-height : 50px ;
font-family: 'koho', sans-serif ;
ackground-color : #e67e22 ;
border-bottom : 0.1px solid #4e4e4e ;
margin-bottom: 2% ;
padding : 1% ;
overflow-y: scroll ;

}
#tlist_topinput * {
  font-size: 16px;
}
#tlist_topinput::first-letter{
  ext-transform: capitalize;
}
.book_cover{
  width: 100% ;
  display : flex ;
  align-items : flex-end ;
  margin-top : 1% ;
  margin-bottom : 1% ;
  border-left: 1px solid#fff ;
}
.book_number{
  min-height : 25px ;
  min-width : 25px ;
  border-radius: 50% ;
  background : #4444 ;
  box-shadow : 0px 0px 3px #000 ;
  display: flex ;
  padding : 2% ;
  justify-content : center ;
  align-items : center ;
  font-family : 'koho', sans-serif ;
  color: #fff ;
  margin-right : 2px ;
}
.book_more{
  width: calc(100% - 30px );
  ackground-color : #e67e22 ;
  display : flex ;
  lign-items : center ;
  flex-direction : column ;
}
.book_item{
  min-height : 100px ;
  min-width : 100% ;
  border-radius: 3px ;
  background-color : #4444 ;
  margin-bottom : 1% ;
}
.book_text{
  font-weight : 900 ;
  color : #fff ;
  margin : 1% ;
}
.book_detail span{
  margin: 1px ;
  font-size: 12px ;
  color: #d5ddde;
}
.book_detail{
  
}
.book_rating::before{
   content: "\f005";
  font-family: "Font Awesome 5 Free";
  font-weight: 900;
  color: gold ;
  margin-right: 1px;
}
.episode_rate::before{
   content: "\f005";
  font-family: "Font Awesome 5 Free";
  font-weight: 900;
  color: gold ;
  margin-right: 1px;
}
.episode_info span{
   white-space:nowrap ;
    overflow: hidden ;
    text-overflow: ellipsis;
  margin-top: 1% ;
}
.episode_info{
  margin-top: 1% ;
  width: 100% ;
  display: flex ;
  justify-content: space-between ;
  align-items: center ;
  margin-top: 2% ;
}
.season_twit_text{
  margin-top: 2% ;
  font-size: 16px ;
  display: flex ;
  flex-direction :column ;
  color : #fff ;
  font-family:'koho',sans-serif ;
}
.twit_content{
  min-width: 98% ;
  max-width: 98% ;
  min-height: 0vh ;
  ackground-color: #242526 ;
  scroll-snap-type: x mandatory;    
  display: flex;
  -webkit-overflow-scrolling: touch;
    overflow-x: scroll;
  border-radius: 7px ;
  margin-right: % ;
  margin-top: 1% ;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-auto-rows: minmax(100px, auto);
  gap: 10px;
  bx-sizing: border-box;
  font-family : 'koho', sans-serif ;
}

.twit_content section:nth-child(1),
.twit_content section:nth-child(2) {
  grid-row: span 1;
}

.twit_content section:nth-child(3) {
  grid-row: span 2;
}

.twit_content section:nth-child(4) {
  grid-row: span 2;
}

.twit_content section{ 
  border-radius: 7px ;
   croll-snap-align: start;
  in-height: 100% ;  
  ord-break: break-all;
  min-width: 80% ;
  max-height: 50vh ;
  max-width: 80% ;
  display: flex ;
  align-items: center ;
  justify-content: center ;
  no-repeat-center-center:fixed;
padding: 10% ;
padding-bottom : 10% ;
     -webkit-background-size: cover ;
     -moz-background-size: cover ;
     -o-background-size: cover ;   
     background-size: cover ; 
     background-position: center center;
     position: relative ;
     overflow-x : hidden ;
     box-sizing: border-box;
  font-family : 'koho', sans-serif ;
}
.twit_content header{ 
  color: #fff ;
  font-family: 'koho', sans-serif ;
  ord-break: break-all;
  
}
.twit_content nav::first-letter, .twit_content header::first-letter{ 
  text-transform: capitalize;
}
.twit_content nav{ 
  border-radius: 7px ;
  ord-break: break-all;
  verflow-x: hidden ;
   croll-snap-align: start;
  in-height: 100% ;
  min-width: 100% ;
  min-height: 500px ;
  max-height: 70px ;
  max-width: 80% ;
  margin-top: 2%;
  display: flex ;
  align-items: center ;
  justify-content: center ;
  no-repeat-center-center:fixed;
  background-repeat: no-repeat ;
     -webkit-background-size: cover ;
     -moz-background-size: cover ;
     -o-background-size: cover ;
     background-size: cover ; 
     background-position: center center;
     position: relative ;
  font-family : 'koho', sans-serif ;
}
#season_twit_section{
  height: 250px;
}
.twit_btns span{
  margin: 2px ;
  color: #fff ;
  font-family: Handlee ;
  font-size: 12px ;
  transition: 0.5s ease ;
}
.twit_btns{
  display: flex ;
  align-self: end ;
  transition: 0.5s ease ;
  justify-content: Space-around ;
  width: 30% ;
  margin-top: 2% ;
  float: right ;
  position: bsolute ;
  bottom: 0 ;
  right: 0 ;
  align-items: center ;
}
.twit_profileimg {
  min-width: 50px;
  min-height: 50px;
  max-width: 50px;
  max-height: 50px;
  border-radius: 50%;
  background-color: #242526;
  ackground-image: url('https://www.dropbox.com/s/e85d53ube6ikotx/HD-wallpaper-military-camouflage.jpg?raw=1');
  background-repeat: no-repeat;
  background-position: center center;
  background-size: cover;
  box-shadow: inset 0px 0px 2px #000;
}
#season_twit_image{
  font-family : 'Orbitron', sans-serif ;
  display: flex ;
  align-items : center ;
  justify-content : center ;
  color: #fff ;
}
.twit_tag{
  color: #e67e22 ;
  font-style: italic;
}
#post_count{
  position: absolute ;
  background-color: #fff ;
  color: #000 ;
  font-size: 12px ;
  font-family: 'koho', sans-serif ;
  top: 0 ;
  right: 0 ;
  margin: 3% ;
  box-shadow: 0px 0px 3px #000 ;
  border-radius: 12px ;
  padding: 1.2% ;
  padding-right : 2% ;
  padding-left : 2% ;
}

/*
#actor_movtab {
  display: block;
  background-color: #e67e22;
  column-count: 3;
  column-gap: 10px;
}

#actor_movtab section {
  min-width: 30px;
  min-height: 30px;
  box-shadow: 0px 0px 8px #000;
  background-color: #0003;
  margin-bottom: 10px;
}


*/








/* 
.file-input-label {
  display: inline-block;
  padding: 10px 20px;
  background-color: #007bff;
  color: #fff;
  cursor: pointer;
}
.file-input-label:hover, .file-input-label:focus {
  background-color: #0056b3;
}


.file-input-label::before {
  content: "\f07c";
  font-family: "Font Awesome 5 Free";
  font-weight: 900;
  margin-right: 8px;
}

.file-input-label::after {
  content: attr(for);
  display: inline-block;
  vertical-align: middle;
  font-size: 16px;
}

*/
.rippled {
    position: absolute;
    animation-name: ripple;
    animation-duration: 1s;
    background: rgba(255,255,255,.6);
    width: 100px;
    height: 100px;
    border-radius: 100%;
    /*display: none;*/
    transform: translate(-50%, -50%);
}

@keyframes ripple {
    0% {
        transform: translate(-50%, -50%) scale(0);
        opacity: 1;
        display: block;
    }

    100% {
        transform: translate(-50%, -50%) scale(3);
        opacity: 0;
    }
}
.shake_class {
     animation: shake 0.82s cubic-bezier(.36,.07,.19,.97) both;
}

@keyframes shake {
  10%, 90% {
    transform: translate3d(-1px, 0, 0);
  }
  
  20%, 80% {
    transform: translate3d(2px, 0, 0);
  }

  30%, 50%, 70% {
    transform: translate3d(-4px, 0, 0);
  }

  40%, 60% {
    transform: translate3d(4px, 0, 0);
  }
    
}

#loader_bgcom{
    position: fixed ;
    height: 100% ;
    width: 100% ;
    left: 0 ;
    display: flex ;
    align-items: center ;
    top: 0 ;
    background-color:#0005 ;
     transition:all 0.5s;
    transform:scale(0);
}

#loader_bgpop{
    border:3px solid transparent ;
    border-radius:10px;
    padding:1%;
    margin: 0 ;
    color:violet;
    background-color:lightgrey;
    min-width: 100% ;
    min-height:100%;
    background: #0005 ;
    display: flex ;
    align-items: center ;
    justify-content: center ;
    /*
    glass   mirror   blur  
    background: rgba(255, 255, 255, 0.1);
    box-shadow: 0 20px 50px rgba(0, 0, 0, 0.15);
    backdrop-filter: blur(5px);
    */
    transition:all 0.5s;
    
}
#post_makertab{
  transition : 0.1s ease ;
  background: #5aadc2 ;
  ackground: #0f0f0f ;
}
#post_makerinner .answer_top{
  position: absolute ;
  top: 0 ;
  left: 0 ;
  margin: 0 ;
  background-color: #0003  ;
  width:  96% ;
  display: flex ;
  justify-content: space-between ;
  color : #fff ;
}
#post_makerinner{
  min-height: 100% ;
  min-width : 100% ;
  background-color: #0000 ;
  position: relative ;
  display : flex ;
  align-items: center ;
  flex-direction: column ;
}
[contenteditable]:empty::before {
  content: attr(data-placeholder);
  color: gray;
}
.picture-frame {
  width: 300px;
  height: auto;
  position: relative;
}

.polaroid-frame {
  border: 10px solid #ddd;
  padding: 20px;
  background-color: #fff;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
}

.polaroid-content {
  margin-bottom: 10px;
}

.polaroid-content img {
  width: 100%;
  height: auto;
  display: block;
}

.polaroid-details {
  background-color: #f8f8f8;
  padding: 10px;
}

.polaroid-title {
  font-size: 16px;
  margin: 0;
}

.polaroid-description {
  font-size: 14px;
  margin: 5px 0 0;
}
#stack_loaderbg{
  position: fixed ;
  width: 100% ;
  height: 100% ;
  left: 0 ;
  top: 0 ;
  background: #0005 ;
  display: none ;
  transition: 0.5s ease ;
  align-items : center ;
  flex-direction: column ;
  z-index: 25 ;
}
#stack_loaderdiv{
  position: absolute ;
  bottom: -40vh ;
  width: 92%  ;
  height: 50px ;
  padding: 2% ;
  margin: 2% ;
  margin-bottom : 0.5% ;
  display : flex ;
  ustify-content: Space-around ;
  align-items: center ;
  border-radius : 12px ;
  box-shadow : 0px 0px 8px #000 ;
  background-color : #242526 ;
  font-family : 'koho', sans-serif ;
  color: #fff ;
  transition:1.5s ease ;
}
#crew_bg{
  display: flex ;
  lign-items : center ;
  flex-direction : column ;
  z-index : 18 ;
}
#crew_inner{
  min-height: 100% ;
  min-width: 100% ;
  max-height: 100% ;
  max-width: 100% ;
  position: relative ;
  display: flex ;
  flex-direction : column ;
  overflow-x: hidden ;
  lign-items: center ;
}  
#crew_extra{
  min-height: 10vh ;
  max-height: 10vh ;
  
}
#crew_board section{
  min-height: 100% ;
  min-width: 100% ;
   scroll-snap-align: start;
}
#crew_board{
  min-height: 35vh ;
  max-height: 35vh ;
  min-width: 100% ;
  max-width: 100% ;
  background-color: #0005 ;
  border-top-left-radius: 5px ;
  border-top-right-radius: 5px ;
   font-family: sans-serif;
    scroll-snap-type: x mandatory;    
    display: flex;
    -webkit-overflow-scrolling: touch;
    overflow-x: scroll;
}
#crew_table .display_flex{
  min-width: 80% ;
  ackground-color: yellow ;
  align-items: flex-end ;
}
#crew_table{
  display: flex ;
  argin: 1% ;
  adding: 1% ;
  width: 100%  ;
  background-color : #000 ;
  border-radius: 3px ;
  box-shadow : 0px 0px 8px #000 ;
  justify-content:  space-between ;
  align-items : center ;
  color: #fff ;
  margin-top : -5% ;
  z-index : 2 ;
  position: relative;
}
#crew_deathdiv{
  display: none ;
}
#crew_prof{
  min-width: 100px ;
  min-height: 130px ;
  border-radius: 5px ;
  box-shadow : 0px 0px 3px #000 ;
  background-color: #242526 ;
  margin-right : 5% ;
    
     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
     background-position: center center ;
}
#crew_detail{
  display: flex ;
  flex-direction: column ;
  lign-items : center ;
  width : 100% ;
  ackground-color : red ;
}
#crew_bell{
  position: relative ;
  right: 0 ;
  bottom: 0 ;
  margin: 10px ;
  margin-left : 0px ;
  margin-right : 0px ;
  justify-self: flex-end ;
  align-self: flex-end ;
}
#crew_name{
  font-size: 20px ;
  max-width: 75% ;
  ackground-color: #e67e22 ;
  font-weight: bold ;
  white-space:nowrap ;
    overflow: hidden ;
    text-overflow: ellipsis;
}
#crew_department{ 
  font-family: 'koho', sans-serif ;
  color: #e67e22 ;
}
#crew_department::before{
   content: "\f005";
  font-family: "Font Awesome 5 Free";
  font-weight: 900;
  color: gold ;
  margin-right: 1px;
}
#crew_more{
  
}
.lit_topic{
    margin-left: 0px ;
    margin-bottom: 3px ;
    margin-top : 5px ;
    font-family: 'koho', sans-serif ;
    color: #797979 ;
    font-weight: bold ;
    font-size: 18px ;
}
#small_alert{
    position: fixed;
    ottom: 15% ;
    height:auto;
    width:auto ;
     bottom: -50% ;
  transition: 0.2s ease ;
    background-color:#242526;
    box-shadow: 0px 0px 8px #000 ;
    left: 38% ;
    border-radius: 3px;
    color:#fff;
    font-size: 12px;
    padding-bottom: 5px;
    padding-top: 5px;
    padding-left: 2% ;
    padding-right: 2% ;
    font-family: 'koho', sans-serif ;
    z-index : 20 ;
}
#tweet_bg{
  
}
#tweet_inner{
  position: relative ;
  min-height: 100% ;
  min-width: 100% ;
  max-height: 100% ;
  max-width: 100% ;
  background-color : #000 ;
  display: flex ;
  flex-direction : column ;
}
.tweet_subtabs{
  position: relative ;
  min-height: 100% ;
  min-width: 100% ;
  max-height: 100% ;
  max-width: 100% ;
  ackground-color : purple ;
  display: flex ;
  flex-direction : column ;
  display : none ;
}
#tweet_hashtab{
  position: fixed ;
  bottom: 0 ;
  width: 100% ;
  min-height: 50vh ;
  max-height: 50vh ;
  transition: 0.5s ease ;
  left: 0 ;
  display: none ;
  box-shadow: 0px 0px 3px #000 ;
  background-color: #000 ;
  z-index : 100 ;
}
#tweet_hashinner{
  height : 100% ;
  min-width : 100% ;
  max-height : 100% ;
  max-width : 100% ;
  background-color : #4444 ;
  position: absolute ;
  display: flex ;
  flex-direction: column ;
 
}
#tweet_hashtext{
  min-width: 90% ;
  max-width: 90% ;
  min-height : 10px ;
  max-height : 20px ;
  overflow-x : scroll ;
  margin: 2% ;
  border-radius: 5px ;
  padding : 3% ;
  padding-top : 4% ;
  padding-bottom : 4% ;
  display: flex ;
  align-items: center ;
  background-color: #4444 ;
  color: #fff ;
  font-family: 'koho', sans-serif ;
}

#hash_controls{
  width: 70% ;
  background-color : #000 ;
  box-shadow: 0px 0px 8px #000 ;
  Border-radius : 3px ;
  padding: 5px ;
  display: flex ;
  justify-content: space-between ;   
  aign-items : center ;
  align-self: center ;  
  position: absolute ;
  bottom: 10px ;
  z-index: 2 ;
}
#tweet_hashtab section{
  min-width: 90% ;
  max-width: 90% ;
  min-height : 10px ;
  min-height : 80px  ;
  margin: 2% ;
  border-radius: 5px ;
  padding : 2% ;
  display: flex ;
  align-items: center ;
  background-color: #2222 ;
}
#tweet_hashtab p{
  color: #fff ;
  font-size: 12px ;
  white-space:nowrap ;
    overflow: hidden ;
    text-overflow: ellipsis;
}
#tweet_hashtab nav{
  min-height: 70px ;
  min-width: 55px ;
  max-height: 70px ;
  max-width: 55px ;
  border-radius: 1px ;
  margin-top: 1px ;
  margin-bottom: 1px ;
   no-repeat-center-center:fixed;
background-color : #0005 ;
     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
     margin-right: 5% ;
     background-position: center center ;  
}

.swiper_containerone, .swiper_containertwo {
  width: 100%;
  height: 100%;
  overflow-y : scroll ;
}

.swiper_hashclass {
  width: 100%;
  min-height: 40vh;
  isplay: flex;
  align-items: center;
  justify-content: center;
  font-size: 24px;
  background-color: #0000 ;
  background-color: #5ec4dd ;
}
.closet_tabsclass {
  width: 100%;
  min-height: 40vh;
  isplay: flex;
  align-items: center;
  justify-content: center;
  font-size: 24px;
  ackground-color: #0000 ;
  background-color: cyan ;
  transition: all 0.5s ease ;
}

#tweet_msgdiv{
  display: block ;
  background: #000 ;
}
.tweet_subdivs{
  position: relative ;
  min-height: 100% ;
  min-width: 100% ;
  max-height: 100% ;
  max-width: 100% ;
  background-color : #000 ;
  display: flex ;
  flex-direction : column ;
}
#tweet_textcover{
   width: 100% ;
  min-height: 50px ;
  display: flex ;
  align-items: flex-end ;
  justify-content: Space-betwee ;
  margin-bottom : 2% ;
  margin-top : 5% ;
  padding-top : 5px ;
  padding-bottom : 2% ;
  position: relative ;
  box-shadow : 0.1px solid #4e4e4e ;
  ackground-color: #e67e22 ;
}
#msg_textimg{
  margin-right : 1% ;
  min-width: 50px;
  min-height: 50px;
  max-width: 50px;
  max-height: 50px;
  border-radius: 50%;
  ackground-color: #242526;
  ackground-color: #161718;
  background-color: #101213;
  background-image: url('https://www.dropbox.com/s/e85d53ube6ikotx/HD-wallpaper-military-camouflage.jpg?raw=1');
  background-repeat: no-repeat;
  background-position: center center;
  background-size: cover;
  box-shadow: inset 0px 0px 2px #000;
}
#msg_textdiv{
 position: relative ;
  min-width: calc(100% - 65px);
  max-width: calc(100% - 65px);
  min-height : 100px ;
  max-height : 80vh ;
  border-radius: 3px ;
  background-color: #000 ;
  border: 0.1px solid #828282 ;
  box-shadow: 0px 0px 2px #000 ;
  dsplay: flex ;
  padding: 1% ;
  flex-direction: column ;
  justify-content: Space-around ;
overflow-y : scroll ;
}
#tweet_threebutton{
  min-width: 100%;
  border-radius: 3px ;
  border-top-left-radius: 0px ;
  border-top-right-radius: 0px ;
  margin-top : 5% ;
  argin-bottom : 1% ;
  box-shadow: 0px 0px 3px #000 ;
  color: #fff ;
  display : flex ;
  ackground-color : #4444 ;
   border: 0.1px solid #828282 ; 
  font-family :'koho', sans-serif ;
  align-items : center ;
  justify-content: center ;
  padding-top : 2% ;
  padding-bottom : 2% ;
}

#msg_textinput{
  color: #fff ;
  
      width: 100%; /* set the width of the textarea, input, or div */
      max-width: 100%; /* set the width of the textarea, input, or div */
min-height : 100px ;
max-height : 100% ;
font-family: 'koho', sans-serif ;
ackground-color : #e67e22 ;
}
#back_subdiv{
  display: flex ; 
  align-items: center ;
  justify-content : center ;
  no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover ; 
     background-repeat: no-repeat ;
     background-position: center center ;
  transition: all 0.5s ease ;
  min-height: 85vh ;
  min-width : 98vw ;
  max-height: 100% ;
  max-width : 100% ;
  margin: 1% ;
  border-radius: 3px ;
  background-color : #e67e22 ;
  box-shadow : 0px 0px 3px #000 ;
}
#back_textinput{
  min-height: 85% ;
  min-width : 98% ;
  max-height: 100% ;
  max-width : 100% ;
  font-size: 35px;
  color: #fff ;
  ackground-color : #e67e22 ;
}
#back_textinput * {
  font-size: 35px;
}
#post_sidebar{
  position: absolute ;
  right: 0 ;
  margin: 2% ;
  height: 40% ;
  max-width: 20% ;
  display: flex ;
  align-items: center ;
  flex-direction : column ;
  bottom: 20% ;
  justify-content : Space-around ;
}
.post_sidebtns{
  min-height: 45px ;
  min-width : 45px ;
  padding: 3% ;
  margin: 3% ;
    display: flex ;
    justify-content: center ;
  align-items: center ;
  background-color: #4444 ;
  border-radius: 50% ;
  box-shadow : 0px 0px 8px #000 ;
  ransition : 0.3s ease ;
}
#poll_container{
 position: relative ;
  min-width: calc(100% - 65px);
  max-width: calc(100% - 65px);
  min-height : 100px ;
  max-height : 80vh ;
  border-radius: 3px ;
  background-color: #000 ;
  box-shadow: 0px 0px 2px #000 ;
  order: 0.1px solid #8e8e8e;
  dsplay: flex ;
  padding: 1% ;
  flex-direction: column ;
  justify-content: Space-around ;
overflow-y : scroll ;
align-items: center ;
jstify-content: center ;
}
#poll_topinput{  
  color: #fff ;
  ext-align : center ;
      width: 100%; /* set the width of the textarea, input, or div */
      max-width: 100%; /* set the width of the textarea, input, or div */
      font-size : 20px ;  
      margin-top: 3% ;
min-height : 20px ;
max-height : 100% ;
font-family: 'koho', sans-serif ;
ackground-color : #e67e22 ;
}
#poll_topinput * {
  font-size: 20px;
}
#poll_topinput::first-letter{
  text-transform: capitalize;
}
#poll_section{
  margin-top: 3% ;
  border-radius : 2px ;
  min-width: 100% ;
  min-height: 80px ;
  background:   ;
  display: flex ;
  padding-top : 1% ;
  padding-bottom : 1% ;
  flex-direction: column ;
  align-items: center ;
  justify-content: center ;
  border-radius: 3px ;
  border: 0.1px solid #818181 ;
}
#poll_quesdiv{
  align-items: center ;
  width: 95% ;
  ackground-color: #e67e22 ;
  display: flex ;
  justify-content: Space-between ;
  margin-top : 2% ;
  margin-bottom: 2% ;
  color: #fff ;
}
#post_pollmsg{
  display : flex ;
  align-items : center ;
  justify-content: center ;
  padding: 3% ;
  color: #fff ;
  border-radius: 3px ;
  min-width: 88% ;
  margin: 2% ;
  border: 0.1px solid #818181 ;
}
#ques_inner input{
  color: #fff ;
  background-color : #0000 ;
  min-width: 85% ;
  max-width: 80% ;
  padding: 5% ;
  border-radius: 3px ;
  borde: 0.1px solid #323232 ;
  font-family: 'koho', sans-serif ;
  min-height: 5px ;
  transition: all 0.5s ease ;
}
#ques_inner{
  display: flex ;
  ackground-color: red;
  flex-direction:  ;
  min-width : 100% ;
  max-width : 100% ;
  position : relative ;
    order: 0.1px solid #e67e22 ;
}
#second_poll, #third_poll, #fourth_poll{
  border: 0.1px solid #323232 ;
}
#first_poll{
  border: 0.1px solid #818181 ;
}
#first_count,#second_count,#third_count, #fourth_count{
  position: absolute ;
  right: 0 ;
  margin: 0 ;
  font-size: 12px ;
  color: #3b3b3b;
  align-self : flex-end ;
  justify-self : center ;
}
.twit_content a {
  color: #2779d0;
  text-decoration: none;
}
#season_overall{
  z-index: 17 ;
}
#seas_overalltotal{
  min-height : 100% ;
  min-width : 100% ;
  max-height : 100% ;
  max-width : 100% ;
  ackground-color : blue ;
  overflow-y : scroll ;
  overflow-x : hidden ;

  /*
  display: flex ;
  flex-direction : column ;
  justify-content: space-between ;
  */
}
.slide-out {
  transition: transform 0.3s ease-out; /* Define the transition property */
}

.slide-out.slide-away {
  transform: translateX(100%); /* Slide the div away to the right */
}

#seas_overallinner{
  min-height : 100% ;
   transform : translateX(100%);
  min-width : 100% ;
  max-height : 100% ;
  max-width : 100% ;
  ackground-color : #e67e22 ;
  display: flex ;
  argin-left : 100% ;
  left: 0 ;
  flex-direction : column ;
  justify-content: space-between ;
  overflow-y : scroll ;
  transition : all 0.5s ease ;
}
#season_counter{
  display : flex ;
  flex-direction: row ;
  align-items: center ;
  justify-content: space-between ;
  background-color : #4444 ;
  width: 100% ;
  height: 0.2vh ;
  margin-top: 1px ;
}
#season_counter section{
  width: 100% ;
  height: 70% ;
  background-color : #fff ;
  margin: 1px ;
  border-radius: 3px ;
}
#seas_overtop{
  min-height: 60vh ;
  min-width : 100% ;
  max-height: 60vh ;
  min-width : 100% ;
  background-color :  ;
  display: flex ;
  flex-direction : row ;
}
#season_left, #season_right{
  min-width : 10% ;
  min-height : 60vh ;
  max-width : 10% ;
  max-height : 60vh ;
  ackground-color : #4444  ;
  argin-top: 3vh;
}
#season_middle{
  ackground-color : white ;
  min-width: 80% ;
  min-height : 60vh ;
  max-width: 80% ;
  max-height : 60vh ;
 
  lex-direction : column ;
}
#season_square{
  min-height : 50vh ;
  max-height : 50vh ;
  width : 77vw ;
  margin: 1.5% ;
  background-color : #4444 ;
  margin-top: 10% ;
 box-shadow: 0px 0px 9px -1px rgba(0,0,0,1);
  border-radius: 2px ;
   
   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover ; 
     background-position: center center ;
     background-repeat: no-repeat ;
}
#season_info {
  color: #fff ;
  width: 96% ;
  margin-top: 2% ;
  margin-bottom : 2% ;
  padding: 2% ;
  font-family : 'koho', sans-serif  ;
  display: flex ;
  flex-direction: column ;
  justify-content: center ;
  align-items : center ;
}
#series_title{
  font-size : 20px ;
  font-weight: 900 ;
  text-align : center ;
}
#season_title{
  text-align : center ;
  font-size : 20px ;
  margin-top: 2% ;
}
#seas_episodesinner{
  min-width: 100% ;
  min-height: 100% ;
  max-width: 100% ;
  max-height: 100% ;
  ackground-color : #e67e22 ;
  
}
#seas_episodeslist{
  min-width: 100vw ;
  min-height: 30vh ;
  max-width: 100vw ;
  ax-height: 30vh ;
  adding: 3% ;
  ackground-color : #000 ;
  osition: absolute ;
  bottom: 0 ;
  left: 0 ;
  verflow-y :scroll ;
}
.episode_cover{
  min-width: 96% ;
  min-height: 150px ;
  ackground-color : #4444 ;
  border-bottom: 2px solid #fff ;
  padding: 1% ;
  margin: 1% ;
  display: flex ;
  align-items : flex-end ;
  ustify-content : space-between ;
}
.episode_img{
  min-width: 50px ;
  min-height : 50px ;
  background-color: #4444;
  border-radius: 3px ;
  border-radius: 50% ;
    background-image:url('https://www.dropbox.com/s/e85d53ube6ikotx/HD-wallpaper-military-camouflage.jpg?raw=1');
margin-right: 2% ;
   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
     background-position: center center ;
}
.episode_side{
  min-height: 200px ;
  background-color : #4444 ;
  min-width: calc(96% - 50px) ;  
}
#season_controls{
  width: 80vw ;
  height: auto ;
  position: absolute ;
  display: flex ;
  justify-self: center ;
  align-self: center ;
  border-radius: 5px ;
  left: 8% ;
  z-index: 2 ;
}
#season_controlinner{
  border-radius: 5px ;
  min-height: 100% ;
  min-width : 100% ;
  max-height: 100% ;
  max-width : 100% ;
  background-color : #4444 ;
  display: flex ;
  align-items : center ;
   justify-content : space-between ;
  adding : 2% ;
}   
.season_controlbtns{
  min-width: calc(48% - 5px);
  padding : 5px ;
  display: flex ;
  align-items : center ;
  justify-content : center ;
  font-family : 'koho', sans-serif  ;
  transition : all 0.5s ease ;
  color: #fff ;
}
#season_epibtn{
  border-top-left-radius: 5px ;
  border-bottom-left-radius: 5px ;
}
#season_combtn{
  border-top-right-radius: 5px ;
  border-bottom-right-radius: 5px ;
}
#season_commentdiv{
  z-index : 18;
}
#seas_commentinner{
  min-width : 100% ;
  min-height : 100% ;
  max-width : 100% ;
  max-height : 100% ;
  background-color : cyan ;
}

#longman_bg{
  
  display: flex ;
  flex-direction : column ;
  lign-items : center ;
  justify-content : center ;
}
#longman_inner{
  min-height: 100% ;
  min-width : 100% ;
  position: relative ;
  background-color : #000 ;
  overflow-y : scroll ;
  display: flex ;
  flex-direction : column ;
  lign-items : center ;
  justify-content : center ;
}
#long_top{
  position : absolute ;
  top: 0 ;
  left: 0 ;
  -index: 2 ;   
}
#long_board{
  min-width: 100vw ;
  min-height : 35vh ;
  ackground : #fff ;
  margin-bottom : 1% ;
     ackground-image:url('https://i.imgur.com/CU6MnFO.jpg');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#long_iconsdiv span{
  min-width: 25px ;
  min-height: 25px ;
  max-width: 25px ;
  max-height: 25px ;
  padding : 1.2vw ;
  border-radius: 50% ;
  box-shadow : 0px 0px 3px #000 ;
  background-color : #4444 ;
}
#long_iconsdiv .display_flex span{
  margin: 3px ;
}
#long_iconsdiv .display_flex{
  min-width: auto ;
  max-width: 30% ;
  
}
#long_iconsdiv{
  width: 96% ;
  padding: 2% ;
  ackground-color : #e67e22 ;
}
.long_sideboards{
  min-width: 49.5vw ;
  min-height : 40vh ;
  background : #4444 ;
  border-radius: 3px ;
  box-shadow : 0px 0px 3px #000 ;
     ackground-image:url('https://i.imgur.com/CU6MnFO.jpg');

   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#long_leftboard{
  margin-right: 0.5vw ;
}
#long_rightboard{
  margin-left: 0.5vw ;
}
#long_bottombg{
  position: absolute ;
  top: 76% ;
  background-color : #0003 ;
  ox-shadow: 0px 0px 8px #000 ;
  border-top-left-radius:  3px ;
  border-top-right-radius: 3px ;
  left: 0 ;
  width: 98% ;
  min-height: 98vh ;
  padding: 1% ;
  z-index : 3 ;
}
#long_bottominner{
  min-height : 96% ;
  min-width : 96% ;
  max-height : 98% ;
  max-width : 98% ;
  padding: 1% ;
  padding-top : 3% ;
  ackground-color : #4444 ;
}
#long_awarddiv{
  display: flex ;
  flex-direction : column ;
  align-items :  ;
  margin-top: 1% ;
  ackground-color : #242526 ;

}

#film_tagline{
  olor: #b1b8ba;
  font-family : ;
}
.long_imdb{
  ackground-color : #242526 ;
  display: flex ;
  align-items : center ;
  color: #fff ;
  font-size :20px ;
  font-family: 'koho', sans-serif ;
  margin-bottom : 1% ;
}







.long_twotabs{
  z-index: 15;
  background-color : #000 ;
}
#long_reviewtab{
  ackground-color : pink ;
}
#long_commtab{
  background-color : brown ;
}
/* Created by C O F F E E ✨ */
  
.slider{
    width: 100%;
    height: calc(70vh + 20px);
    
    position: relative;
    overflow-x: scroll;
    display: flex;
    align-items: center;
    
}

.container{
    display: flex;
    position: absolute;
    padding-left: 10px;
    
}

.box{
    width: 70vw;
    height: 70vh;
    background: #fff;
    margin-right: 10px;
    border-radius: 5px;
    overflow: hidden;
    
}
.box img{
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius:5px;
}
#relative_bg{
  background-color : #0003 ;
  z-index: 18;
}
#relative_inner{
  min-height : 95vh ;
  min-width : 100% ;
  margin-top: 5vh ;
  border-top-left-radius: 10px ;
  border-top-right-radius: 10px ;
  box-shadow : 0px 0px 3px #000 ;
  background-color : #000 ;
  display : flex ;
  flex-direction : column ;
}
#relative_head{
   border-top-left-radius: 10px ;

  border-top-right-radius: 10px ;
  display : flex ;
  flex-direction : column ;
  justify-content: Space-around ;
  width: 100% ;
  height: 15% ;
  background-color : #4444 ;
  color: #b5b5b5;
}
#relative_exit{
  
}
#relative_search{
  align-self : center ;
  align-items : center ;
  display : flex ;
  width : 70% ;
  padding : 3% ;
  background-color : #4444 ;
  border-radius: 8px ;
  color: #000 ;
  font-family : 'koho', sans-serif ;
    color: #b5b5b5;
}
#relative_item{
  width: 90% ;
  white-space:nowrap ;
    overflow: hidden ;
    text-overflow: ellipsis;
    margin-left : 2% ;
    text-transform: capitalize;
}
#relative_body{
  width: 100% ;
  background-color : #5555 ;
  height: 85% ;
  overflow-y : scroll ;
}
#page_bg{
  
}
#page_inner{
  min-height : 100% ;
  min-width : 100% ;
  max-height : 100% ;
  max-width : 100% ;
  background-color : #000 ;
  position : relative ;
  overflow-y : scroll ;
}
#page_board{
  width: 100vw ;
  height: 30vh ;
  background-color : #4444 ;
}
#page_info{
  width: 96% ;
  padding : 2% ;
  min-height: 100px ;
  display: flex ;
  flex-direction: column ;
  ackground-color : #e67e22 ;
  margin-top: -15% ;
}
#page_intop{
  display: flex ;
  justify-content : space-between ;
  align-items : flex-end ;
  width: 100% ;
  margin-bottom: 2%  ;
  
}
#page_pic{
  min-height: 100px ;
  min-width : 100px ;
  max-height: 100px ;
  max-width : 100px ;
  background-color: #111111 ;
  border-radius: 50% ;
  box-shadow : 0px 0px 3px #000 ;
}
#page_follow{
  display : flex ;
  align-items: center ;
  justify-content : center ;
  padding : 3% ;
  padding-left : 5% ;
  padding-right : 5% ;
  border-radius: 5px ;
  box-shadow : 0px 0px 3px #000 ;
  background-color : #4444 ;
  color: #fff ;
  font-family : 'koho', sans-serif ;
}
#page_inbot{
  margin-top : 2%  ;
  margin-bottom: 2%  ;
  width : 100% ;
  display : flex ;
  flex-direction : column ;
}
#page_name{
  color: #fff ;
  font-weight : 900 ;
  font-family : 'koho', sans-serif ;
  font-size : 20px ;
}
#page_detail{
  margin-top : 2%  ;
  margin-bottom: 2%  ;
  color: #4a4a4a;
  font-size : 12px ;
}
#page_number{
  font-size : 12px ;
  font-weight : bold ;
  font-family: 'koho', sans-serif ;
}
#page_inleg{
  margin-bottom: 2%  ;
  color: #fff ;
  font-family: 'koho', sans-serif ;
  word-break: break-all;
  
}
#page_intags{
  
}
#page_intags span::before{
   content: "#";
  margin-right: 0 ;
      color: #2779d0 ;
}
#page_intags span:hover{
  text-decoration : underline ;
  order-bottom : 1px solid #2779d0 ;
}

#page_intags span{
  color: #2779d0 ;
  font-size : 16px ;
  padding : px ;
  argin : 2px ;
  font-family :'koho', sans-serif ;
}
#page_plus{
  display: flex ;
  align-items: center ;
  justify-content: center ;
  padding: 5px ;
  position: absolute ;
  bottom: 0 ;
  bottom: 10% ;
  right: 5% ;
  margin: 5% ;
  background-color: #e67e22 ;
  box-shadow: 0px 0px 8px #000 ;
  border-radius: 50% ;
  -index: 3;
}
#page_posts{
  min-width : 100vw ;
  min-height : 100vh ;
  ackground-color : #111111 ;
}
#trending_bg{
  background-color : #0003 ;
}
#trending_inner{
  background-color : #000 ;
  border-top-left-radius: 8px ;
  border-top-right-radius: 8px ;
  box-shadow : 0px 0px 8px #000 ;
  margin-top : 5vh ;
  min-width : 100% ;
  min-height : 95vh ;
  max-width : 100% ;
  max-height : 95vh ;
  display : flex ;
  flex-direction : column ;
}
#trending_head{
  border-top-left-radius: 8px ;
  border-top-right-radius: 8px ;
  min-height : 15vh ;
  min-width : 100% ;
  background-color : #2222 ;
   display : flex ;
  flex-direction : column ;
  justify-content: Space-around ;
  color: #fff ;
}
#trending_tail{
  min-height : 80vh ;
  min-width : 100% ;
  ackground-color : #e67e22 ;
  
}
#trending_search{
  align-self : center ;
  align-items : center ;
  justify-content : space-between ;
  display : flex ;
  width : 70% ;
  padding : 3% ;
  padding-top : 2% ;
  padding-bottom : 2% ;
  background-color : #4444 ;
  border-radius: 8px ;
  font-family : 'koho', sans-serif ;
}
.trending_dates::before{
     content: "\f073";
  font-family: "Font Awesome 5 Free";
  font-weight: 900;
  olor: #000 ;
  margin-right: 1px;
}
#closet_bg{
  z-index : 18 ;
  overflow-y : scroll ;
}
#closet_inner{
  color: #fff ;
  min-height : 100% ;
  font-family : 'koho', sans-serif ;
  min-width : 100% ;
  ackground-color : #fff ;
  verflow-y : scroll ;
}
#closet_head .display_flex{
  width: 95% ;
}
#closet_head{
  display: flex ;
  padding : 3% ;
  padding-left : 2% ;
  width: 94% ;
  justify-content: space-between ;
  align-items : center ;
}
#closet_name{
  margin-left : 1.5% ;
  font-size : 20px ;
}
#office_addcloset{
  margin-left : 10% ;
  margin-right : 1.5% ;
  
}
#closet_info{
  padding: 2% ;
}
#closet_image{
  min-height : 100px ;
  min-width : 100px ;
  max-height : 100px ;
  max-width : 100px ;
  background-color : #5555 ;
  border-radius : 50% ;
  margin-bottom: 2% ;
   -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
     background-position: center center ;
}
#closet_details{
  display : flex ;
  flex-wrap : wrap ;
  width: 100% ;
  justify-content :;
  color: #7c7c7c ;
}
#closet_details .display_flex{
  font-size : 12px ;
  mrgin: 2px ;
  margin-right : 5% ;
}
#closet_describe{
  margin : 1% ;
  margin-left : 0.5% ;
  font-size : 16px ;
}
.closet_spans{
  font-size : 12px ;
  margin-left : 5px ;
}
#closet_aka{
  font-size : 12px ;
  margin-left : 5px ;
  color: #7c7c7c ;
}
#closet_path{
  font-size : 12px ;
  margin-left : 5px ;
  margin-bottom : 1% ;
  color: #7c7c7c ;
}
.font_twelve{
  font-size : 12px ;
}
#closet_body{
  background-color : #000 ;
  max-width : 100% ;
  height : auto ;
  isplay: flex ;
  flex-direction : column ;
  verflow-x: scroll ;
  osition: relative ;
}
#closet_table{
  width: 100% ;
  display: flex ;
  justify-content : Space-around ;
  align-items : center ;
}
.closet_topicbtns{
  display: flex ;
  justify-content : center ;
  align-items : center ;
  width: 45% ;
  padding: 2% ;
  transition : all 0.5s ease ;
}
 .closet_topicclass{
  border-bottom: 1px solid #fff ;
}
.closet_topicdivs{
  isplay: none ;
  width: 100% ;
  min-height : 40vh ;
  background-color : blue ;
}
#closet_listdiv , .swiper_section{
  display: flex;
  flex-wrap: wrap;
  background-color: #4444;
  transition: all 0.5s ease ;
}
#closet_listdiv section, .swiper_section section{
  flex-basis: calc(33.33% - 5px);
  min-height : 30vh ;
  box-shadow : 0px 0px 8px #000 ;
  background-color : #0003 ;
  position: relative ;
  margin : 2.5px ;
  no-repeat-center-center : fixed ;
  background-size: cover ;
  -webkit-background-size: cover ;
  -moz-background-size: cover ;
  -o-background-size: cover ;
  transition : all 0.5s ease ;
  background-position: center center ;
}
.swiper_section{
  min-height : 100vh ;
  min-width : 100vw ;
  margin: 0 ;
}
#club_formbg{
  
}
#club_forminner{
  min-height : 100% ;
  min-width : 100% ;
  background-color : #2c2c2c ;
  position : relative ;
  display : flex ;
  flex-direction: column ;
  color : #fff ;
  font-family :'koho', sans-serif ;
}
#club_formtop{
  min-height : 10% ;
  background-color : #0000 ;
  display: flex ;
  padding : 3% ;
  padding-left: 2% ;
  min-width : 94% ;
  align-items : center ;
  justify-content : space-between ;
  border-bottom : 0.1px solid #a2a2a2 ;
}
#club_formbot{
  min-width : 100% ;
  min-height : 90vh ;
  ackground-color : #000 ;
}
#club_formtitle{
  display : flex ;
  justify-content : center ;
  align-items : center ;
   justify-self: center ;

  align-self: center ;
}
.club_formsections{
  display: none ;
}
#club_firstsection{
  display: block ;
   overflow-y : scroll ;
}
.club_forminside{
  display: flex ;
  justify-content : center ;
  flex-direction : column ;
  align-items: center ;
  ackground-color : red ;
}
.club_formparts div{
  
  margin-bottom: 2% ;
}
#club_nameerror{
  color: #9e9e9e;
}
#club_formnav{
  border-radius: 3px ;
  width: 94% ;
  background-color : #0000 ;
  padding: 3% ;
  color: #fff ;
  font-family: 'koho', sans-serif ;
  outline : 0 ;
  margin-bottom: 3% ;
  border: 1px solid #a2a2a2 ;
  display : flex ;
  justify-content : space-between ;
  align-items : center ;
}
.club_formparts input{
  border-radius: 3px ;
  width: 94% ;
  background-color : #0000 ;
  padding: 3% ;
  color: #fff ;
  font-family: 'koho', sans-serif ;
  outline : 0 ;
  margin-bottom: 3% ;
  border: 1px solid #a2a2a2 ;
}
.club_formparts textarea{
  border-radius: 3px ;
  width: 94% ;
  background-color : #0000 ;
  padding: 3% ;
  color: #fff ;
  font-family: 'koho', sans-serif ;
  outline : 0 ;
  margin-bottom: 3% ;
  border: 1px solid #a2a2a2 ;
  min-height : 150px ;
}
.club_formparts{
  border-bottom : 0.1px solid #a2a2a2 ;
  display: flex ;
  align-items : flex-start ;
  flex-direction : column ;
  justify-content: Space-around ;
  in-height : 10px  ;
  width: 90% ;
  margin: 1% ;
  margin-top : 2% ;
  ackground-color : #0003 ;
}
.club_formsubmits{
  width: 90% ;
  background-color: #fff ;
  display : flex ;
  justify-content : center ;
  align-items : center ;
  padding: 3% ;
  margin: 2% ;
  box-shadow : 0px 0px 3px #000 ;
  border-radius : 3px ;
  color : #000 ;
  position: absolute ;
  bottom: 0 ;
  left : 0 ;
  justify-self: center ;
}
#club_firstsubmit{
  display : none ;
}
#club_secondsection header{
  margin-bottom : 3% ;
}
#club_secondsection nav{
  width: 94% ;
  padding: 3% ;
  padding-bottom: 50px ;
 max-height : 70vh ;
 ackground-color : #e67e22 ;
 overflow-y : scroll ;
}

.check{position: relative;
margin-bottom: 15px;
padding-left: 45px;
font-size: 20px;
cursor: pointer;
align-items : center ;
margin-bottom : 10% ;
display: flex ;}
.checker{
position:absolute;
top:0;
left:0;
width:27px;
height: 27px;
ackground-color: #ccc;
border-radius: 5px;
borde:2px solid #090909 ;
box-shadow : 0px 0px 3px #000 ;
}

#club_secondsection input{display:none}

.check:hover input+.checker{
ackground-color: #fff ;
}
.check input:checked+.checker{
background-color: #0006;
ackground-color: #e67e22 ;
}
.checker:after{content:"";
position: absolute;
display:none}
.check input:checked+.checker:after{
display: block
}
.check .checker:after{
left:10px;
bottom: 5px;
width:6px;
height: 20px;
border-color:white;
border-style: solid;
border-width: 0 4px 4px 0;
-webkit-transform:rotate(45deg);
-ms-transform:rotate(45deg);
transform:rotate(45deg);

}
.round{border-radius: 50%;
margin-top: 40px}


#club_thirdsection{
  isplay : flex ;
  align-items : flex-start ;
  ustify-content : center ;
  margin-top: 3% ;
  flex-direction : column ;
  padding: 2% ;
  width: ;
}
#club_coverimg div span{
  margin : 2px ;
}
#club_coverimg div{
  background-color: #4444 ;
  padding : 2% ;
  border-radius : 3px ;
}
#club_coverimg{
  min-width : 95% ;
  max-width : 90% ;
  min-height : 150px ;
  max-height : 150px ;
  border-radius : 3px ;
  border: 0.1px solid #fff ;
  display : flex ;
  margin-top: 3% ;
  margin-left: 2% ;
  align-self: center ;
  justify-content : center ;
  align-items : center ;
    color: #fff ;
   no-repeat-center-center:fixed;
background-repeat: no-repeat ;
     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
     background-position: center center ;
}
#club_posterimg{
  min-width : 100px ;
  max-width : 100px ;
  min-height : 100px ;
  max-height : 100px ;
  border-radius : 50% ;
  border: 0.1px solid #fff ;
  display : flex ;
  margin-top: 3% ;
  margin-left: 3% ;
  align-self: flex-start ;
  justify-content : center ;
  align-items : center ;
    color: #fff ;
   no-repeat-center-center:fixed;
background-repeat: no-repeat ;
     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
     background-position: center center ;
}
#phoenix_bg{
  width: 100% ;
  height: 40vh ;
  position: fixed ;
  z-index: 20 ;
  ottom: 0%  ;
  bottom: -70%  ;
  left: 0 ;
  background-color: #000 ;
  box-shadow: 0px 0px 15px #000 ;
  transition: 0.5s ease ;
  isplay : none ;
}
#phoenix_inner{
  display: flex ;
  flex-direction: column ;
  min-height: 100% ;
  min-width : 100% ;
  max-height: 100% ;
  max-width : 100% ;
  background-color: #0008 ;
  justify-content: space-between ;
}
#phoenix_top{
  min-height: 25vh ;
  min-width : 100% ;
  max-height: 25vh ;
  max-width : 100% ;
  background-color : #4444 ;
    
   no-repeat-center-center:fixed;

     -webkit-background-size: cover;
     -moz-background-size: cover;
     -o-background-size: cover;
     background-size: cover; 
}
#phoenix_bot{
  display: flex ;
  flex-direction: row ;
  width: 96% ;
  padding: 2% ;
  height: 10vh ;
}
#phoeonix_left{
  min-height : 100%;
  min-width : 70%;
  display : flex ;
  flex-direction: column ;
}
#phoeonix_right{
  min-height : 100%;
  min-width : 27%;
  display : flex ;
  flex-direction: column ;
  align-items : flex-end ;
  margin-right: 3% ;
}
#phoenix_name{
  color: #fff ;
  font-family : 'koho', sans-serif ;
  width : 100% ;
  white-space:nowrap ;
    overflow: hidden ;
    text-overflow: ellipsis;
    font-size: 20px ;
}
#phoenix_sub{
  font-size : 12px ;
  color: #888888;
}
#phoenix_markbtn{
  color: #fff ;
}
#phoenix_morebtn {
    display: inline-block;
    background: #e74c3c;
    padding: 10px 30px;
    border-radius: 5px;
    color: #fff;
    cursor: pointer;
    transition: 0.5s;
    display : flex ;
    align-items : center ;
    justify-content : center ;
    white-space:nowrap ;

    overflow: hidden ;

    text-overflow: ellipsis;
}

#phoenix_morebtn:hover {
    background: #c0392b;
}
#gallery_bg{
  
}
#gallery_inner{
  min-width : 100% ;
  min-height : 100% ;
  max-width : 100% ;
  max-height : 100% ;
  background-color : #e67e22 ;
  position : relative ;
}
.testz{
  min-width : 100% ;
  min-height : 100% ;
  max-width : 100% ;
  max-height : 100% ;
  background-color : #e67e22 ;
  position : relative ;
  border: 1px solid #fff ;
}
.gallery_items{
  min-width : 100% ;
  min-height : 100% ;
  max-width : 100% ;
  max-height : 100% ;
  padding: 0 ;
  left: 0 ;
  background-color : #000 ;
  position : relative ;
  border: 1px solid #fff ;
}
#gallery_top{
  position: absolute ;
  padding: 2% ;
  background-color: #1111 ;
  width: 96% ;
  top: 0 ;
  left : 0 ;
  min-height: 30px ;
  max-height: 80px ;
  display : flex ;
  align-items : center ;
  z-index: 2 ;
  color: #a3a3a3;
  justify-content : space-between ;
}
#gallery_val{
  position: absolute ;
  background-color : #000 ;
  width: 100% ;
  height: 100% ;
  top: 0 ;
  padding : 0 ;
  margin : 0 ;
  left: 0 ;
}
#gallery_bot{
  position: absolute ;
  z-index: 2 ;
  padding: 2% ;
  background-color: #1111 ;
  width: 100% ;
  bottom : 0 ;
  left: 0 ;
  min-height: 30px ;
  max-height: 80px ;
  display : flex ;
  align-items : center ;
}
#gallery_count{
  width: ;
}
#gallery_btns{
  min-width : 20% ;
  max-width: 40% ;
  ackground-color : #e67e22 ;
  display : flex ;
  align-items : center ;
  justify-content : space-between ;
  
}
#gallery_btns span{
  margin-left : 2px ;
  margin-right : 2px ;
}
#whatsapp_bg{
  background-color : #000 ;
}
#whatsapp_inner{
  min-height : 100% ;
  min-width : 100% ;
  max-height : 100% ;
  max-width : 100% ;
  background-color: #4444 ;
  display: flex ;
  flex-direction : column ;
  font-family: 'koho', sans-serif ;
  overflow-y : scroll ;
}
#whatsapp_top{
  min-height: 40px ;
  max-height: 50px ;
  min-width: 96% ;
  max-width: 96% ;
  background: #272727 ;
  display : flex ;
  position: absolute ;
  top: 0 ;
  left: 0 ;
  align-items :center ;
  color: #fff ;
  padding : 2% ;
  font-size : 20px ;
  box-shadow : 0px 0px 3px #000 ;
  z-index : 2;
}
#whatsapp_top span{
  font-size : 20px ;
  margin: 2px ;
  font-weight: bold ;
}
#whatsapp_send{
  align-self: flex-end ;
  position: absolute ;
  right: 0 ;
  top : 0 ;
  margin : 5% ;
  display : none ;
  justify-content: center ;
  align-items: center ;
  min-height : 30px ;
  min-width : 30px ;
  border-radius: 50% ;
  padding: 2% ;
  background-color : #e67e22 ;
  color: #fff ;
  box-shadow : 0px 0px 3px #000 ;
  z-index : 3 ;
}
#whatsapp_div{
  width: 90%  ;
  min-height: 30px ;
  max-height: 150px ;
  background-color : #2d2d2d ;
  position : absolute ;
  bottom: 3%  ;
  border-radius: 20px ;
  color: #fff ;
  align-self: center ;
  justify-self : center ;
  z-index : 2;
  padding: 2% ;
  box-shadow : 0px 0px 3px #000 ;
  box-sizing :;
  display: flex ;
  flex-wrap: wrap ;
  align-items : center ;
}
#whatsapp_input{
  max-height: 140px ;
  overflow-y : scroll ;
}
#whatsapp_bot{
  padding: 2% ;
  padding-top : 0 ;
  padding-left : 0 ;
  padding-right : 0 ;
  padding-bottom : 10vh ;
  min-width : 100% ;
  max-width : 100% ;
  min-height: 82% ;
  max-height:  ;
  ax-height: calc(100% -50px);
  ackground-color : #4444 ;
}
.grape_cover{
  width: 100% ;
  min-height: 30px ;
  display: flex ;
  flex-direction : column ;
  align-items : flex-start ;
  color: #fff ;
  font-family: 'koho', sans-serif ;
}
.grape_title{
  font-size : 20px ;
  margin-right : 2% ;
  font-weight: bold ;
}
.grape_tlink{
  
}
.grapethreeflex{
  display : flex ;
  align-items : center ;
  flex-wrap: wrap ;
  width: 100% ;
  margin-top : 1% ;
}
.grape_oneflex, .grape_twoflex{
  display : flex ;
  align-items : center ;
  flex-wrap: wrap ;
  width: 100% ;
  justify-content: space-between ;
  margin-top : 1% ;
  margin-bottom : 1% ;
}
.grape_year, .grape_pg, .grape_imdb, .grape_dur, .grape_tline,  .grape_file{
  color:#a1a1a1 ;
  font-size : 14px ;
}
.grape_imdb::before{
   content: "\f005";
  font-family: "Font Awesome 5 Free";
  font-weight: 900;
  color: gold ;
  margin-right: 1px;
}
.grape_dur::before{
   content: "\f017";
  font-family: "Font Awesome 5 Free";
  font-weight: 900;
  color: gold ;
  margin-right: 1px;
}
.grape_file::before{
   content: "\f114";
  font-family: "Font Awesome 5 Free";
  font-weight: 900;
  color: gold ;
  margin-right: 1px;
}  
.grape_tline::before{
   content: "...";
  font-family: "Font Awesome 5 Free";
  argin-right: #a1a1a1 ;
}
.grape_genre{
  margin-top : 1% ;
  margin-bottom : 1% ;
  
}
.grape_note{
  margin-top : 1% ;
  margin-bottom : 3% ;
   color:#a1a1a1 ;
}




    /* end of css emd of css  end of style
    <style>    style    
    */
/*
::-webkit-scrollbar {
  width: 10px;
  height: 5px;
  
}
::-webkit-scrollbar-button {
  
  
}
::-webkit-scrollbar-thumb {
  background: #000;
  
  
}

::-webkit-scrollbar-thumb:active {
  background: #333;
}
::-webkit-scrollbar-track {
  background: #eee;
  
  
}
*/


 #loader_spinbg {

width: 100%;
height: 100%;
position: fixed;
ackground-color: #f2f2f2;
display: none;
top: 0 ;
left: 0 ;
z-index: 20 ;
}
 #loader_inner {

min-width: 100%;
min-height: 100%;
max-width: 100%;
max-height: 100%;
osition: fixed;
background-color: #0003 ;

-moz-user-select: none;
-webkit-user-select: none;

display: flex;
align-items: center;
justify-content: center;
display: -webkit-box;
display: -webkit-flex;
-webkit-align-items: center;
-webkit-justify-content: center;
flex-direction: column;
-webkit-flex-direction: column;
}

.spinner-container {
-webkit-animation: rotate 2s linear infinite;
animation: rotate 2s linear infinite;
z-index: 2;
}

.spinner-path {
stroke-dasharray: 1,150; 
stroke-dashoffset: 0;
stroke: #acb9bf;
stroke-linecap: round;
-webkit-animation: dash 1.5s ease-in-out infinite;
animation: dash 1.5s ease-in-out infinite;
}

@keyframes rotate {
100% { transform: rotate(360deg); }
}
@-webkit-keyframes rotate{
100% { -webkit-transform: rotate(360deg); }
}

@keyframes dash {
0% {
stroke-dasharray: 1,150;  
stroke-dashoffset: 0;
}
50% {
stroke-dasharray: 90,150; 
stroke-dashoffset: -35;   
}
100% {
stroke-dasharray: 90,150; 
stroke-dashoffset: -124;  
}
}
@-webkit-keyframes dash {
0% {
stroke-dasharray: 1,150;  
stroke-dashoffset: 0;
}
50% {
stroke-dasharray: 90,150; 
stroke-dashoffset: -35;   
}
100% {
stroke-dasharray: 90,150; 
stroke-dashoffset: -124;  
}
}
  .movie_title::before,.serie_title::before,.cast_title::before{
   content: "@";
  margin-right: 1px;
      color: #2779d0 ;
}
  .hash_title::before{
   content: "#";
  margin-right: 1px;
      color: #2779d0 ;
}
    .movie_title, .serie_title, .cast_title, .hash_title{
      ont-size : 15px ;
      color: #2779d0 ;
      text-decoration: ;
      font-size : 16px ;
    }
    .fade-out {
  opacity: 0;
  transition: opacity 0.3s ease-in-out; /* Adjust the transition duration and easing as needed */
}

    </style>
    
    
    
    
    
    
    <body>
    
    <div id="welcome_bg">
    <div id="welcome_inner">
        <div class="content2">
    <h2 class="nonselect">Poprizon<span class="button_effect">.</span></h2>

    <h2 class="nonselect">Poprizon<span>.</span></h2>
  </div>
        <div class="content3"> From Millivier </div>
      
    </div>
      
       </div><!-- end of welcome div 
    
       -->
    <div id="1st_come">
       <div id ="intro_body">
  <div id ="intro_pad" class="swiper_containersix">
    <div class="swiper-wrapper">
      
  <div class ="intro_divs swiper-slide" id = "content_one">
     <div class ="intro_fat">
     Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.  
  </div>
  </div>
  <div class ="intro_divs swiper-slide" id = "content_two">
     <div class ="intro_fat">
     Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.  
  </div>
    
  </div>
  <div class ="intro_divs swiper-slide" id = "content_three">
    
  <div id="content_skip" class="button_effect">
    Get Started!
  </div>
  </div>
    
    </div>
    
 
    
    
  <div id ="intro_bot">
   <span id="content_onebtn" class = "switch_btns switch_controlclass" onclick="changeActiveTab2(0)"></span>
   <span id="content_twobtn" class = "switch_btns" onclick="changeActiveTab2(1)"></span>
   <span id="content_threebtn" class = "switch_btns" onclick="changeActiveTab2(2)"></span>
  </div>  
  <div id ="intro_skip">
   
    Skip 
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-chevron-bar-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M4.146 3.646a.5.5 0 0 0 0 .708L7.793 8l-3.647 3.646a.5.5 0 0 0 .708.708l4-4a.5.5 0 0 0 0-.708l-4-4a.5.5 0 0 0-.708 0zM11.5 1a.5.5 0 0 1 .5.5v13a.5.5 0 0 1-1 0v-13a.5.5 0 0 1 .5-.5z"/>
</svg> 
  </div>
    
    
    
    
  
  </div>
  </div>
    <div id="second_come">
  

<div id="palm_bg">
  
<div id="palm_signup" class ="palm_div">
  
<h1> Sign Up </h1>
 <div id="palm_switch">
   <span class = "palm_btns" id= ""> Sign Up </span>
   <span class = "palm_btns" id= "switch_in"> Sign In </span>
 </div>

  <div class="input-group">
  <input class="input" autocomplete="off" id="new_gotname">
    <label class="placeholder"><I class="fa fa-user-circle"></i></label>    
    </div>
  <div class="input-group">
  <input class="input" autocomplete="off" id="new_gotmail">
    <label class="placeholder"><I class="fa fa-envelope"></i></label>    
    </div>
  <div class="input-group">  
  <input class="input" autocomplete="off" id="new_gotpass" type="password"  onclick="myFunction()">
    <label class="placeholder hide_pass"><I class="fa fa-key"></i></label>    
    </div>
  <div id="check_div">
    <span id ="check_agree"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-patch-check-fill" viewBox="0 0 16 16">
  <path d="M10.067.87a2.89 2.89 0 0 0-4.134 0l-.622.638-.89-.011a2.89 2.89 0 0 0-2.924 2.924l.01.89-.636.622a2.89 2.89 0 0 0 0 4.134l.637.622-.011.89a2.89 2.89 0 0 0 2.924 2.924l.89-.01.622.636a2.89 2.89 0 0 0 4.134 0l.622-.637.89.011a2.89 2.89 0 0 0 2.924-2.924l-.01-.89.636-.622a2.89 2.89 0 0 0 0-4.134l-.637-.622.011-.89a2.89 2.89 0 0 0-2.924-2.924l-.89.01-.622-.636zm.287 5.984-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7 8.793l2.646-2.647a.5.5 0 0 1 .708.708z"/>
</svg></span>
<span> I Agree with the terms and conditions </span>
  </div>
 <div class ="palm_one" id="sign_upbtn"> Sign Up </div>
 
  
</div>

<div id="palm_signin" class ="palm_div">
  
<h1> Sign In </h1>
 <div id="palm_switch">
   <span class = "palm_btns" id= "switch_up"> Sign Up </span>
   <span class = "palm_btns" id= "switch_in"> Sign In </span>
 </div>

  <div class="input-group">
  <input class="input" autocomplete="off" id="new_logmail">
    <label class="placeholder"><I class="fa fa-envelope"></i></label>    
    </div>
  <div class="input-group">
  <input class="input" autocomplete="off" id="new_logpass" type="password"  onclick="myFunctiontwo()">
    <label class="placeholder"><I class="fa fa-key"></i></label>    
    </div>
  <div class="check_div" id="forgot_passbtn">
    <span><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-question-circle" viewBox="0 0 16 16">
  <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
  <path d="M5.255 5.786a.237.237 0 0 0 .241.247h.825c.138 0 .248-.113.266-.25.09-.656.54-1.134 1.342-1.134.686 0 1.314.343 1.314 1.168 0 .635-.374.927-.965 1.371-.673.489-1.206 1.06-1.168 1.987l.003.217a.25.25 0 0 0 .25.246h.811a.25.25 0 0 0 .25-.25v-.105c0-.718.273-.927 1.01-1.486.609-.463 1.244-.977 1.244-2.056 0-1.511-1.276-2.241-2.673-2.241-1.267 0-2.655.59-2.75 2.286zm1.557 5.763c0 .533.425.927 1.01.927.609 0 1.028-.394 1.028-.927 0-.552-.42-.94-1.029-.94-.584 0-1.009.388-1.009.94z"/>
</svg></span>
    <span> Forgot password</span>
  </div>
  
 <div class ="palm_one" id="sign_inbtn"> Sign in </div>
  
</div>
  
  

<div id="term_slide" class="no_scrollbar">

         <p id="term_slide_exit">
 <svg width="30" height="30" viewBox="0 0 20 20" fill="#fff" stroke="#0000"  xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M13.354 3.646a.5.5 0 010 .708L7.707 10l5.647 5.646a.5.5 0 01-.708.708l-6-6a.5.5 0 010-.708l6-6a.5.5 0 01.708 0z" clip-rule="evenodd"/>
</svg>
             </p> 
     <div id="term_slideval" class="no_scrollbar">
       
           <p class="condition_one content_p nonselect"></p>
         <ol>
           <li class="condition_two content_p nonselect"></li>
           <li class="condition_three content_p nonselect"></li>
           <li class="condition_four content_p nonselect"></li>
           <li class="condition_five content_p nonselect"></li>
           <li class="condition_six content_p nonselect"></li>
           </ol>
           <p class="condition_seven content_p nonselect"></p>
           <p class="condition_eight content_p nonselect"></p>
         
     </div>
       </div>
 <div id ="mail_error_divhide"></div>
   <div class="custom_alert" id="asake_alertfailure">
          <div class="display_flex">
          <div>
         <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-x-circle" viewBox="0 0 16 16">
  <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
  <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>
</svg>
</div>
          <div class="display_column">
            <span class="bold_text"> Error </span>
            <span id="asake_messagefail"> </span>
          </div>
</div>
          <div class ="custom_alertexit"> <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-x" viewBox="0 0 16 16">
  <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>
</svg></div>
        </div>
 <div class="" id="forgot_passdiv"> <div class="input-group">

  <input class="input" autocomplete="off" id="forgot_passval">

    <label class="placeholder"><I class="fa fa-envelope"></i></label>    

    </div>

  </div>
 <div id ="palm_google" onclick = "googleSignin()"> 
 <span> Sign In With Google </span>
 <span class="over_circlebtns button_effect"><svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#0009" class="bi bi-google" viewBox="0 0 16 16"><path d="M15.545 6.558a9.42 9.42 0 0 1 .139 1.626c0 2.434-.87 4.492-2.384 5.885h.002C11.978 15.292 10.158 16 8 16A8 8 0 1 1 8 0a7.689 7.689 0 0 1 5.352 2.082l-2.284 2.284A4.347 4.347 0 0 0 8 3.166c-2.087 0-3.86 1.408-4.492 3.304a4.792 4.792 0 0 0 0 3.063h.003c.635 1.893 2.405 3.301 4.492 3.301 1.078 0 2.004-.276 2.722-.764h-.003a3.702 3.702 0 0 0 1.599-2.431H8v-3.08h7.545z"/></svg>
  </span> </div>
  
</div>

      
    </div>
  
  
  
    </div>
    
    

<div id="all_tabs">
  
  <div class = "all_divs" id= "viewtab">
     <div class= "all_inner">
       
       
<div id="first_partview">
  
  
      <div class="view_board">
        
  
</div>


<div id="status_bg" class="swiper_containerseven">
 <div id="status_val" class="swiper-wrapper">
   
 </div>
</div>



<div class = "latest">
  <div class ="latest_top">
    <span class ="display_flex"> Trending 
   <span id="trending_value" class =""> @Today </span>
    </span>
  </div>
  <div class ="latest_bot" id="trend_late">
  </div>
</div>

<div class = "latest">
  <div class ="latest_top">
    <span > Popular </span>
    <span onclick ="open_drivefunc('popular')" src="hh"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#fff" class="bi bi-chevron-right" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
</svg></span>
  </div>
  <div class ="latest_bot popular_late " id="popular_late">
  </div>
</div>

<div class = "latest">
  <div class ="latest_top">
    <span > Upcoming </span>
    <span onclick ="open_drivefunc('upcoming')"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#fff" class="bi bi-chevron-right" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
</svg></span>
  </div>
  <div class ="latest_bot" id="upcome_late">
  </div>
</div>

<div class = "latest" onclick="open_crewbg()">
  <div class ="latest_top">
    <span > In Theaters </span>
    <span onclick ="open_drivefunc('theaters')"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#fff" class="bi bi-chevron-right" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
</svg></span>
  </div>
  <div class ="latest_bot" id="theater_late">
  </div>   
</div>


<div class = "latest">
  <div class ="latest_top">
    <span > Popular Movies from Your Country </span>
    <span onclick ="open_drivefunc('kdrama')"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#fff" class="bi bi-chevron-right" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
</svg></span>
  </div>
  <div class ="latest_bot" id="local_movies">
  </div>
</div>
<div class = "latest">
  <div class ="latest_top">
    <span > Popular Series from Your Country </span>
    <span onclick ="open_drivefunc('kdrama')"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#fff" class="bi bi-chevron-right" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
</svg></span>
  </div>
  <div class ="latest_bot" id="local_series">
  </div>
</div>

 <div id="actor_latest"></div>
 
 
<div class = "latest">
  <div class ="latest_top">
    <span > Quick Watch: Shorts  </span>
    <span><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#fff" class="bi bi-chevron-right" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
</svg></span>
  </div>
  <div class ="latest_bot" id="short_late">
  </div>
</div>

<div class = "latest">
  <div class ="latest_top">
    <span > Quick Watch: Mini Series  </span>
    <span><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#fff" class="bi bi-chevron-right" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
</svg></span>
  </div>
  <div class ="latest_bot" id="miniser_late">
  </div>
</div>

<div class = "latest">
  <div class ="latest_top">
    <span > Marvel Cinematic Universe (MCU)</span>
    <span><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#fff" class="bi bi-chevron-right" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
</svg></span>
  </div>
  <div class ="latest_bot" id="marvel_late">
  </div>
</div>
<div class = "latest">
  <div class ="latest_top">
    <span > DC Extended Universe (DCeu)</span>
    <span><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#fff" class="bi bi-chevron-right" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
</svg></span>
  </div>
  <div class ="latest_bot" id="dc_late">
  </div>
</div>
<div class = "latest">
  <div class ="latest_top">
    <span > Nickelodeon </span>
    <span><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#fff" class="bi bi-chevron-right" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
</svg></span>
  </div>
  <div class ="latest_bot" id="nick_late">
  </div>
</div>

<div class = "latest" onclick="">
  <div class ="latest_top">
    <span > Filipino  </span>
    <span><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#fff" class="bi bi-chevron-right" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
</svg></span>
  </div>
  <div class ="latest_bot" id="fil_late">
  </div>
</div>


  <div class="vote_bg">
        
   
    <section class="vote_board" id=""> </section>
    <section class="vote_board" id=""> </section>
    <section class="vote_board" id=""> </section>
    <section class="vote_board" id=""> </section>
    <section class="vote_board" id=""> </section>
    <section class="vote_board" id=""> </section>
    <section class="vote_board" id=""> </section>
    <section class="vote_board" id=""> </section>
    <section class="vote_board" id=""> </section>
    <section class="vote_board" id=""> </section>
    <section class="vote_board" id=""> </section>
    <section class="vote_board" id=""> </section>
    <section class="vote_board" id=""> </section>
    <section class="vote_board" id=""> </section>
    <section class="vote_board" id=""> </section>
    <section class="vote_board" id=""> </section>
    <section class="vote_board" id=""> </section>
    <section class="vote_board" id=""> </section>
    <section class="vote_board" id=""> </section>
    <section class="vote_board" id=""> </section>
    <section class="vote_board" id=""> </section>
    <section class="vote_board" id=""> </section>
    <section class="vote_board" id=""> </section>

</div>



  <div class="view_slider">

        <!--

    <section class="slide_section">
    </section>
    <section class="slide_section">
    </section>
    <section class="slide_section">
    </section>
    <section class="slide_section">
    </section>
    <section class="slide_section">
    </section>
    -->
</div>



</div>

  <!-- start of second_partview    second      -->

<div id="second_partview">
  
  
  <div class="slider">
        
        <div class="container">
        
        
        <div class="box">
                <img src="https://cdn.pixabay.com/photo/2019/08/06/20/44/landscape-4389208_1280.jpg"/>
            </div>
        
        <div class="box">
                <img src="https://cdn.pixabay.com/photo/2019/08/11/11/46/bike-4398781_1280.jpg"/>
            </div>
        
        
        
        <div class="box">
                <img src="https://cdn.pixabay.com/photo/2019/07/13/20/49/bike-4335681_1280.jpg"/>
            </div>
        
        
          <div class="box">
                <img src="https://cdn.pixabay.com/photo/2019/08/08/20/37/blackberries-4393805_1280.jpg"/>
            </div>
        
            <div class="box">
                <img src="https://cdn.pixabay.com/photo/2019/08/01/15/35/landscape-4377796_1280.jpg"/>
            </div>
        <div class="box">
                <img src="https://cdn.pixabay.com/photo/2019/08/15/23/34/light-bulb-4409109_1280.jpg"/>
            </div>
            
           <div class="box">
                <img src="https://cdn.pixabay.com/photo/2019/08/15/15/30/camera-4408301_1280.jpg"/>
            </div>
            
            <div class="box">
                <img src="https://cdn.pixabay.com/photo/2019/07/07/14/03/fiat-4322521_1280.jpg"/>
            </div>
            
            
            <div class="box">
                <img src="https://cdn.pixabay.com/photo/2019/08/12/11/40/mallard-4401024_1280.jpg"/>
            </div>
            
            <div class="box">
                <img src="https://cdn.pixabay.com/photo/2019/08/05/17/15/lake-constance-4386497_1280.jpg"/>
            </div>
            
            
             
            <div class="box">
                <img src="https://cdn.pixabay.com/photo/2019/08/15/23/55/light-bulb-4409116_1280.jpg"/>
            </div>
            
         
         
            
        </div>
            
        </div>
  
  
  
  
  
  
<div id="match_bg">
  
<div id="match_up">
  <div id="match_one">
    <div id="match_img"></div>
    <div id="match_two">
      <span class ="ellipsis_text bold_text" id="match_name">Poprizon </span>
      <span class="display_flex">
        <span id="match_imdb"></span>
        <span id="match_time"></span>
      </span>
      <span class ="ellipsis_text" id="match_info">Poprizon person who is that the one who can help you to n who are n who is </span>
    </div>
     </div>
  <div id="match_more"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#fff" class="bi bi-chevron-right" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
</svg></div>
</div>
<div id="match_box">

</div>
<div id="match_btn"> Find Match </div>


</div>
<div class = "latest">
  <div class ="latest_top week_topmovbtn" id="">
    <span > This Week's Top Movies</span>
    <span><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#fff" class="bi bi-chevron-right" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
</svg></span>
  </div>
  <div class ="rank_bot" id="">
    
      <div class ="rank_kids">
        <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 1 </div>
   </div>
   
      <div class ="rank_kids">
          <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 2 </div>
   </div>
   
      <div class ="rank_kids">
          <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 3 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 4 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 5 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 6 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 7 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 8 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 9 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 10 </div>
   </div>
   
</div>




</div>
<div class = "latest">
  <div class ="latest_top week_topmovbtn" id="">
    <span > This Week's Top Movies</span>
    <span><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#fff" class="bi bi-chevron-right" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
</svg></span>
  </div>
  <div class ="rank_bot" id="">
    
      <div class ="rank_kids">
        <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 1 </div>
   </div>
   
      <div class ="rank_kids">
          <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 2 </div>
   </div>
   
      <div class ="rank_kids">
          <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 3 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 4 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 5 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 6 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 7 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 8 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 9 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 10 </div>
   </div>
   
</div>




</div>
<div class = "latest">
  <div class ="latest_top week_topmovbtn" id="">
    <span > This Week's Top Movies</span>
    <span><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#fff" class="bi bi-chevron-right" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
</svg></span>
  </div>
  <div class ="rank_bot" id="">
    
      <div class ="rank_kids">
        <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 1 </div>
   </div>
   
      <div class ="rank_kids">
          <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 2 </div>
   </div>
   
      <div class ="rank_kids">
          <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 3 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 4 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 5 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 6 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 7 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 8 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 9 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 10 </div>
   </div>
   
</div>




</div>
<div class = "latest">
  <div class ="latest_top week_topmovbtn" id="">
    <span > This Week's Top Movies</span>
    <span><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#fff" class="bi bi-chevron-right" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
</svg></span>
  </div>
  <div class ="rank_bot" id="">
    
      <div class ="rank_kids">
        <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 1 </div>
   </div>
   
      <div class ="rank_kids">
          <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 2 </div>
   </div>
   
      <div class ="rank_kids">
          <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 3 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 4 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 5 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 6 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 7 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 8 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 9 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 10 </div>
   </div>
   
</div>




</div>
<div class = "latest">
  <div class ="latest_top week_topmovbtn" id="">
    <span > This Week's Top Movies</span>
    <span><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#fff" class="bi bi-chevron-right" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
</svg></span>
  </div>
  <div class ="rank_bot" id="">
    
      <div class ="rank_kids">
        <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 1 </div>
   </div>
   
      <div class ="rank_kids">
          <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 2 </div>
   </div>
   
      <div class ="rank_kids">
          <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 3 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 4 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 5 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 6 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 7 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 8 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 9 </div>
   </div>
   
      <div class ="rank_kids">
         <span class="pulse_effect onerank_plus"><svg xmlns="http://www.w3.org/2000/svg" width="90" height="90" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></span>
            <div class ="rank_no"> 10 </div>
   </div>
   
</div>




</div>















    </div>
  <!-- end of second_partview    -->
  </div>
  </div>
  <!-- end of viewtab    -->
  <div class = "all_divs" id= "searchtab">
    <div class= "all_inner">
      
      <div id="search_tabtop">
        <div id="search_link" class="pulse_effect">
          <span id="search_looktext"> Search for Movies </span>
          <span id="search_lookbtn"> 
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-backspace" viewBox="0 0 16 16">
  <path d="M5.83 5.146a.5.5 0 0 0 0 .708L7.975 8l-2.147 2.146a.5.5 0 0 0 .707.708l2.147-2.147 2.146 2.147a.5.5 0 0 0 .707-.708L9.39 8l2.146-2.146a.5.5 0 0 0-.707-.708L8.683 7.293 6.536 5.146a.5.5 0 0 0-.707 0z"/>
  <path d="M13.683 1a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-7.08a2 2 0 0 1-1.519-.698L.241 8.65a1 1 0 0 1 0-1.302L5.084 1.7A2 2 0 0 1 6.603 1h7.08zm-7.08 1a1 1 0 0 0-.76.35L1 8l4.844 5.65a1 1 0 0 0 .759.35h7.08a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1h-7.08z"/>
</svg>
          </span>
        </div>
        <div id="search_opt">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-three-dots" viewBox="0 0 16 16">
  <path d="M3 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm5 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z"/>
</svg>
        </div>
      </div>
      <div id="search_tagbottom" class="swiper_containerthree">
        
    <div class="swiper-wrapper">
    <div id ="surf_list" class="swiper-slide">
    </div>
    <div id="search_tagtab" class="swiper-slide">
    <div id="search_taghead" class="">
      
    </div>
    <div id="" class="swiper_containerfour">
    <div id="search_tagval" class="swiper-wrapper">
      
    </div>
    </div>
    </div>
    
      </div>
      </div>
      
      
  
    
 
    
    
    </div>
  </div>
  <!-- end of searchtab    -->
  <div class = "all_divs" id= "hometab">
     <div class= "all_inner">
      
      <div class="home_headbg">
      <header class="home_head">
    <li class="nav-item i week_controlclass ellipsis_text"  id ="home_movbtn"> Movies</li>
    <li class="nav-item ii ellipsis_text"  id ="home_serbtn">Series </li>
    <li class="nav-item iii ellipsis_text" id ="home_anmovbtn">Anime Movies </li>
    <li class="nav-item iv ellipsis_text"  id ="home_anserbtn">Anime Series </li>
    <!--
    <div class="line"></div>
    -->  
    </header>
</div>
  
<div>
  
  
<div id="home_movies" class ="home_tabs">
   <!--
    "son" 'son'  latest        son        hollywood           #latest  happier     
    -->  
    <div id="movies_son" class="home_son">
        
    </div>
<div class ="home_tabsinner" id="home_movieinner">
  
  
  
  
  <div class="swiper_containereight">
  <div class="son_slider swiper-wrapper">
<!--
    <section class="son_section">
      <div class="son_innerboard"></div>
      <div class="son_innertwo">
      <div class="son_filmimage">
        
      </div>
      <div class="son_filmmore">
        <span class="son_filmname"> Bumblebee </span>
        <span class="son_filmgen"> comedy drama musiv animation Lorem ipsum dolor sit amet consectetur, adipisicing elit. Provident delectus porro at sed expedita magni, corrupti rerum ex corporis ad.</span>
        <span class="son_filmtwo">
        <span class="son_filmimdb">5.7</span>
        <span class="son_filmlen"> 112 </span>
          
        </span>
      </div>
        
      </div>
      
    </section>
    -->
</div>
</div>

  <br>
  <br>
  <div>
  <div class="lit_txt display_flex align_center justify_between" id="border_spec"> <span>Hollywood</span>   <span onclick ="open_latestfunc(1,'movies')" class="one_chev"><svg xmlns="http://www.w3.org/2000/svg" width="23" height="23" fill="currentColor" class="bi bi-chevron-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
</svg></span>
  </div>
  <div class="happier" id="hol_woodmov"> 
  </div>
  
  </div>
  <div>
  <div class="lit_txt display_flex align_center justify_between"> <span>British Cinema </span>   <span onclick ="open_latestfunc(2,'movies')" class="one_chev"><svg xmlns="http://www.w3.org/2000/svg" width="23" height="23" fill="currentColor" class="bi bi-chevron-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
</svg></span>
  </div>
  <div class="happier" id="uk_woodmov"> 
  </div>
  
  </div>
  <div>
  <div class="lit_txt display_flex align_center justify_between"> <span>Korean Cinema </span>   <span onclick ="open_latestfunc(3,'movies')" class="one_chev"><svg xmlns="http://www.w3.org/2000/svg" width="23" height="23" fill="currentColor" class="bi bi-chevron-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
</svg></span>
  </div>
  <div class="happier" id="kor_woodmov"> 
  </div>
  
  </div>
  <div>
  <div class="lit_txt display_flex align_center justify_between"> <span>Japan Cinema </span>   <span onclick ="open_latestfunc(4,'movies')" class="one_chev"><svg xmlns="http://www.w3.org/2000/svg" width="23" height="23" fill="currentColor" class="bi bi-chevron-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
</svg></span>
  </div>
  <div class="happier" id="jap_woodmov"> 
  </div>
  
  </div>
  <div>
  <div class="lit_txt display_flex align_center justify_between"> <span>German Cinema </span>   <span onclick ="open_latestfunc(5,'movies')" class="one_chev"><svg xmlns="http://www.w3.org/2000/svg" width="23" height="23" fill="currentColor" class="bi bi-chevron-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
</svg></span>
  </div>
  <div class="happier" id="ger_woodmov"> 
  </div>
  
  </div>
  
  
  
  </div>
  
  
  
</div>
<!-- end of home_movies -->  
  
  
<div id="home_series" class ="home_tabs">
  <div id="series_son" class="home_son">
      
    </div>
<div class ="home_tabsinner" id="home_serieinner">
  
   
  <div>
  <div class="lit_txt display_flex align_center justify_between"> <span>Hollywood</span>   <span onclick ="open_latestfunc(1,'series')" class="one_chev"><svg xmlns="http://www.w3.org/2000/svg" width="23" height="23" fill="currentColor" class="bi bi-chevron-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
</svg></span>
  </div>
  <div class="happier" id="hol_woodser"> 
  </div>
  
  </div>
  <div>
  <div class="lit_txt display_flex align_center justify_between"> <span>British Cinema </span>   <span onclick ="open_latestfunc(2,'series')" class="one_chev"><svg xmlns="http://www.w3.org/2000/svg" width="23" height="23" fill="currentColor" class="bi bi-chevron-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
</svg></span>
  </div>
  <div class="happier" id="uk_woodser"> 
  </div>
  
  </div>
  <div>
  <div class="lit_txt display_flex align_center justify_between"> <span>Korean Cinema </span>   <span onclick ="open_latestfunc(3,'series')"  class="one_chev"><svg xmlns="http://www.w3.org/2000/svg" width="23" height="23" fill="currentColor " class="bi bi-chevron-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
</svg></span>
  </div>
  <div class="happier" id="kor_woodser"> 
  </div>
  
  </div>
  <div>
  <div class="lit_txt display_flex align_center justify_between"> <span>Japan Cinema </span>   <span onclick ="open_latestfunc(4,'series')"  class="one_chev"><svg xmlns="http://www.w3.org/2000/svg" width="23" height="23" fill="currentColor" class="bi bi-chevron-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
</svg></span>
  </div>
  <div class="happier" id="jap_woodser"> 
  </div>
  
  </div>
  <div>
  <div class="lit_txt display_flex align_center justify_between"> <span>German Cinema </span>   <span onclick ="open_latestfunc(5,'series')" class="one_chev"><svg xmlns="http://www.w3.org/2000/svg" width="23" height="23" fill="currentColor" class="bi bi-chevron-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
</svg></span>
  </div>
  <div class="happier" id="ger_woodser"> 
  </div>
  
  </div>
  
  
  
  </div>
  </div>
<!-- end of home_series -->  
  
  
<div id="home_anmov" class ="home_tabs">
  <div id="anmov_son" class="home_son">
      
    </div>
<div class ="home_tabsinner">
  </div></div>
<!-- end of home_anmov -->  
  
  
<div id="home_anser" class ="home_tabs"> 
<div id="anser_son" class="home_son">
      
    </div>
<div class ="home_tabsinner">
  </div></div>
<!-- end of home_anser -->  
  
  
  
  
  
</div>
      <!-- end of div that covers the category of home    -->
      
      
    </div>
  </div>
  <!-- end of hometab    -->
  <div class = "all_divs" id= "filmtab">
     <div class= "all_inner">
         
         
     <div class="film_subtabs" id="follow_tabdiv">
       
       
     <div class= "film_subinners" id="follow_tabinner">
       
     
      
       <div class ="twit_cover">
       <div class ="twit_profileimg"></div>
       <div class ="twit_post">
       <div class ="twit_head">
       <span class ="twit_username">Trevor Noah </span>
       <span class ="twit_userdate"> 20 Jun </span>
         
         </div>
         <div class="twit_content">
           <section></section>
           <section id="gggg"></section>
           <section></section>
         </div>
         <!---
         <div class="egg_div">
       <div></div>
       <div></div>
       <div></div>
       <div></div>
       <div></div>
       <div></div>
       <div></div>
       <div></div>
       <div></div>
       <section></section>
         </div>
         -->
         <div class="twit_text">
           <b> the mad dog </b>
           <p>
             
         Lorem ipsum dolor sit amet consectetur, adipisicing elit. Provident delectus porro at sed expedita magni, corrupti rerum ex corporis ad.Lorem ipsum dolor sit amet consectetur, adipisicing elit. Provident delectus porro at sed expedita magni, corrupti rerum ex corporis ad.Lorem ipsum dolor sit amet consectetur, adipisicing elit. Provident delectus porro at sed expedita magni, corrupti rerum ex corporis ad.
           </p>
         </div>
         <div class="twit_btns">
           <span class="display_flex align_center">
           <span> <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-heart" viewBox="0 0 16 16"><path d="m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z"/></svg>
</span>
             <span> 13 </span>
           </span>
           <span><svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-chat-left-dots" viewBox="0 0 16 16"><path d="M14 1a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H4.414A2 2 0 0 0 3 11.586l-2 2V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12.793a.5.5 0 0 0 .854.353l2.853-2.853A1 1 0 0 1 4.414 12H14a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z"/><path d="M5 6a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/></svg></span>
           <span> <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-three-dots-vertical" viewBox="0 0 16 16"><path d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/></svg></span>  
         </div>
       </div>
         
         
       </div>
    
     </div>
     </div>
     <!-- end of a section -->
     <!-- the last section is at the end of the html  -->
  
     <div class="film_subtabs" id="reel_tabdiv">
     <div class= "film_subinners">
       
     </div>
     </div>
     <!-- end of a section -->
         
       <div id="film_controls">
         
        
   <div class ="film_controlbtns button_effect week_controlclass ellipsis_text" id="follow_tabbtn"> Following </div>
   <div class ="film_controlbtns button_effect ellipsis_text" id="reel_tabbtn"> Reels     </div>
   <div class ="film_controlbtns button_effect  ellipsis_text" id="feed_tabbtn">  <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-plus" viewBox="0 0 16 16">
  <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/></svg>   </div>
   <div class ="film_controlbtns button_effect ellipsis_text" id="channel_searchbtn"> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
  <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z"/>
</svg></div>
   <div class ="film_controlbtns button_effect ellipsis_text display_flex " id="my_chandot" onclick="create_channel()">  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-three-dots-vertical" viewBox="0 0 16 16">
  <path d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/>
</svg></div>
     
   </div>
    
     
    </div>
  </div>
  <!-- end of filmtab    -->
  <div class = "all_divs" id= "moretab">
     <div class= "all_inner" id="more_inner">
     <div class= "" id="more_bg">
       
     <div class= "" id="more_opt1">
       <div onclick="open_collect('collect')">
         <span>  <svg xmlns="http://www.w3.org/2000/svg" width="39" height="39" fill="currentColor" class="bi bi-plus" viewBox="0 0 16 16">
  <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/></svg></span>
         <span>Collections </span>
       </div>
       <div id="" onclick="open_collect('recom')">
         <span>  <svg xmlns="http://www.w3.org/2000/svg" width="39" height="39" fill="currentColor" class="bi bi-plus" viewBox="0 0 16 16">
  <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/></svg></span>
         <span>Recommendations </span>
       </div>
       <div id="" onclick="open_collect('playlist')">
         <span>  <svg xmlns="http://www.w3.org/2000/svg" width="39" height="39" fill="currentColor" class="bi bi-plus" viewBox="0 0 16 16">
  <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/></svg></span>
         <span>Playlists </span>
       </div>
     </div>
     <div class= "" id="more_opt2">
       <section class="button_effect" id=""> <span>   <svg xmlns="http://www.w3.org/2000/svg" width="39" height="39" fill="currentColor" class="bi bi-plus" viewBox="0 0 16 16">
  <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/></svg></span>
       <span> Profile </span>
       </section>
       <section class="button_effect" id=""> <span>   <svg xmlns="http://www.w3.org/2000/svg" width="39" height="39" fill="currentColor" class="bi bi-plus" viewBox="0 0 16 16">
  <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/></svg></span>
       <span> Hub </span>
       </section>
       <section class="button_effect" id=""> <span>   <svg xmlns="http://www.w3.org/2000/svg" width="39" height="39" fill="currentColor" class="bi bi-plus" viewBox="0 0 16 16">
  <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/></svg></span>
       <span> Notification </span>
       </section>
     </div>
     <div class= "" id="more_opt3">
       
       <section class="button_effect" id=""> <span>   <svg xmlns="http://www.w3.org/2000/svg" width="39" height="39" fill="currentColor" class="bi bi-plus" viewBox="0 0 16 16">
  <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/></svg></span>
       <span> Settings </span>
       </section>
     </div>
       
       
     </div>
      
      
      
      
      
    </div>
  </div>
  <!-- end of moretab    -->
  
  
  <footer>
    <div id="view_footbtn" class="foot_items ripple">
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#fff " class="bi bi-egg-fried" viewBox="0 0 16 16">
  <path d="M8 11a3 3 0 1 0 0-6 3 3 0 0 0 0 6z"/>
  <path d="M13.997 5.17a5 5 0 0 0-8.101-4.09A5 5 0 0 0 1.28 9.342a5 5 0 0 0 8.336 5.109 3.5 3.5 0 0 0 5.201-4.065 3.001 3.001 0 0 0-.822-5.216zm-1-.034a1 1 0 0 0 .668.977 2.001 2.001 0 0 1 .547 3.478 1 1 0 0 0-.341 1.113 2.5 2.5 0 0 1-3.715 2.905 1 1 0 0 0-1.262.152 4 4 0 0 1-6.67-4.087 1 1 0 0 0-.2-1 4 4 0 0 1 3.693-6.61 1 1 0 0 0 .8-.2 4 4 0 0 1 6.48 3.273z"/>
</svg>
    </div>
    <div id="search_footbtn" class="foot_items ripple">
     <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#fff " class="bi bi-search" viewBox="0 0 16 16">
  <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z"/>
</svg>
    </div>
    <div id="home_footbtn" class="foot_items ripple">
      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#fff " class="bi bi-house-door" viewBox="0 0 16 16">
  <path d="M8.354 1.146a.5.5 0 0 0-.708 0l-6 6A.5.5 0 0 0 1.5 7.5v7a.5.5 0 0 0 .5.5h4.5a.5.5 0 0 0 .5-.5v-4h2v4a.5.5 0 0 0 .5.5H14a.5.5 0 0 0 .5-.5v-7a.5.5 0 0 0-.146-.354L13 5.793V2.5a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v1.293L8.354 1.146ZM2.5 14V7.707l5.5-5.5 5.5 5.5V14H10v-4a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5v4H2.5Z"/>
</svg>
    </div>
    <div id="film_footbtn" class="foot_items ripple">
      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#fff " troke="#fff" class="bi bi-film- " viewBox="0 0 16 16">
  <path d="M0 1a1 1 0 0 1 1-1h14a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1V1zm4 0v6h8V1H4zm8 8H4v6h8V9zM1 1v2h2V1H1zm2 3H1v2h2V4zM1 7v2h2V7H1zm2 3H1v2h2v-2zm-2 3v2h2v-2H1zM15 1h-2v2h2V1zm-2 3v2h2V4h-2zm2 3h-2v2h2V7zm-2 3v2h2v-2h-2zm2 3h-2v2h2v-2z"/>
</svg>
    </div>
    <div id="more_footbtn" class="button_effect">
      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#fff " class="bi bi-chevron-up" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"/>
</svg>
    </div>
    
  </footer>
  
</div>
<!-- end of all_tabs -->

<!-- end of macro_bg  overall  major 

    <div id="macro_bg" class="macro_bg">
    <div id="macro_inner">
    <div id="macro_first">
      
    <div id="macro_exit"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-chevron-bar-left" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M11.854 3.646a.5.5 0 0 1 0 .708L8.207 8l3.647 3.646a.5.5 0 0 1-.708.708l-4-4a.5.5 0 0 1 0-.708l4-4a.5.5 0 0 1 .708 0zM4.5 1a.5.5 0 0 0-.5.5v13a.5.5 0 0 0 1 0v-13a.5.5 0 0 0-.5-.5z"/>
</svg></div>
<input id="macro_search">
</div>
      
    <div class="macro_board">
    <div class="macro_top" id="macro_poster">
      
    </div>
    <div class="macro_top">
    <iframe width="560" height="315" src=""  id="macro_video"  frameborder="0" allowfullscreen></iframe>

      
    </div>
    </div>
      
      <div id="m_profile">
        <div id="m_profimg"></div>
        <div id="m_profmore">
        </div>
      </div>
      <span id="m_profname" class="ellipsis_text"> The Magician's elephant </span>
      <div id="major_intel">
        <span id="intel_adult">
          <svg style="color: red" xmlns="http://www.w3.org/2000/svg"  width="30" height="30" data-name="Layer 1" viewBox="0 0 24 24"><path d="M18,5h1V6a1,1,0,0,0,2,0V5h1a1,1,0,0,0,0-2H21V2a1,1,0,0,0-2,0V3H18a1,1,0,0,0,0,2ZM7,7V17a1,1,0,0,0,2,0V7A1,1,0,0,0,7,7ZM21.6,9a1,1,0,0,0-.78,1.18,9,9,0,1,1-7-7,1,1,0,1,0,.4-2A10.8,10.8,0,0,0,12,1,11,11,0,1,0,23,12a10.8,10.8,0,0,0-.22-2.2A1,1,0,0,0,21.6,9ZM11,9v1a3,3,0,0,0,.78,2A3,3,0,0,0,11,14v1a3,3,0,0,0,3,3h1a3,3,0,0,0,3-3V14a3,3,0,0,0-.78-2A3,3,0,0,0,18,10V9a3,3,0,0,0-3-3H14A3,3,0,0,0,11,9Zm5,6a1,1,0,0,1-1,1H14a1,1,0,0,1-1-1V14a1,1,0,0,1,1-1h1a1,1,0,0,1,1,1Zm0-6v1a1,1,0,0,1-1,1H14a1,1,0,0,1-1-1V9a1,1,0,0,1,1-1h1A1,1,0,0,1,16,9Z" fill="red"></path></svg>
        </span>
        <span id="intel_year" class="ellipsis_text"> 2022 </span>
        <span id="intel_type" class="ellipsis_text"> TV Series </span>
        <span id="intel_series" class="ellipsis_text">  2S & 15E </span>
        <span id="intel_status" class="ellipsis_text">   </span>
      </div>
      <div id="overall_btndiv">
        <div id="film_collectbtn" class="button_effect overall_btns">
          <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-patch-plus" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8 5.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V10a.5.5 0 0 1-1 0V8.5H6a.5.5 0 0 1 0-1h1.5V6a.5.5 0 0 1 .5-.5z"/><path d="m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z"/>
</svg>
        </div>
        <div id="film_sharebtn" class="button_effect overall_btns">
          <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-share" viewBox="0 0 16 16">
  <path d="M13.5 1a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3zM11 2.5a2.5 2.5 0 1 1 .603 1.628l-6.718 3.12a2.499 2.499 0 0 1 0 1.504l6.718 3.12a2.5 2.5 0 1 1-.488.876l-6.718-3.12a2.5 2.5 0 1 1 0-3.256l6.718-3.12A2.5 2.5 0 0 1 11 2.5zm-8.5 4a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3zm11 5.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3z"/>
</svg>
        </div>
        <div id="film_listbtn" class="button_effect overall_btns">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"   width="30" height="30"> <g> <path fill="#0001" d="M0 0h24v24H0z"/> <path fill="currentColor" d="M2 18h10v2H2v-2zm0-7h20v2H2v-2zm0-7h20v2H2V4zm16 14v-3h2v3h3v2h-3v3h-2v-3h-3v-2h3z"/> </g> </svg>
        </div>
        </div>
      <div id="major_switch">
            <div class="major_btns m_switch ellipsis_text" id="maj_view"> Overview </div>
            <div class="major_btns ellipsis_text" id="maj_more"> Reviews </div>
            <div class="major_btns ellipsis_text" id="maj_hash" > Hashtags </div>
        </div>
      
      <div id="major_bg">
        
        
      <div id="major_view" class="major_kids">
        
        
           <span class="major_imdb">
             <span><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-star-fill" viewBox="0 0 16 16">
<path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z"/>
</svg></span>
<span id="m_imdb">16</span> 
</span>
        
         <div id = "award_txt"> 2 Awards and 5 Nominations </div>
         
          <div id = "film_photo">

        <div class = "lit_txt"> Photo </div>

        <div id = "photo_val" class="no_scrollbar"> 
      
        
        </div>
      </div>
         
         
         <div class="border_cover">
         <div class = "lit_txt"> Synopsis </div>
         <div id="film_note">
           Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.  
         </div>
         
         </div>
      
      
          <div id = "film_trailer">

        <div class = "lit_txt"> Trailers & Clips</div>

        <div id = "trailer_val" class="no_scrollbar"> 
     
        </div>
      </div>
        <div id="director_path">
          <span id="director_head"> Director </span>
          <span id="director_val"> Xavier Christian </span>
        </div>
        
        
          <div class = "border_cover">

        <div class = "lit_txt"> Top Cast </div>

        <div id = "cast_val" class="no_scrollbar"> 
       
        
        </div>
      </div>
       
       <div id="company_path">
    <div class = "lit_txt"> Production Company </div> 
         <div id="company_val">
        
         </div>
       </div>
        
         <div class = "border_cover">
        <div class = "lit_txt"> Storyline </div>
         <div id="story_note">

           Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.  

         </div>
         <br>
   <div class="">
     <span class="color_orange majorbold_text"> Genre </span>
     <span class="colr_orange" id="film_genre">  Action Comedy Drama </span>
   </div>
   <hr class="border_bottom">
   
   <div class="">
     <span class="color_orange majorbold_text"> Tags </span>
     <span class="colr_orange" id="film_tag"> 
     </span>
   </div>
   <hr class="border_bottom">
   <div class="">
     <span class="color_orange majorbold_text"> Duration </span>
     <span class="colr_orange" id="film_length">  </span>
   </div>
   <hr class="border_bottom">
   <div class="">
     <span class="color_orange majorbold_text"> Tagline </span>
     <span class="colr_orange" id="film_tagline">  </span>
   </div>
   <hr class="border_bottom">
   
   <div class="">
     <span class="color_orange majorbold_text"> Certificate </span>
     <span class="colr_orange" id="film_pg"> caution </span>
   </div>
   <hr class="border_bottom">
        
        </div>
        
         <div class = "border_cover" id="film_moment">
        <div class = "lit_txt"> Moments </div>
         <div id = "moment_val" class="no_scrollbar">
   
        </div>
        </div>
        
         <div class = "border_cover" id="film_more">
        <div class = "lit_txt"> More like this </div>
   <div id = "morefilm_val" class="no_scrollbar">
    
        </div>
        </div>
        
         <div class = "border_cover">
        <div class = "lit_txt"> Details </div>
        
       <div class="">
     <span class="color_orange majorbold_text"> Production Country </span>
     <span class="colr_orange" id="film_coun">   </span>
   </div>
        <hr class="border_bottom">
        
   
       <div class="">
     <span class="color_orange majorbold_text"> Release Date </span>
     <span class="colr_orange" id="film_date">  18th March, 2023 </span>
   </div>
        <hr class="border_bottom">
        
       <div class="">
     <span class="color_orange majorbold_text"> Language </span>
     <span class="colr_orange" id="film_lang">  English Russian  </span>
   </div>
        <hr class="border_bottom">
        
       <div class="">
     <span class="color_orange majorbold_text"> Also Known As </span>
     <span class="colr_orange" id="film_aka"> The search for the missing magic chess elephant </span>
   </div>
        <hr class="border_bottom">
        
       <div class="">
     <span class="color_orange majorbold_text"> Box Office </span>
     <span class="colr_orange" id="film_budget">  $11,000,000 </span>
   </div>
        <hr class="border_bottom">
       <div class="">
     <span class="color_orange majorbold_text"> Revenue </span>
     <span class="colr_orange" id="film_revenue">  </span>
   </div>
        <hr class="border_bottom">
        
        
        </div>
        
         <div class = "border_cover" id="film_check">
        <div class = "lit_txt"> Check These Out </div>
   <div id = "checkfilm_val" class="no_scrollbar">      
         <div class="m_profimg"></div>

         <div class="m_profimg"></div>

         <div class="m_profimg"></div>
         <div class="m_profimg"></div>
         <div class="m_profimg"></div>
        
        </div>
        </div>
        
        
        
        
      </div>
    

      <div id="major_more" class="major_kids circle_divclass">
        
        <div id="review_inner">
          
        </div>
        <div id="review_size">
        <div id="review_bot">
          
          <div id="rev_bot1">
          <div id="rev_img"></div>
          <textarea id="rev_text" placeholder="Write your review..." class="white_placeholder"></textarea>
            
          </div>
          <div id="rev_bot2">
           <div id="" class="button_effect"><label for="review_sms" class="file-input-label"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-images" viewBox="0 0 16 16"> 
  <path d="M4.502 9a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z"/>
  <path d="M14.002 13a2 2 0 0 1-2 2h-10a2 2 0 0 1-2-2V5A2 2 0 0 1 2 3a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v8a2 2 0 0 1-1.998 2zM14 2H4a1 1 0 0 0-1 1h9.002a2 2 0 0 1 2 2v7A1 1 0 0 0 15 11V3a1 1 0 0 0-1-1zM2.002 4a1 1 0 0 0-1 1v8l2.646-2.354a.5.5 0 0 1 .63-.062l2.66 1.773 3.71-3.71a.5.5 0 0 1 .577-.094l1.777 1.947V5a1 1 0 0 0-1-1h-10z"/>
</svg>
  <input type="file" id="review_sms" accept="image/jpeg, image/png, image/gif, image/jpg, video/mp4,video/webm,video/ogg" multiple>
</label></div>
          <div id="rev_send"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-send-plane-" viewBox="0 0 16 16">
  <path d="M15.854.146a.5.5 0 0 1 .11.54l-5.819 14.547a.75.75 0 0 1-1.329.124l-3.178-4.995L.643 7.184a.75.75 0 0 1 .124-1.33L15.314.037a.5.5 0 0 1 .54.11ZM6.636 10.07l2.761 4.338L14.13 2.576 6.636 10.07Zm6.787-8.201L1.591 6.602l4.339 2.76 7.494-7.493Z"/>
</svg></div> 
            
          </div>
          
        </div>
        <div id="review_foot"></div>
        </div>
        
        
        
        </div>
        

        


      <div id="major_hash" class="major_kids"></div>
        

        
        
        
      </div>

      
      
      
      
      
      
      
      
    </div>
    </div>
    

macro   minor macro_bg  -->
  
        
   
 <div id="week_bg">
   
   <div id="week_nomtab" class="week_tabs">
 <div class="week_notify">
   This is a list of movies that have been nominated for top movies. You may do well do express your opinions in the <span>#suggestions </span> Tab.
   
 </div>
   <div id="nomi_tabinner" class="week_tabinners">
     
     <div class="nom_listbg">
       <div class="nom_left display_flex">
         
     <div class="nom_img"></div>
     <div class="nom_txt">
       <span class="nom_name ellipsis_text">Poprizon </span>
       <span class="display_flex">
         <span id="nom_year">2023 </span>
         <span><span id="nom_year">12</span>+</span>
         <span class="nom_star"><span><svg xmlns="http://www.w3.org/2000/svg" width="10" height="10" fill="currentColor" class="bi bi-star-fill" viewBox="0 0 16 16">
  <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z"/>
</svg></span><span id="nom_imdb"> 6.5 </span>
        </span>
        
        
     </div>
         
       </div>
       <div class="nom_right display_flex">
         <span><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-check-circle-fill" viewBox="0 0 16 16">
  <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z"/>
</svg></span>
         <span><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-three-dots-vertical" viewBox="0 0 16 16">
  <path d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/>
</svg></span>
       </div>
     </div>
     <div class="nom_listbg">
       <div class="nom_left display_flex">
         
     <div class="nom_img"></div>
     <div class="nom_txt">
       <span class="nom_name ellipsis_text">Poprizon </span>
       <span class="display_flex">
         <span id="nom_year">2023 </span>
         <span><span id="nom_year">12</span>+</span>
         <span class="nom_star"><span><svg xmlns="http://www.w3.org/2000/svg" width="10" height="10" fill="currentColor" class="bi bi-star-fill" viewBox="0 0 16 16">
  <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z"/>
</svg></span><span id="nom_imdb"> 6.5 </span>
        </span>
        
        
     </div>
         
       </div>
       <div class="nom_right display_flex">
         <span><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-check-circle-fill" viewBox="0 0 16 16">
  <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z"/>
</svg></span>
         <span><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-three-dots-vertical" viewBox="0 0 16 16">
  <path d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/>
</svg></span>
       </div>
     </div>
     
   
     
     
     
   </div>
   </div>
   <!--  -->
   
   
   
   <div id="week_sugtab" class="week_tabs">
     <div class="week_notify">
   This is a space for users to express their opinions on the Nominations, they may suggest a movie be added or removed.
   
 </div>
     <div id="" class="week_tabinners">
     <div class="week_answerdiv"></div>
       <div id="tag_box" class="fake_weekevent square_divclass">  </div>
     <div class="week_messagediv">
       <textarea id="fake_weektxt" class="fake_weekevent" contenteditable="true"></textarea>
       <div id="fake_weekbtn"> Comment   </div>
       
       
       
     </div>
     
   </div>
   </div>
   <!--  -->
   
   
   
   <div id="week_prevtab" class="week_tabs">
     <div class="week_notify">
   This is a list of movies that have been won top movies in the past weeks.
   
 </div> 
     <div id="prev_tabinner" class="week_tabinners">
     <div class="my_nomchat">
   This is a list of movies that have been won top movies in the past weeks!
       
     </div>
   </div>
   </div>
   <!--  -->
   
   
   <div id="week_controls">
   <div class ="week_controlbtns button_effect week_controlclass ellipsis_text" id="week_nombtn"> Nominees </div>
   <div class ="week_controlbtns button_effect  ellipsis_text" id="week_prevbtn"> Previous </div>
   <div class ="week_controlbtns button_effect ellipsis_text" id="week_sugbtn"> Suggestions </div>
   <div class ="week_controlbtns button_effect ellipsis_text" id="week_exitbtn"> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16 " fill="currentColor" class="bi bi-x-circle" viewBox="0 0 16 16">
  <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
  <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>
</svg> </div>
   <div class ="week_controlbtns button_effect ellipsis_text" id="verify_addbtn"> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg></div>
     
   </div>
   
   
   <div class="modam">
        <img src="https://displate.com/displates/2019-05-02/03a396a69307397f025b15b3c3d1580a_2a1fbcdc78ee34889f7654cc5c60664d.jpg" alt="" id="modam_img">
        <div class="content0">
            <h1 id="modam_name" class="ellipsis_text">Awesome Modal</h1>
            <p id="modam_note">Lorem ipsum dolor, sit amet consectetur adipisicing elit.</p>
            <a id="modam_btn">Read More</a>
        </div>
        <span onclick="hideModam()" class="icon ion-md-close"></span>
    </div>
   
 </div>     
        <!-- end of week_bg -->
        
     <div id="netcard_bg">
            <div id="netcard_div">
                
             <div id="netcard_top">
    <div id="net_topone">
    <div id="net_image"> </div>
    <div id="net_more">
    <div id="net_toptwo">
        <span id="net_name" class="ellipsis_text">Poprizon</span>
        <span id="net_info">
            <span id="net_year" class="font_12 ellipsis_text"> 2023 </span>
            <span id="net_time" class="font_12 ellipsis_text"> 1hr 25min </span>
            <span class="font_12 ellipsis_text"> <span id="net_imdb" class="font_12">  </span> +</span>
        </span>
        </div>
        <span id="net_note">
            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui oficia deserunt mollit anim id est laborum.
        </span>
    </div>
    </div>
                 
                 
                 
             </div>
             <div id="netcard_bot">
               <span> <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-patch-plus" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8 5.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V10a.5.5 0 0 1-1 0V8.5H6a.5.5 0 0 1 0-1h1.5V6a.5.5 0 0 1 .5-.5z"/><path d="m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z"/>
</svg></span>
               <span> <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-share" viewBox="0 0 16 16"><path d="M13.5 1a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3zM11 2.5a2.5 2.5 0 1 1 .603 1.628l-6.718 3.12a2.499 2.499 0 0 1 0 1.504l6.718 3.12a2.5 2.5 0 1 1-.488.876l-6.718-3.12a2.5 2.5 0 1 1 0-3.256l6.718-3.12A2.5 2.5 0 0 1 11 2.5zm-8.5 4a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3zm11 5.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3z"/>
</svg></span>
               <span>  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"   width="24" height="24"> <g> <path fill="#0001" d="M0 0h24v24H0z"/> <path fill="currentColor" d="M2 18h10v2H2v-2zm0-7h20v2H2v-2zm0-7h20v2H2V4zm16 14v-3h2v3h3v2h-3v3h-2v-3h-3v-2h3z"/> </g> </svg></span>
               <span>
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-play" viewBox="0 0 16 16"><path d="M10.804 8 5 4.633v6.734L10.804 8zm.792-.696a.802.802 0 0 1 0 1.392l-6.363 3.692C4.713 12.69 4 12.345 4 11.692V4.308c0-.653.713-.998 1.233-.696l6.363 3.692z"/></svg>
               </span>
             </div>
             <div id="netcard_foot">
                 <span> <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-info-circle" viewBox="0 0 16 16">
  <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
  <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/>
</svg> Further information </span>
                 <span><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-chevron-right" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
</svg></span>
             </div>
             <div id="netcard_exit">
                 <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-x" viewBox="0 0 16 16">
  <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>
</svg>
             </div>
                
                
                

                
            </div>
        </div>
<!--  "rc"    rc      #rc      .rc    -->
  <div id="rc">
  <div id="" class="button_effect"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-shop-window" viewBox="0 0 16 16">
  <path d="M2.97 1.35A1 1 0 0 1 3.73 1h8.54a1 1 0 0 1 .76.35l2.609 3.044A1.5 1.5 0 0 1 16 5.37v.255a2.375 2.375 0 0 1-4.25 1.458A2.371 2.371 0 0 1 9.875 8 2.37 2.37 0 0 1 8 7.083 2.37 2.37 0 0 1 6.125 8a2.37 2.37 0 0 1-1.875-.917A2.375 2.375 0 0 1 0 5.625V5.37a1.5 1.5 0 0 1 .361-.976l2.61-3.045zm1.78 4.275a1.375 1.375 0 0 0 2.75 0 .5.5 0 0 1 1 0 1.375 1.375 0 0 0 2.75 0 .5.5 0 0 1 1 0 1.375 1.375 0 1 0 2.75 0V5.37a.5.5 0 0 0-.12-.325L12.27 2H3.73L1.12 5.045A.5.5 0 0 0 1 5.37v.255a1.375 1.375 0 0 0 2.75 0 .5.5 0 0 1 1 0zM1.5 8.5A.5.5 0 0 1 2 9v6h12V9a.5.5 0 0 1 1 0v6h.5a.5.5 0 0 1 0 1H.5a.5.5 0 0 1 0-1H1V9a.5.5 0 0 1 .5-.5zm2 .5a.5.5 0 0 1 .5.5V13h8V9.5a.5.5 0 0 1 1 0V13a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V9.5a.5.5 0 0 1 .5-.5z"/>
</svg></div>
  <div id="post_plus" class="button_effect"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
  <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z"/>
  <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z"/>
</svg></div>
  <div id="" class="button_effect"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-ui-checks-grid" viewBox="0 0 16 16">
  <path d="M2 10h3a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1v-3a1 1 0 0 1 1-1zm9-9h3a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-3a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zm0 9a1 1 0 0 0-1 1v3a1 1 0 0 0 1 1h3a1 1 0 0 0 1-1v-3a1 1 0 0 0-1-1h-3zm0-10a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h3a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2h-3zM2 9a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h3a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2H2zm7 2a2 2 0 0 1 2-2h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2h-3a2 2 0 0 1-2-2v-3zM0 2a2 2 0 0 1 2-2h3a2 2 0 0 1 2 2v3a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2zm5.354.854a.5.5 0 1 0-.708-.708L3 3.793l-.646-.647a.5.5 0 1 0-.708.708l1 1a.5.5 0 0 0 .708 0l2-2z"/>
</svg></div>
  <div id="" class="button_effect"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-person-bounding-box" viewBox="0 0 16 16">
  <path d="M1.5 1a.5.5 0 0 0-.5.5v3a.5.5 0 0 1-1 0v-3A1.5 1.5 0 0 1 1.5 0h3a.5.5 0 0 1 0 1h-3zM11 .5a.5.5 0 0 1 .5-.5h3A1.5 1.5 0 0 1 16 1.5v3a.5.5 0 0 1-1 0v-3a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 1-.5-.5zM.5 11a.5.5 0 0 1 .5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 1 0 1h-3A1.5 1.5 0 0 1 0 14.5v-3a.5.5 0 0 1 .5-.5zm15 0a.5.5 0 0 1 .5.5v3a1.5 1.5 0 0 1-1.5 1.5h-3a.5.5 0 0 1 0-1h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 1 .5-.5z"/>
  <path d="M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3zm8-9a3 3 0 1 1-6 0 3 3 0 0 1 6 0z"/>
</svg></div>
  <div id="" class="button_effect"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-gear" viewBox="0 0 16 16">
  <path d="M8 4.754a3.246 3.246 0 1 0 0 6.492 3.246 3.246 0 0 0 0-6.492zM5.754 8a2.246 2.246 0 1 1 4.492 0 2.246 2.246 0 0 1-4.492 0z"/>
  <path d="M9.796 1.343c-.527-1.79-3.065-1.79-3.592 0l-.094.319a.873.873 0 0 1-1.255.52l-.292-.16c-1.64-.892-3.433.902-2.54 2.541l.159.292a.873.873 0 0 1-.52 1.255l-.319.094c-1.79.527-1.79 3.065 0 3.592l.319.094a.873.873 0 0 1 .52 1.255l-.16.292c-.892 1.64.901 3.434 2.541 2.54l.292-.159a.873.873 0 0 1 1.255.52l.094.319c.527 1.79 3.065 1.79 3.592 0l.094-.319a.873.873 0 0 1 1.255-.52l.292.16c1.64.893 3.434-.902 2.54-2.541l-.159-.292a.873.873 0 0 1 .52-1.255l.319-.094c1.79-.527 1.79-3.065 0-3.592l-.319-.094a.873.873 0 0 1-.52-1.255l.16-.292c.893-1.64-.902-3.433-2.541-2.54l-.292.159a.873.873 0 0 1-1.255-.52l-.094-.319zm-2.633.283c.246-.835 1.428-.835 1.674 0l.094.319a1.873 1.873 0 0 0 2.693 1.115l.291-.16c.764-.415 1.6.42 1.184 1.185l-.159.292a1.873 1.873 0 0 0 1.116 2.692l.318.094c.835.246.835 1.428 0 1.674l-.319.094a1.873 1.873 0 0 0-1.115 2.693l.16.291c.415.764-.42 1.6-1.185 1.184l-.291-.159a1.873 1.873 0 0 0-2.693 1.116l-.094.318c-.246.835-1.428.835-1.674 0l-.094-.319a1.873 1.873 0 0 0-2.692-1.115l-.292.16c-.764.415-1.6-.42-1.184-1.185l.159-.291A1.873 1.873 0 0 0 1.945 8.93l-.319-.094c-.835-.246-.835-1.428 0-1.674l.319-.094A1.873 1.873 0 0 0 3.06 4.377l-.16-.292c-.415-.764.42-1.6 1.185-1.184l.292.159a1.873 1.873 0 0 0 2.692-1.115l.094-.319z"/>
</svg></div>
  <div id="" class="button_effect"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-bell" viewBox="0 0 16 16">
  <path d="M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2zM8 1.918l-.797.161A4.002 4.002 0 0 0 4 6c0 .628-.134 2.197-.459 3.742-.16.767-.376 1.566-.663 2.258h10.244c-.287-.692-.502-1.49-.663-2.258C12.134 8.197 12 6.628 12 6a4.002 4.002 0 0 0-3.203-3.92L8 1.917zM14.22 12c.223.447.481.801.78 1H1c.299-.199.557-.553.78-1C2.68 10.2 3 6.88 3 6c0-2.42 1.72-4.44 4.005-4.901a1 1 0 1 1 1.99 0A5.002 5.002 0 0 1 13 6c0 .88.32 4.2 1.22 6z"/>
</svg></div>
    
  </div>
    <div class="modal">

        <img src="https://displate.com/displates/2019-05-02/03a396a69307397f025b15b3c3d1580a_2a1fbcdc78ee34889f7654cc5c60664d.jpg" alt="" id="modal_img">

        <div class="content0">
            <h1 id="modal_name" class="ellipsis_text">Awesome Modal</h1>
            <p id="modal_note">Lorem ipsum dolor, sit amet consectetur adipisicing elit.</p>
            <a id="modal_btn">Read More</a>
        </div>
        <span onclick="hideModal()" class="icon ion-md-close"></span>
    </div>
        
        
            <div id= "search_answer" class="slide_navclass">
 <div id="search_controls">
   <div class ="search_controlbtns button_effect week_controlclass ellipsis_text" id="search_movbtn"> Movies </div>
   <div class ="search_controlbtns button_effect ellipsis_text" id="search_serbtn"> Series </div>
   <div class ="search_controlbtns button_effect ellipsis_text searchanswer_exit"> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16 " fill="currentColor" class="bi bi-x-circle" viewBox="0 0 16 16">
  <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
  <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>
</svg> </div>
     
   </div>
            <div id= "search_inner">
      <div class="answer_top">
        <span id=""  class="answer_exit searchanswer_exit"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#fff" class="bi bi-chevron-left" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z"/></svg>
</span>
<span>
  <input type="text" placeholder="Film, Actors, Genres, Year or Directors " id ="answer_input" autofocus></span>
<span id ="clear_searchbtn"> <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-backspace" viewBox="0 0 16 16">
  <path d="M5.83 5.146a.5.5 0 0 0 0 .708L7.975 8l-2.147 2.146a.5.5 0 0 0 .707.708l2.147-2.147 2.146 2.147a.5.5 0 0 0 .707-.708L9.39 8l2.146-2.146a.5.5 0 0 0-.707-.708L8.683 7.293 6.536 5.146a.5.5 0 0 0-.707 0z"/>
  <path d="M13.683 1a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-7.08a2 2 0 0 1-1.519-.698L.241 8.65a1 1 0 0 1 0-1.302L5.084 1.7A2 2 0 0 1 6.603 1h7.08zm-7.08 1a1 1 0 0 0-.76.35L1 8l4.844 5.65a1 1 0 0 0 .759.35h7.08a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1h-7.08z"/>
</svg>  </span>
      </div> 
      <div class ="search_answertabs" id="answer_movies">
       
      </div>
      <div class ="search_answertabs" id="answer_series"></div>
      <!--
      <div class ="search_answertabs" id="answer_post"></div>
    -->
   
    </div>
          
    </div>
   
   
   
 <div id= "match_answer" class="slide_navclass">
      <div class="answer_top">
        <span id="matchanswer_exit" class="answer_exit"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="#fff" class="bi bi-chevron-left" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z"/></svg>
</span>
</div> 
<div id="match_ansinn" class="column_grid">
  
</div>
    </div>



<div id="tag_bg">
 
 
  <div id="tag_bgtop"> 
   <span class ="button_effect ellipsis_text display_flex align_center " id="tag_exitbtn"> <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#fff" class="bi bi-chevron-left" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z"/></svg> 
    Results For:  </span>
    <span id="tag_headerval" class="ellipsis_text"></span>
  </div>
  
 <div class="search_tagdivs search_tabstyle" id="action_tagdiv"></div>

<!-- end of one section  -->

   
</div>
        
        <div id="add_nomibig" class="display_none">
        <div id="add_nomibg">
          <section class="display_column overflow_yclass">
            <div class = "lit_txt"> Collection </div>
        <section id="add_nomicollect"></section>
        
        <div> 
        <span>  MovieName: </span>
        <span id="nomi_name" class="ellipsis_text">  </span>
        </div>
        
        <div> 
        <span> Movie Id: </span>
        <span id="nomi_idy" class="ellipsis_text">  </span>
        </div>
        
        <div>
          <span id="nomi_category">  </span>
          <span> / </span>
          <span id="nomi_type">  </span>
          <span> / </span>
          <span id="nomi_year">  </span>
        </div>
          
          <div class = "lit_txt"> Image & Tmdb id  </div>
          
        <input id="nomi_imageinput" placeholder="This one will appear" disabled>
        <input id="nomi_idinput" type="number" placeholder="Write the tmdb id" disabled>
          
          <div class = "lit_txt"> Scenes </div>
        <section id="add_nomiscene"></section>
        <input id="nomi_sceneinput" placeholder="Write the scene image src and click enter" disabled>
        
          <div class = "lit_txt"> Moments </div>
        <section id="add_nomimoment"></section>
        <input id="nomi_momentinput" placeholder="Write the moment video src and click enter" disabled>
        
        </section>
        
        
        
        
          <section id = "add_nomisubmit" class="button_effect"> Submit </section>
        </div>
        </div>
        
        
        
        
        
        
        <div id="drive_bg" class="slide_navclass">
           <div class="answer_top">
            
<span id="drive_name">about do</span>
           </div>
          
           <div id="popular_div" class="flex_section drive_inner"></div>
           <div id="upcome_div" class="flex_section drive_inner"></div>
           <div id="theater_div" class="flex_section drive_inner"></div>
           
           
           <div id="drive_controls">
   <div class ="drive_controlbtns button_effect ellipsis_text" id=""> <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#fff" class="bi bi-chevron-left" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z"/></svg> </div>
   <div class ="drive_controlbtns button_effect  ellipsis_text" id=""> <span id="curr_drive">2</span> / <span id="total_drive"> 12 </span> </div>
   <div class ="drive_controlbtns button_effect ellipsis_text" id="">  <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#fff" class="bi bi-chevron-right" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
</svg> </div>
   <div class ="drive_controlbtns button_effect ellipsis_text week_controlclass" id="drive_exit"> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16 " fill="currentColor" class="bi bi-x-circle" viewBox="0 0 16 16"> 
  <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
  <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>
</svg> </div>
  
     
   </div>
       
        </div>
        
        
        <div id="biglatest_bg">
 
 
  <div id="latest_bgtop">
   
  <div id="sort_btn" class="button_effect">
      <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-filter-circle-fill" viewBox="0 0 16 16">
  <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zM3.5 5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1 0-1zM5 8.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5zm2 3a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5z"/>
</svg>
  </div>
  
  
  
  
  </div>
 <div class="latest_bgdivs" id="latest_movdiv"></div>
<!-- end of one section  -->


 <div class="column_grid latest_bgdivs display_none" id="latest_serdiv">
   
 </div>
<!-- end of one section  -->


 <div id="latest_controls">
   <div class ="latest_controlbtns button_effect week_controlclass ellipsis_text" id="latest_movbtn"> Movies </div>
   <div class ="latest_controlbtns button_effect ellipsis_text" id="latest_serbtn"> Series </div>
  
  <div class ="latest_controlbtns button_effect ellipsis_text" id="biglatest_exitbtn"> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16 " fill="currentColor" class="bi bi-x-circle" viewBox="0 0 16 16">
  <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
  <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>
</svg> </div>
     
   </div>
   
    <div id="sort_div">
  <div id="sort_inner">
    <section class="sort_btns selected_sort"> Revenue </section>
    <section class="sort_btns"> Popularity </section>
    <section class="sort_btns"> Release Date </section>
  </div>
  </div>
</div>
        
           <div id= "post_smsbg" class="drop_topclass">
             <div id="sms_inner">
       <div class="answer_top"> 
        <span id="sms_stuffexit"  class="answer_exit"> <svg xmlns="http://www.w3.org/2000/svg" width="45" height="45" fill="currentColor" class="bi bi-x" viewBox="0 0 16 16">
  <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>
</svg>
</span>
<span class="button_effect" id="sms_sendbtn" onclick="performActionBasedOnLastClickedButton()"><svg xmlns="http://www.w3.org/2000/svg" width="35" height="35" fill="currentColor" class="bi bi-send-plane-" viewBox="0 0 16 16">
  <path d="M15.854.146a.5.5 0 0 1 .11.54l-5.819 14.547a.75.75 0 0 1-1.329.124l-3.178-4.995L.643 7.184a.75.75 0 0 1 .124-1.33L15.314.037a.5.5 0 0 1 .54.11ZM6.636 10.07l2.761 4.338L14.13 2.576 6.636 10.07Zm6.787-8.201L1.591 6.602l4.339 2.76 7.494-7.493Z"/>
</svg></span>
</div>         
               
               <div class="content_editable" id="sms_editable" contenteditable="true" data-placeholder="Type something"></div>
               
               <div id="hashtag_div">
                 
               <div id="hashtag_inner"></div>
               </div>
               
             <div id="sms_footer">
               
               <div id="pol_parent">
               </div>
             
               <section>
                 
             <div id="sms_morebtn" onclick="handleClick()" class="button_effect"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-plus-circle" viewBox="0 0 16 16">
  <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
  <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/>
</svg></div>
             <div id="" onclick ="changeFontRandomly('sms_editable')" class="button_effect"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
  <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z"/>
  <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z"/>
</svg></div>
             <div id="" class="button_effect"><label for="blank_sms" class="file-input-label"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-images" viewBox="0 0 16 16"> 
  <path d="M4.502 9a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z"/>
  <path d="M14.002 13a2 2 0 0 1-2 2h-10a2 2 0 0 1-2-2V5A2 2 0 0 1 2 3a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v8a2 2 0 0 1-1.998 2zM14 2H4a1 1 0 0 0-1 1h9.002a2 2 0 0 1 2 2v7A1 1 0 0 0 15 11V3a1 1 0 0 0-1-1zM2.002 4a1 1 0 0 0-1 1v8l2.646-2.354a.5.5 0 0 1 .63-.062l2.66 1.773 3.71-3.71a.5.5 0 0 1 .577-.094l1.777 1.947V5a1 1 0 0 0-1-1h-10z"/>
</svg>
  <input type="file" id="blank_sms" accept="image/jpeg, image/png, image/gif, image/jpg, video/mp4, video/webm, video/ogg" multiple>
</label></div>
  <div id="" class="button_effect" onclick="changeBackgroundColor('sms_inner')"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-palette-pallette" viewBox="0 0 16 16"> 
  <path d="M8 5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zm4 3a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zM5.5 7a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm.5 6a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z"/>
  <path d="M16 8c0 3.15-1.866 2.585-3.567 2.07C11.42 9.763 10.465 9.473 10 10c-.603.683-.475 1.819-.351 2.92C9.826 14.495 9.996 16 8 16a8 8 0 1 1 8-8zm-8 7c.611 0 .654-.171.655-.176.078-.146.124-.464.07-1.119-.014-.168-.037-.37-.061-.591-.052-.464-.112-1.005-.118-1.462-.01-.707.083-1.61.704-2.314.369-.417.845-.578 1.272-.618.404-.038.812.026 1.16.104.343.077.702.186 1.025.284l.028.008c.346.105.658.199.953.266.653.148.904.083.991.024C14.717 9.38 15 9.161 15 8a7 7 0 1 0-7 7z"/>
</svg></div>
<div id="" class="button_effect" onclick="clear_content('sms_editable','blank_smsparent','pol_parent', 'blank_sms')"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-backspace" viewBox="0 0 16 16">
  <path d="M5.83 5.146a.5.5 0 0 0 0 .708L7.975 8l-2.147 2.146a.5.5 0 0 0 .707.708l2.147-2.147 2.146 2.147a.5.5 0 0 0 .707-.708L9.39 8l2.146-2.146a.5.5 0 0 0-.707-.708L8.683 7.293 6.536 5.146a.5.5 0 0 0-.707 0z"/>
  <path d="M13.683 1a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-7.08a2 2 0 0 1-1.519-.698L.241 8.65a1 1 0 0 1 0-1.302L5.084 1.7A2 2 0 0 1 6.603 1h7.08zm-7.08 1a1 1 0 0 0-.76.35L1 8l4.844 5.65a1 1 0 0 0 .759.35h7.08a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1h-7.08z"/>
</svg></div>  
               </section>
               
               
               
               <div id="sms_butt" onclick="handleButtonClick('2')">  
                 <div></div>  
                 <div onclick="add_poldiv()"> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" width="24" height="24" fill="currentColor" class="bi bi-polls-poll-"><path d="M384 32C419.3 32 448 60.65 448 96V416C448 451.3 419.3 480 384 480H64C28.65 480 0 451.3 0 416V96C0 60.65 28.65 32 64 32H384zM128 224C110.3 224 96 238.3 96 256V352C96 369.7 110.3 384 128 384C145.7 384 160 369.7 160 352V256C160 238.3 145.7 224 128 224zM192 352C192 369.7 206.3 384 224 384C241.7 384 256 369.7 256 352V160C256 142.3 241.7 128 224 128C206.3 128 192 142.3 192 160V352zM320 288C302.3 288 288 302.3 288 320V352C288 369.7 302.3 384 320 384C337.7 384 352 369.7 352 352V320C352 302.3 337.7 288 320 288z"/></svg>
                 </div> 
                 <div id="color_switc" onclick="toggleTextColor()">A  </div>
               </div>
               
<!--
             <textarea id="sms_textarea"></textarea>
               -->
               
             </div>
                 <div id="blank_smscover">  
                   <div id="blank_smshead">
                     
                 <div id="blank_smsexit"> <svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" fill="currentColor" class="bi bi-x" viewBox="0 0 16 16">
  <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>
</svg> </div>
                 <div id="blank_smsbtn">  <span ><svg xmlns="http://www.w3.org/2000/svg" width="35" height="35" fill="currentColor" class="bi bi-send-plane-" viewBox="0 0 16 16">
  <path d="M15.854.146a.5.5 0 0 1 .11.54l-5.819 14.547a.75.75 0 0 1-1.329.124l-3.178-4.995L.643 7.184a.75.75 0 0 1 .124-1.33L15.314.037a.5.5 0 0 1 .54.11ZM6.636 10.07l2.761 4.338L14.13 2.576 6.636 10.07Zm6.787-8.201L1.591 6.602l4.339 2.76 7.494-7.493Z"/>
</svg> </div>
                   </div>
                   <div id="blank_caption" data-placeholder="Write Caption..." contenteditable></div>
                 <div id="blank_smsparent"></div>
                 </div>
                 
                 <div id="sms_mybg">
                 <div id="sms_myinner">
                   <section></section>
                   <section></section>
                   <section></section>
                   <section></section>
                   <section></section>
                   <section></section>
                   <section></section>
                   <section></section>
                   <section></section>
                 </div>
                 </div>
                 
                 
             </div>
           </div>
        <!-- end of post_smsbg -->
        
        
        
        
        
        
           <div id= "post_stuffbg" class="slide_navclass">
      <div class="answer_top"> 
        <span id="post_stuffexit"  class="answer_exit"> <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-x" viewBox="0 0 16 16">
  <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>
</svg>
</span>
</div> 
<div class="post_board">
  
<div id="" class="post_typedivs">
<div class="post_textcover" id="">
<textarea id="post_textarea" class="brown_placeholder" placeholder="Write Something"></textarea>
<div id="" class="post_textbtns"></div>
  
</div>
  <div class="post_sendbtns button_effect" id=""> 
  <span ><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-send-plane-" viewBox="0 0 16 16">
  <path d="M15.854.146a.5.5 0 0 1 .11.54l-5.819 14.547a.75.75 0 0 1-1.329.124l-3.178-4.995L.643 7.184a.75.75 0 0 1 .124-1.33L15.314.037a.5.5 0 0 1 .54.11ZM6.636 10.07l2.761 4.338L14.13 2.576 6.636 10.07Zm6.787-8.201L1.591 6.602l4.339 2.76 7.494-7.493Z"/>
</svg></span>
  <span > Post </span>
  </div>
</div>

<div id="" class="post_typedivs">
<div class="post_textcover" id="blank_div">
<div class="content_editable" id="content_editable" contenteditable="true">Type something</div>
<div id="blank_imgparent" class="">
  
</div>
<div id="" class="post_textbtns">
  <span id="" class="button_effect" onclick="changeBackgroundColor('blank_div')"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-eyedropper" viewBox="0 0 16 16">
  <path d="M13.354.646a1.207 1.207 0 0 0-1.708 0L8.5 3.793l-.646-.647a.5.5 0 1 0-.708.708L8.293 5l-7.147 7.146A.5.5 0 0 0 1 12.5v1.793l-.854.853a.5.5 0 1 0 .708.707L1.707 15H3.5a.5.5 0 0 0 .354-.146L11 7.707l1.146 1.147a.5.5 0 0 0 .708-.708l-.647-.646 3.147-3.146a1.207 1.207 0 0 0 0-1.708l-2-2zM2 12.707l7-7L10.293 7l-7 7H2v-1.293z"/>
</svg></span>
  <span id="" class="button_effect"><label for="blank_input" class="file-input-label"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-image" viewBox="0 0 16 16">
  <path d="M6.002 5.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/>
  <path d="M2.002 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2h-12zm12 1a1 1 0 0 1 1 1v6.5l-3.777-1.947a.5.5 0 0 0-.577.093l-3.71 3.71-2.66-1.772a.5.5 0 0 0-.63.062L1.002 12V3a1 1 0 0 1 1-1h12z"/>
</svg>
  <input type="file" id="blank_input" accept="image/jpeg, image/png, image/gif, image/jpg, video/mp4" multiple>
</label></span>

  <span id="" class="button_effect"><label for="blank_video" class="file-input-label"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-camera-video" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M0 5a2 2 0 0 1 2-2h7.5a2 2 0 0 1 1.983 1.738l3.11-1.382A1 1 0 0 1 16 4.269v7.462a1 1 0 0 1-1.406.913l-3.111-1.382A2 2 0 0 1 9.5 13H2a2 2 0 0 1-2-2V5zm11.5 5.175 3.5 1.556V4.269l-3.5 1.556v4.35zM2 4a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h7.5a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1H2z"/>
</svg>
  <input type="file" id="blank_video" name="video" accept="video/mp4,video/webm,video/ogg" max-size="40000000" multiple>
</label></span>


  <span id="" class="" onclick="clear_content('content_editable','blank_pollparent')"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-backspace" viewBox="0 0 16 16">
  <path d="M5.83 5.146a.5.5 0 0 0 0 .708L7.975 8l-2.147 2.146a.5.5 0 0 0 .707.708l2.147-2.147 2.146 2.147a.5.5 0 0 0 .707-.708L9.39 8l2.146-2.146a.5.5 0 0 0-.707-.708L8.683 7.293 6.536 5.146a.5.5 0 0 0-.707 0z"/>
  <path d="M13.683 1a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-7.08a2 2 0 0 1-1.519-.698L.241 8.65a1 1 0 0 1 0-1.302L5.084 1.7A2 2 0 0 1 6.603 1h7.08zm-7.08 1a1 1 0 0 0-.76.35L1 8l4.844 5.65a1 1 0 0 0 .759.35h7.08a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1h-7.08z"/>
</svg></span>
</div>
  
</div>
  <div class="post_sendbtns button_effect" id="blank_postsubmit"> 
  <span ><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-send-plane-" viewBox="0 0 16 16">
  <path d="M15.854.146a.5.5 0 0 1 .11.54l-5.819 14.547a.75.75 0 0 1-1.329.124l-3.178-4.995L.643 7.184a.75.75 0 0 1 .124-1.33L15.314.037a.5.5 0 0 1 .54.11ZM6.636 10.07l2.761 4.338L14.13 2.576 6.636 10.07Zm6.787-8.201L1.591 6.602l4.339 2.76 7.494-7.493Z"/>
</svg></span>
  <span > Post </span>
  </div>
</div>


<div id="" class="post_typedivs">
<div class="post_textcover" id="blank_poll">
<div class="content_editable" id="poll_editable" contenteditable="true">Type something</div>
<div id="blank_pollparent" class="">
  
</div>
<div id="" class="poll_cover">
<div id="" class="post_textbtns">
  <span id="" class="button_effect" onclick="changeBackgroundColor('blank_poll')"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-eyedropper" viewBox="0 0 16 16">    
  <path d="M13.354.646a1.207 1.207 0 0 0-1.708 0L8.5 3.793l-.646-.647a.5.5 0 1 0-.708.708L8.293 5l-7.147 7.146A.5.5 0 0 0 1 12.5v1.793l-.854.853a.5.5 0 1 0 .708.707L1.707 15H3.5a.5.5 0 0 0 .354-.146L11 7.707l1.146 1.147a.5.5 0 0 0 .708-.708l-.647-.646 3.147-3.146a1.207 1.207 0 0 0 0-1.708l-2-2zM2 12.707l7-7L10.293 7l-7 7H2v-1.293z"/>
</svg></span>
  <span id="" class="button_effect"><label for="blank_input" class="file-input-label"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-image" viewBox="0 0 16 16">
  <path d="M6.002 5.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/>
  <path d="M2.002 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2h-12zm12 1a1 1 0 0 1 1 1v6.5l-3.777-1.947a.5.5 0 0 0-.577.093l-3.71 3.71-2.66-1.772a.5.5 0 0 0-.63.062L1.002 12V3a1 1 0 0 1 1-1h12z"/>
</svg>
  <input type="file" id="blank_input" accept="image/jpeg, image/png, image/gif, image/jpg, video/mp4" multiple>
</label></span>

  <span id="" class="button_effect"><label for="blank_video" class="file-input-label"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-camera-video" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M0 5a2 2 0 0 1 2-2h7.5a2 2 0 0 1 1.983 1.738l3.11-1.382A1 1 0 0 1 16 4.269v7.462a1 1 0 0 1-1.406.913l-3.111-1.382A2 2 0 0 1 9.5 13H2a2 2 0 0 1-2-2V5zm11.5 5.175 3.5 1.556V4.269l-3.5 1.556v4.35zM2 4a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h7.5a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1H2z"/>
</svg>
  <input type="file" id="blank_video" name="video" accept="video/mp4,video/webm,video/ogg" max-size="40000000" multiple>
</label></span>

  <span id="" class="button_effect">  <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-plus" viewBox="0 0 16 16">
  <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/></svg></span>


  <span id="" class="" onclick="clear_content('poll_editable','blank_pollparent')"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-backspace" viewBox="0 0 16 16">
  <path d="M5.83 5.146a.5.5 0 0 0 0 .708L7.975 8l-2.147 2.146a.5.5 0 0 0 .707.708l2.147-2.147 2.146 2.147a.5.5 0 0 0 .707-.708L9.39 8l2.146-2.146a.5.5 0 0 0-.707-.708L8.683 7.293 6.536 5.146a.5.5 0 0 0-.707 0z"/>
  <path d="M13.683 1a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-7.08a2 2 0 0 1-1.519-.698L.241 8.65a1 1 0 0 1 0-1.302L5.084 1.7A2 2 0 0 1 6.603 1h7.08zm-7.08 1a1 1 0 0 0-.76.35L1 8l4.844 5.65a1 1 0 0 0 .759.35h7.08a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1h-7.08z"/>
</svg></span>
</div>
 <div id="poll_options">
 <div id=""> Option 1 </div>
   
 </div>
</div>
  
</div>
  <div class="post_sendbtns button_effect" id=""> 
  <span ><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-send-plane-" viewBox="0 0 16 16">
  <path d="M15.854.146a.5.5 0 0 1 .11.54l-5.819 14.547a.75.75 0 0 1-1.329.124l-3.178-4.995L.643 7.184a.75.75 0 0 1 .124-1.33L15.314.037a.5.5 0 0 1 .54.11ZM6.636 10.07l2.761 4.338L14.13 2.576 6.636 10.07Zm6.787-8.201L1.591 6.602l4.339 2.76 7.494-7.493Z"/>
</svg></span>
  <span > Post </span>
  </div>
</div>

<div id="" class="post_typedivs">

<div id="post_colorcomment" class="" contenteditable="true">Type something...</div>  
  <div class="post_sendbtns button_effect" id=""> Send </div>
  
</div>

<div id="" class="post_typedivs">

<div id="post_quespoll" class="">
  
  <section id="ques_pollsec">
    
<div id="ques_pollprof" class="">
<div id="ques_pollimg" class=""></div>
 <div> Ask a Question </div>
</div>
    <textarea class="" id="ques_polltext"></textarea>
  </section>
  <section id="opt_pollsec"></section>
  
  
  
</div>
  <div class="post_sendbtns button_effect" id=""> Send </div>
  
</div>


<textarea id="" class="post_typedivs"></textarea>
<textarea id="" class="post_typedivs"></textarea>
  
</div>
        <!--
<div id="post_footer"> 
  <span class="" id=""> <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" width="24" height="24" fill="currentColor" class="bi bi-polls-poll-"><path d="M384 32C419.3 32 448 60.65 448 96V416C448 451.3 419.3 480 384 480H64C28.65 480 0 451.3 0 416V96C0 60.65 28.65 32 64 32H384zM128 224C110.3 224 96 238.3 96 256V352C96 369.7 110.3 384 128 384C145.7 384 160 369.7 160 352V256C160 238.3 145.7 224 128 224zM192 352C192 369.7 206.3 384 224 384C241.7 384 256 369.7 256 352V160C256 142.3 241.7 128 224 128C206.3 128 192 142.3 192 160V352zM320 288C302.3 288 288 302.3 288 320V352C288 369.7 302.3 384 320 384C337.7 384 352 369.7 352 352V320C352 302.3 337.7 288 320 288z"/></svg></span>
  <span class="" id=""><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-image" viewBox="0 0 16 16">
  <path d="M6.002 5.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/>
  <path d="M2.002 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2h-12zm12 1a1 1 0 0 1 1 1v6.5l-3.777-1.947a.5.5 0 0 0-.577.093l-3.71 3.71-2.66-1.772a.5.5 0 0 0-.63.062L1.002 12V3a1 1 0 0 1 1-1h12z"/>
</svg></span>
  <span class="" id=""><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-textarea-t" viewBox="0 0 16 16">
  <path d="M1.5 2.5A1.5 1.5 0 0 1 3 1h10a1.5 1.5 0 0 1 1.5 1.5v3.563a2 2 0 0 1 0 3.874V13.5A1.5 1.5 0 0 1 13 15H3a1.5 1.5 0 0 1-1.5-1.5V9.937a2 2 0 0 1 0-3.874V2.5zm1 3.563a2 2 0 0 1 0 3.874V13.5a.5.5 0 0 0 .5.5h10a.5.5 0 0 0 .5-.5V9.937a2 2 0 0 1 0-3.874V2.5A.5.5 0 0 0 13 2H3a.5.5 0 0 0-.5.5v3.563zM2 7a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm12 0a1 1 0 1 0 0 2 1 1 0 0 0 0-2z"/>
  <path d="M11.434 4H4.566L4.5 5.994h.386c.21-1.252.612-1.446 2.173-1.495l.343-.011v6.343c0 .537-.116.665-1.049.748V12h3.294v-.421c-.938-.083-1.054-.21-1.054-.748V4.488l.348.01c1.56.05 1.963.244 2.173 1.496h.386L11.434 4z"/>
</svg></span>
  <span class="" id=""></span>
</div>
        -->

      </div> 
        <!-- end of post_stuffbg -->
        
        <div id="no_channelbg">
        <div id="no_channelinner">
          
        <div id="no_channeltext"> You have no channel or your channel has been deleted. </div>
        <div id="no_channelbutton" class="button_effect" onclick ="create_channelfunc('channel')"> Create Channel </div>
          
          
        </div>
        </div>
        
        
        
        <div id="channel_formbg" class="drop_topclass">
          <div id="channelform_inner">
          <div id="channelform_controls">
          
   <div class ="form_controlbtns button_effect  ellipsis_text" id="channel_formbtn"> Submit </div>
   <div class ="form_controlbtns button_effect ellipsis_text" id="channel_formexit"> Discard </div>
   
     
   </div>
            <div id="channel_form">
              <section id="nnelform_top">
                <div id="nnelform_img">
<!-- Wrap the file input in a label element -->
<label for="imageInput" class="file-input-label">
  <svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" fill="#fff" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg>
  <input type="file" id="imageInput" accept="image/jpeg, image/png, image/gif, image/jpg">
</label>


</div>
                <input id="nnelform_name" class="white_placeholder" placeholder=" Channel's Name" maxlength="50">
              </section>
              <textarea id="nnelform_text" class="white_placeholder" placeholder="Add Channel's Description" maxlength="10000"></textarea>
              <textarea id="nnelform_tag" class="white_placeholder" placeholder="Add Channel's tags" maxlength="1000"></textarea>
              
              
              
              
            </div>
        </div>
        </div>
        
        
        
        <div class="custom_alert" id="custom_alertsuccess">
          <div class="display_flex">
          <div>
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-check-circle" viewBox="0 0 16 16">
  <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
  <path d="M10.97 4.97a.235.235 0 0 0-.02.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-1.071-1.05z"/>
</svg>
</div>
          <div class="display_column">
            <span class="bold_text"> Success </span>
            <span id="custom_messagesus"> Success </span>
          </div>
</div>
          <div class ="custom_alertexit"> <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-x" viewBox="0 0 16 16">
  <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>
</svg></div>
        </div>
        
        <div class="custom_alert" id="custom_alertfailure">
          <div class="display_flex">
          <div>
         <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-x-circle" viewBox="0 0 16 16">
  <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
  <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>
</svg>
</div>
          <div class="display_column">
            <span class="bold_text"> Error </span>
            <span id="custom_messagefail"> </span>
          </div>
</div>
          <div class ="custom_alertexit"> <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-x" viewBox="0 0 16 16">
  <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>
</svg></div>
        </div>
      
        
        <div id="mygroup_list" class ="pick_topclass">
        <div id="grouplist_inner">
        <div id="grouplist_top"> 
        <span id="grouplist_exit"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="#fff" class="bi bi-chevron-left" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z"/></svg></span>
        <span id=""> Your Group List </span>
        </div>
        <div id="grouplist_val"></div>
          
          
          
          <!--
        <div id="nel_setdiv">
          <div id="" class="display_flex align_center">
            <span> <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-shop-window" viewBox="0 0 16 16">
  <path d="M2.97 1.35A1 1 0 0 1 3.73 1h8.54a1 1 0 0 1 .76.35l2.609 3.044A1.5 1.5 0 0 1 16 5.37v.255a2.375 2.375 0 0 1-4.25 1.458A2.371 2.371 0 0 1 9.875 8 2.37 2.37 0 0 1 8 7.083 2.37 2.37 0 0 1 6.125 8a2.37 2.37 0 0 1-1.875-.917A2.375 2.375 0 0 1 0 5.625V5.37a1.5 1.5 0 0 1 .361-.976l2.61-3.045zm1.78 4.275a1.375 1.375 0 0 0 2.75 0 .5.5 0 0 1 1 0 1.375 1.375 0 0 0 2.75 0 .5.5 0 0 1 1 0 1.375 1.375 0 1 0 2.75 0V5.37a.5.5 0 0 0-.12-.325L12.27 2H3.73L1.12 5.045A.5.5 0 0 0 1 5.37v.255a1.375 1.375 0 0 0 2.75 0 .5.5 0 0 1 1 0zM1.5 8.5A.5.5 0 0 1 2 9v6h12V9a.5.5 0 0 1 1 0v6h.5a.5.5 0 0 1 0 1H.5a.5.5 0 0 1 0-1H1V9a.5.5 0 0 1 .5-.5zm2 .5a.5.5 0 0 1 .5.5V13h8V9.5a.5.5 0 0 1 1 0V13a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V9.5a.5.5 0 0 1 .5-.5z"/>
</svg></span>
            <span> View Channel </span>
          </div>
          <div id="" class="display_flex align_center " onclick="edit_channelfunc()">
            <span> <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
  <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z"/>
  <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z"/>
</svg></span>
            <span> Edit Channel </span>
          </div>
          <div id="" class="display_flex align_center">
            <span> <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
  <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6Z"/>
  <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1ZM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118ZM2.5 3h11V2h-11v1Z"/>
</svg> </span>
            <span> Delete Channel </span>
          </div>
          
        </div>
          -->
          
        </div>
        </div>
        
        
        <!--   opera    -->
   <div id="opera_bg">
   <div id="opera_inner">
   <div id="opera_board">
     <section class="open_billboard"></section>
     <section class="open_billboard" id="opera_vidsection">
     </section>
   </div>
   <div id="opera_image"></div>
   <div id="opera_foot">
   <div id="opera_oneleg" class="display_column">
    <span id="opera_name" class="ellipsis_text"> Interview with the vampire </span>
    
    <div class="opera_more">
      
    <span id="opera_detail"> 
    <span id="opera_year"> 2022 </span> 
    <span id="opera_pg"> 13+ </span>
    <span id="opera_imdb"> 6.5 </span>
    <span id="opera_seas">  </span>
    </span>
    <div class="display_flex">
       <div id="opera_collectbtn" class="">
          <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-patch-plus" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8 5.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V10a.5.5 0 0 1-1 0V8.5H6a.5.5 0 0 1 0-1h1.5V6a.5.5 0 0 1 .5-.5z"/><path d="m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z"/>
</svg>
        </div>
        <div id="opera_sharebtn" class="overall_btns">
          <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" class="bi bi-reply" viewBox="0 0 16 16"><path d="M6.598 5.013a.144.144 0 0 1 .202.134V6.3a.5.5 0 0 0 .5.5c.667 0 2.013.005 3.3.822.984.624 1.99 1.76 2.595 3.876-1.02-.983-2.185-1.516-3.205-1.799a8.74 8.74 0 0 0-1.921-.306 7.404 7.404 0 0 0-.798.008h-.013l-.005.001h-.001L7.3 9.9l-.05-.498a.5.5 0 0 0-.45.498v1.153c0 .108-.11.176-.202.134L2.614 8.254a.503.503 0 0 0-.042-.028.147.147 0 0 1 0-.252.499.499 0 0 0 .042-.028l3.984-2.933zM7.8 10.386c.068 0 .143.003.223.006.434.02 1.034.086 1.7.271 1.326.368 2.896 1.202 3.94 3.08a.5.5 0 0 0 .933-.305c-.464-3.71-1.886-5.662-3.46-6.66-1.245-.79-2.527-.942-3.336-.971v-.66a1.144 1.144 0 0 0-1.767-.96l-3.994 2.94a1.147 1.147 0 0 0 0 1.946l3.994 2.94a1.144 1.144 0 0 0 1.767-.96v-.667z"/></svg>
        </div>
        <div id="opera_listbtn" class="">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"   width="16" height="16"> <g> <path fill="#0001" d="M0 0h24v24H0z"/> <path fill="currentColor" d="M2 18h10v2H2v-2zm0-7h20v2H2v-2zm0-7h20v2H2V4zm16 14v-3h2v3h3v2h-3v3h-2v-3h-3v-2h3z"/> </g> </svg>
        </div>
        <div id="opera_bellbtn" class="">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bookmark-plus" viewBox="0 0 16 16"><path d="M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.777.416L8 13.101l-5.223 2.815A.5.5 0 0 1 2 15.5V2zm2-1a1 1 0 0 0-1 1v12.566l4.723-2.482a.5.5 0 0 1 .554 0L13 14.566V2a1 1 0 0 0-1-1H4z"/><path d="M8 4a.5.5 0 0 1 .5.5V6H10a.5.5 0 0 1 0 1H8.5v1.5a.5.5 0 0 1-1 0V7H6a.5.5 0 0 1 0-1h1.5V4.5A.5.5 0 0 1 8 4z"/></svg>
        </div>
    </div>
    </div>
   </div>
   <div id="opera_twoleg">
         <a id="opera_btn" class="ellipsis_text">Read More</a>
   </div>
     
   </div>
     
   </div>
   </div>
        
        <div id="chan_searchtab" class="slide_navclass">
  <div id="chan_top">
    <div id="chan_exit"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#fff" class="bi bi-chevron-left" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z"/></svg></div>  
    <input id="chan_input" placeholder="Search for Channels and posts">
  </div>   
    <div id="chan_results" class="column_grid"></div>
  
  
  
  
  
        </div>
        
   <div id="loader">
   <div class ="arr"></div>
     
   </div>
        
         <div id="film_bgcom" class="slide_navclass"> 
        <img class="film_bgpop" id="enlarge_img">
          
                    
        <video class="film_bgpop" onclick="video_func()" id="enlarge_video">
          
        </video>              
        <div id="enlarge_contbg">
        <div id="enlarge_continner">
          
        </div>
        </div>
        
        
        
        
         </div>                 
        
        
        <div id="amenities_bg" class="slide_navclass">
          <div id="amenities_inner" class="">
              <div id="amenities_controls">
   <div class ="amenities_controlbtns button_effect ellipsis_text week_controlclass" id="collecttab_btn"> Collections </div>  
   <div class ="amenities_controlbtns button_effect  ellipsis_text" id="recomtab_btn"> Recommendations </div>
   <div class ="amenities_controlbtns button_effect ellipsis_text" id="plisttab_btn"> Playlists </div>
   <div class ="amenities_controlbtns button_effect ellipsis_text" id="amen_exitbtn"> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16 " fill="currentColor" class="bi bi-x-circle" viewBox="0 0 16 16">
  <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
  <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>
</svg> </div>
     
   </div>
            <div class="amentities_tabs" id="collection_tab">
              <div class="amen_head">
           <span class="ellipsis_text"> My Collections </span>
           <span></span>
         </div>
         <div class="amen_tabinner flex_section" id="collect_inner"></div>   
            </div>
            <!-- end of section -->
            
            
            <div class="amentities_tabs" id="recom_tab">
            
         <div class="amen_head">
           <span class="ellipsis_text"> My Recommendations </span>
           <span class ="button_effect" onclick="open_adddiv('email')"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-person-add-user-add" viewBox="0 0 16 16">
  <path d="M12.5 16a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7Zm.5-5v1h1a.5.5 0 0 1 0 1h-1v1a.5.5 0 0 1-1 0v-1h-1a.5.5 0 0 1 0-1h1v-1a.5.5 0 0 1 1 0Zm-2-6a3 3 0 1 1-6 0 3 3 0 0 1 6 0ZM8 7a2 2 0 1 0 0-4 2 2 0 0 0 0 4Z"/>
  <path d="M8.256 14a4.474 4.474 0 0 1-.229-1.004H3c.001-.246.154-.986.832-1.664C4.484 10.68 5.711 10 8 10c.26 0 .507.009.74.025.226-.341.496-.65.804-.918C9.077 9.038 8.564 9 8 9c-5 0-6 3-6 4s1 1 1 1h5.256Z"/>
</svg></span>
         </div>
         <div class="amen_tabinner" id="recom_inner"></div>
            
            </div>
            <!-- end of section -->
            
            <div class="amentities_tabs" id="playlist_tab">
            
              <div class="amen_head">
           <span class="ellipsis_text"> My Playlists </span>
           <span class ="button_effect" onclick="open_adddiv('playlist')"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"   width="24" height="24"> <g> <path fill="#0001" d="M0 0h24v24H0z"/> <path fill="currentColor" d="M2 18h10v2H2v-2zm0-7h20v2H2v-2zm0-7h20v2H2V4zm16 14v-3h2v3h3v2h-3v3h-2v-3h-3v-2h3z"/> </g> </svg></span>
         </div>
         <div class="amen_tabinner" id="playlist_inner"></div>
            
            </div>
            <!-- end of section -->
           
            
            
            
          </div>
        </div>
        
   <div id="add_newsoption">
     
     <div id="news_optioninner">
       
       <section class="" id="spec1_div" onclick="create_news('spec1')">
         <div id="spec1_box"></div>
         <div id="spec1_title"></div>
         <div id="spec1_prof">
           <div id="spec1_img"></div>
           <div id="spec1_name"></div>
         </div>
       </section>
       <section class="" id="spec2_div" onclick="create_news('spec2')">
         <div id="spec2_bron">
           <div id="spec2_title"></div>
           <div id="spec2_name"></div>
         </div>
         <div id="spec2_img"></div>
       </section>
       <section class="" id="spec3_div" onclick="create_news('spec3')">
         <div id="spec3_box">
         <div id="three_box1"></div>
         <div id="three_box2"></div>
         </div>
         <div id="spec3_prof">
         <div id="spec3_img"></div>
         <div id="spec3_title"></div>
           
         </div>
       </section>
       <section class="" id="spec3_div" onclick="create_news('spec4')">
         <div id="spec3_box">
         <div id="four_box1"></div>
         <div id="four_box2"></div>
         <div id="four_box3"></div>
         </div>
         <div id="spec3_prof">
         <div id="spec3_img"></div>
         <div id="spec3_title"></div>
           
         </div>
       </section>
       <section class="" id="spec5_div" onclick="create_news('spec5')">
         <div id="spec5_box">  
           <div></div>
           <div></div>
           <div></div>
           <div></div>
         </div>
         <div id="spec3_prof">
         <div id="spec3_img"></div>
         <div id="spec3_title"></div>
           
         </div>
         
       </section>
       
       
     </div>
   </div>
        
        <div id="create_newsbg" class="slide_avclass">
          <div id="create_newsexit">
            <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-x" viewBox="0 0 16 16">
  <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>
</svg>
          </div>
          <div id="create_newsinner">
      
        <section class="" id="spec1_div" onclick="create_news('spec1')">
         <div id="spec1_box"></div>
         <div id="spec1_title"></div>
         <div id="spec1_prof">
           <div id="spec1_img"></div>
           <div id="spec1_name"></div>
         </div>
       </section>
      
      
              
          </div>
        </div>
        
        
        <div class="add_emaildivs" id="add_emaildiv"> 
    
        <div class="input-group">
  <input class="input" autocomplete="off" id="add_emailval">

    <label class="placeholder"><I class="fa fa-envelope"></i></label>       

    </div>
 <div class="toggle-btn">
    <span class="chevron"></span>
  </div>
  <div class="content">
    <p> To add a user as your pal, you are to write the user's email and click enter. You will then confirm the request and can start sending movie recommendations to your pal.</p>
  </div>
  </div>
        <div class="add_emaildivs" id="add_listdiv"> 
    
        <div class="input-group">
  <input class="input" autocomplete="off" id="add_listval" maxlength="40">

    <label class="placeholder"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"   width="16" height="16"> <g> <path fill="#0001" d="M0 0h24v24H0z"/> <path fill="currentColor" d="M2 18h10v2H2v-2zm0-7h20v2H2v-2zm0-7h20v2H2V4zm16 14v-3h2v3h3v2h-3v3h-2v-3h-3v-2h3z"/> </g> </svg></label>    

    </div>
 <div class="toggle-btn">
    <span class="chevron"></span>
  </div>
  <div class="content">
    <p> Create a new movie playlist.</p>
  </div>
  </div>
        
        
        <div id="confirm_bg">
        <div class="confirm_inner">
        <div id="confirm_text">
          
        </div>
        <div class="confirm_btns">
          <div class="confirm_opt button_effect" id="confirm_no"> Cancel </div>
          <div class="confirm_opt button_effect" id="confirm_yes"> Confirm </div>
        </div>
          
        </div>
        </div>
        
        <div id="addmoment_bg" class="pick_topclass">
        <div class="official_inner">
        <div id="addmoment_text">
          
        </div>
        <div class="confirm_btns">
          <div class="confirm_opt button_effect" id="confirm_decline"> Cancel </div>
          <div class="confirm_opt button_effect" id="confirm_accept">  <label for="addmoment_input" class="file-input-label"> Confirm 
  <input type="file" id="addmoment_input" accept="image/jpeg, image/png, image/gif, image/jpg, video/mp4,video/webm,video/ogg" multiple>
</label> </div>   
        </div>
          
        </div>
        </div>
        
        <div id="addcloset_bg" class="pick_topclass">
        <div class="official_inner">
        <div id="addcloset_text">
          
        </div>
        <div class="confirm_btns">
          <div class="confirm_opt button_effect" id="confirm_nega"> Cancel </div>
          <div class="confirm_opt button_effect" id="confirm_posi">  <label for="addcloset_input" class="file-input-label"> Confirm 
  <input type="file" id="addcloset_input" accept="image/jpeg, image/png, image/gif, image/jpg, video/mp4,video/webm,video/ogg" multiple>
</label> </div>   
        </div>
          
        </div>
        </div>
        
        <div id="confirm_bgtwo">
        <div class="confirm_inner">
        <div id="confirm_texttwo">
          
        </div>
        <div class="confirm_btns">
          <div class="confirm_opt button_effect" id="confirm_notwo"> Cancel </div>
          <div class="confirm_opt button_effect" id="confirm_yestwo"> Confirm </div>
        </div>
          
        </div>
        </div>
        
        <div id="alert_bg" class="slide_navclass">
        <div id="alert_inner">
          <div id="alert_icon"></div>
          <div id="alert_text"></div>
        </div>
        </div>
        
        <div id="share_bg">
        <div id="share_inner">
          <section>
            <div id="share_profilebox">
            <div id="share_image"></div>
            <div id="share_name"> edurumunachi007@gmail.com </div>
              
            </div>  
            <div id="share_lilbtn"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-send-plane-" viewBox="0 0 16 16"><path d="M15.854.146a.5.5 0 0 1 .11.54l-5.819 14.547a.75.75 0 0 1-1.329.124l-3.178-4.995L.643 7.184a.75.75 0 0 1 .124-1.33L15.314.037a.5.5 0 0 1 .54.11ZM6.636 10.07l2.761 4.338L14.13 2.576 6.636 10.07Zm6.787-8.201L1.591 6.602l4.339 2.76 7.494-7.493Z"/></svg>
</div>
          </section>
          <section>
            <div id="share_profilebox">
            <div id="share_image"></div>
            <div id="share_name"> edurumunachi007@gmail.com </div>
              
            </div>  
            <div id="share_lilbtn"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-send-plane-" viewBox="0 0 16 16"><path d="M15.854.146a.5.5 0 0 1 .11.54l-5.819 14.547a.75.75 0 0 1-1.329.124l-3.178-4.995L.643 7.184a.75.75 0 0 1 .124-1.33L15.314.037a.5.5 0 0 1 .54.11ZM6.636 10.07l2.761 4.338L14.13 2.576 6.636 10.07Zm6.787-8.201L1.591 6.602l4.339 2.76 7.494-7.493Z"/></svg>
</div>
          </section>
          <section>
            <div id="share_profilebox">
            <div id="share_image"></div>
            <div id="share_name"> edurumunachi007@gmail.com </div>
              
            </div>  
            <div id="share_lilbtn"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-send-plane-" viewBox="0 0 16 16"><path d="M15.854.146a.5.5 0 0 1 .11.54l-5.819 14.547a.75.75 0 0 1-1.329.124l-3.178-4.995L.643 7.184a.75.75 0 0 1 .124-1.33L15.314.037a.5.5 0 0 1 .54.11ZM6.636 10.07l2.761 4.338L14.13 2.576 6.636 10.07Zm6.787-8.201L1.591 6.602l4.339 2.76 7.494-7.493Z"/></svg>
</div>
          </section>
          <section>
            <div id="share_profilebox">
            <div id="share_image"></div>
            <div id="share_name"> edurumunachi007@gmail.com </div>
              
            </div>  
            <div id="share_lilbtn"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-send-plane-" viewBox="0 0 16 16"><path d="M15.854.146a.5.5 0 0 1 .11.54l-5.819 14.547a.75.75 0 0 1-1.329.124l-3.178-4.995L.643 7.184a.75.75 0 0 1 .124-1.33L15.314.037a.5.5 0 0 1 .54.11ZM6.636 10.07l2.761 4.338L14.13 2.576 6.636 10.07Zm6.787-8.201L1.591 6.602l4.339 2.76 7.494-7.493Z"/></svg>
</div>
          </section>
          <section>
            <div id="share_profilebox">
            <div id="share_image"></div>
            <div id="share_name"> edurumunachi007@gmail.com </div>
              
            </div>  
            <div id="share_lilbtn"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-send-plane-" viewBox="0 0 16 16"><path d="M15.854.146a.5.5 0 0 1 .11.54l-5.819 14.547a.75.75 0 0 1-1.329.124l-3.178-4.995L.643 7.184a.75.75 0 0 1 .124-1.33L15.314.037a.5.5 0 0 1 .54.11ZM6.636 10.07l2.761 4.338L14.13 2.576 6.636 10.07Zm6.787-8.201L1.591 6.602l4.339 2.76 7.494-7.493Z"/></svg>
</div>
          </section>
          <section>
            <div id="share_profilebox">
            <div id="share_image"></div>
            <div id="share_name"> edurumunachi007@gmail.com </div>
              
            </div>  
            <div id="share_lilbtn"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-send-plane-" viewBox="0 0 16 16"><path d="M15.854.146a.5.5 0 0 1 .11.54l-5.819 14.547a.75.75 0 0 1-1.329.124l-3.178-4.995L.643 7.184a.75.75 0 0 1 .124-1.33L15.314.037a.5.5 0 0 1 .54.11ZM6.636 10.07l2.761 4.338L14.13 2.576 6.636 10.07Zm6.787-8.201L1.591 6.602l4.339 2.76 7.494-7.493Z"/></svg>
</div>
          </section>
          <section>
            <div id="share_profilebox">
            <div id="share_image"></div>
            <div id="share_name"> edurumunachi007@g  white-space:nowrap ;
    overflow: hidden ;
    text-overflow: ellipsis;mail.com </div>
              
            </div>  
            <div id="share_lilbtn"><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-send-plane-" viewBox="0 0 16 16"><path d="M15.854.146a.5.5 0 0 1 .11.54l-5.819 14.547a.75.75 0 0 1-1.329.124l-3.178-4.995L.643 7.184a.75.75 0 0 1 .124-1.33L15.314.037a.5.5 0 0 1 .54.11ZM6.636 10.07l2.761 4.338L14.13 2.576 6.636 10.07Zm6.787-8.201L1.591 6.602l4.339 2.76 7.494-7.493Z"/></svg>
</div>
          </section>
        </div>
        </div>
        
        
        <!--   comment_tabbg          Comment           -->
        <div id="comment_tabbg" class="slide_navclass">
          
        <div id="comment_tabinner">
       
        <div id="comment_middle">
          <section>
            <nav> 
            <header></header>
            <div class="display_flex display_column">
              
            <div class="twit_username">Name is on </div>
            <div class="comment_msg"> This is Lorem ipsum dolor sit amet consectetur, adipisicing elit. Provident delectus porro at sed expedita magni, corrupti rerum ex corporis ad.</div>
            <div class="comment_below">
              <span class="comment_date">4 mins </span>
              <span><svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" class="bi bi-reply" viewBox="0 0 16 16">
  <path d="M6.598 5.013a.144.144 0 0 1 .202.134V6.3a.5.5 0 0 0 .5.5c.667 0 2.013.005 3.3.822.984.624 1.99 1.76 2.595 3.876-1.02-.983-2.185-1.516-3.205-1.799a8.74 8.74 0 0 0-1.921-.306 7.404 7.404 0 0 0-.798.008h-.013l-.005.001h-.001L7.3 9.9l-.05-.498a.5.5 0 0 0-.45.498v1.153c0 .108-.11.176-.202.134L2.614 8.254a.503.503 0 0 0-.042-.028.147.147 0 0 1 0-.252.499.499 0 0 0 .042-.028l3.984-2.933zM7.8 10.386c.068 0 .143.003.223.006.434.02 1.034.086 1.7.271 1.326.368 2.896 1.202 3.94 3.08a.5.5 0 0 0 .933-.305c-.464-3.71-1.886-5.662-3.46-6.66-1.245-.79-2.527-.942-3.336-.971v-.66a1.144 1.144 0 0 0-1.767-.96l-3.994 2.94a1.147 1.147 0 0 0 0 1.946l3.994 2.94a1.144 1.144 0 0 0 1.767-.96v-.667z"/>
</svg></span>
              <span><svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16"><path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6Z"/><path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1ZM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118ZM2.5 3h11V2h-11v1Z"/></svg></span>
            </div>
            </div>
            </nav>
            <aside>  
            <div>  
            <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-heart" viewBox="0 0 16 16">
  <path d="m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z"/>
</svg>
</div>
            <div>15</div>
</aside>
          </section>
        
          
        </div>
        <div id="comment_bot">
        <div id="comment_inputdiv">
           <div class="" id="comment_text" contenteditable="true" data-placeholder="Type something"></div>
         
             <div id="comment_send" class="button_effect" ><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-caret-right-fill" viewBox="0 0 16 16">
  <path d="m12.14 8.753-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z"/>
</svg></div> 
        </div>
        </div>
      
      
        
        </div>
        
        <div id="match_results" class="slide_navclass display_column">
          
         <div id="change_matchdiv"> 
         <p> Hollywood </p>
         <p> Hollywood </p>
         <p> Hollywood </p>
         <p> Hollywood </p>
         <p> Hollywood </p>
         <p> Hollywood </p>
         <p> Hollywood </p>
         <p> Hollywood </p>
         <p> Hollywood </p>
         </div>
       
       
          <!--
       <div class="answer_top">


</div> 
-->
 <div id="match_controls">
   <div class ="match_controlbtns button_effect week_controlclass ellipsis_text" id="match_movbtn"> Movies </div>
   <div class ="match_controlbtns button_effect  ellipsis_text" id="match_serbtn"> Series </div>
   <div class ="match_controlbtns button_effect ellipsis_text" id="change_matchtype"> All </div>
   <div class ="match_controlbtns button_effect ellipsis_text" id="matchresults_exit"> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16 " fill="currentColor" class="bi bi-x-circle" viewBox="0 0 16 16">
  <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
  <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>
</svg> </div>
   
   </div>
   <div class="match_resdivs" id="match_resmov"></div>
   <div class="match_resdivs" id="match_resser"></div>
   
        </div>
        
        <div id="share_playlistdiv">
          
          
        </div>
        
        
            <!-- loader   load    -->
        
          <div id="loader_bgcom"> 
        <div id="loader_bgpop">
             <?xml version="1.0" encoding="utf-8"?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="margin: auto; background: none; display: block; shape-rendering: auto;" width="44px" height="44px" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid">
<g transform="rotate(0 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#e67e22">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.9166666666666666s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(30 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#e67e22">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.8333333333333334s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(60 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#e67e22">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.75s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(90 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#e67e22">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.6666666666666666s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(120 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#e67e22">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.5833333333333334s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(150 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#e67e22">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.5s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(180 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#e67e22">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.4166666666666667s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(210 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#e67e22">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.3333333333333333s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(240 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#e67e22">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.25s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(270 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#e67e22">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.16666666666666666s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(300 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#e67e22">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.08333333333333333s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(330 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#e67e22">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="0s" repeatCount="indefinite"></animate>
  </rect>
</g>
<!-- [ldio] generated by https://loading.io/ --></svg>
        </div>                  
         </div>   
        
 <div id="post_makertab" class="drop_topclass">
   <div id="post_makerinner">
         <div class="answer_top"> 
        <span id="post_makerexit"  class="answer_exit"> <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-x" viewBox="0 0 16 16">
  <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>
</svg>
</span>
<span class="button_effect" id="post_sendbtn" nclick="performActionBasedOnLastClickedButton()"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-send-plane-" viewBox="0 0 16 16">
  <path d="M15.854.146a.5.5 0 0 1 .11.54l-5.819 14.547a.75.75 0 0 1-1.329.124l-3.178-4.995L.643 7.184a.75.75 0 0 1 .124-1.33L15.314.037a.5.5 0 0 1 .54.11ZM6.636 10.07l2.761 4.338L14.13 2.576 6.636 10.07Zm6.787-8.201L1.591 6.602l4.339 2.76 7.494-7.493Z"/>
</svg></span>
</div>       
     
   </div>
      </div>  
        
        
  
          <div id="stack_loaderbg">
          <div id="stack_loaderdiv">
              <div id="">
             <?xml version="1.0" encoding="utf-8"?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="margin: auto; background: none; display: block; shape-rendering: auto;" width="44px" height="44px" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid">
<g transform="rotate(0 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#fff">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.9166666666666666s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(30 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#fff">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.8333333333333334s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(60 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#fff">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.75s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(90 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#fff">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.6666666666666666s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(120 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#fff">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.5833333333333334s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(150 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#fff">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.5s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(180 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#fff">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.4166666666666667s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(210 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#fff">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.3333333333333333s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(240 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#fff">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.25s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(270 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#fff">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.16666666666666666s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(300 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#fff">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.08333333333333333s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(330 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#fff">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="0s" repeatCount="indefinite"></animate>
  </rect>
</g>
<!-- [ldio] generated by https://loading.io/ --></svg>
        </div>     
              <div id="loader_text"> Saving...</div>     
          </div>
          </div>
        
        <!--  Crew     people   actor   cast   -->
        <div id="crew_bg" class="slide_navclass">
        <div id="crew_inner">  
        <div id="crew_board">
          <!--
          <section></section>
          <section id="gggg"></section>
          <section></section>
          -->
        </div>
        <div id="crew_table">
          <div class="display_flex">
            
          <div id="crew_prof"></div>
          <div id="crew_detail">
            <span id="crew_name"> Poprizon person </span>
            <span id="crew_department"> acting </span>
          </div>
          </div>
          <div id="crew_bell"> <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-bookmark-plus-fill" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M2 15.5V2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.74.439L8 13.069l-5.26 2.87A.5.5 0 0 1 2 15.5zm6.5-11a.5.5 0 0 0-1 0V6H6a.5.5 0 0 0 0 1h1.5v1.5a.5.5 0 0 0 1 0V7H10a.5.5 0 0 0 0-1H8.5V4.5z"/>
</svg></div>
        </div>
        <div id="crew_more">
        <div class = "lit_topic"> Biography </div>
        <div class="lit_note" id="crew_bio">
          Lorem ipsum dolor sit amet consectetur, adipisicing elit. Provident delectus porro at sed expedita magni, corrupti rerum ex corporis ad.Lorem ipsum dolor sit amet consectetur, adipisicing elit. Provident delectus porro at sed expedita magni, corrupti rerum ex corporis ad.Lorem ipsum dolor sit amet consectetur, adipisicing elit. Provident delectus porro at sed expedita magni, corrupti rerum ex corporis ad.Lorem ipsum dolor sit amet consectetur, adipisicing elit. Provident delectus porro at sed expedita magni, corrupti rerum ex corporis ad.Lorem ipsum dolor sit amet consectetur, adipisicing elit. Provident delectus porro at sed expedita magni, corrupti rerum ex corporis ad.
     
        </div>
        <div class = "lit_topic"> Birthday </div>
        <div class="lit_note" id="crew_birthdate"> 18th May, 2005  </div>
        <div id="crew_deathdiv">
          
        <div class = "lit_topic"> Deathday </div>
        <div class="lit_note" id="crew_deathdate"> 18th May, 2095  </div>
        </div>
        <div class = "lit_topic"> Place of Birth </div>
        <div class="lit_note" id="crew_birthplace"> Lagos, Nigeria </div>
        <div class = "lit_topic"> Also Known as </div>
        <div class="lit_note" id="crew_aka"> Christmas, IC³  </div>
        
        
        </div>
        <div id="crew_extra"></div>
        
        
        
        
        
        </div>
        <div id="crew_workdiv" class="slide_navclass flex_section">
          
        </div>
        
        <div id="crew_postdiv" class="slide_navclass">
          
        </div>
        
          <div id="crew_controls">
   <div class ="crew_controlbtns button_effect ellipsis_text" id="crew_workbtn"> Featured in </div>
   <div class ="crew_controlbtns button_effect  ellipsis_text" id="crew_postbtn"> Posts </div>
     
   </div>
        </div>
        
        
        <div id="small_alert"> Added to Collections</div>
        
        
        <div id="tweet_bg" class="drop_topclass">
        <div id="tweet_inner">
         
          
<div id="tweet_msgdiv" class="tweet_subtabs">
<div id="" class="tweet_subdivs">
            
  <div id="tweet_textcover">
  <div id="msg_textimg" class="">
  </div>
  <div id="msg_textdiv">
       <div class="" id="msg_textinput" contenteditable="true" data-placeholder="Type something"></div>
       <div id="tweet_threebutton">
         Post
       </div>
  </div>
  
  </div>
  
  
</div>
</div>
<!-- end of a section -->

<div id="tweet_backdiv" class="tweet_subtabs">
<div id="back_subdiv" class="tweet_subdivs">
      <div class="content_editable" id="back_textinput" contenteditable="true" data-placeholder="Type something"></div>    
            <div id="sidebar_controls">  
   <div class ="sidebar_controlbtns button_effect ellipsis_text" id="tweet_msgbt"> 
 <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-palette-pallette" viewBox="0 0 16 16" onclick ="changeBackgroundColor('back_subdiv')">
  <path d="M8 5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zm4 3a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zM5.5 7a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm.5 6a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z"/>
  <path d="M16 8c0 3.15-1.866 2.585-3.567 2.07C11.42 9.763 10.465 9.473 10 10c-.603.683-.475 1.819-.351 2.92C9.826 14.495 9.996 16 8 16a8 8 0 1 1 8-8zm-8 7c.611 0 .654-.171.655-.176.078-.146.124-.464.07-1.119-.014-.168-.037-.37-.061-.591-.052-.464-.112-1.005-.118-1.462-.01-.707.083-1.61.704-2.314.369-.417.845-.578 1.272-.618.404-.038.812.026 1.16.104.343.077.702.186 1.025.284l.028.008c.346.105.658.199.953.266.653.148.904.083.991.024C14.717 9.38 15 9.161 15 8a7 7 0 1 0-7 7z"/>
</svg> </div>   
   <div class ="sidebar_controlbtns button_effect  ellipsis_text" id="tweet_backbt"><label for="sms_bginput" class="file-input-label"><svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-stickies" viewBox="0 0 16 16">
  <path d="M1.5 0A1.5 1.5 0 0 0 0 1.5V13a1 1 0 0 0 1 1V1.5a.5.5 0 0 1 .5-.5H14a1 1 0 0 0-1-1H1.5z"/>
  <path d="M3.5 2A1.5 1.5 0 0 0 2 3.5v11A1.5 1.5 0 0 0 3.5 16h6.086a1.5 1.5 0 0 0 1.06-.44l4.915-4.914A1.5 1.5 0 0 0 16 9.586V3.5A1.5 1.5 0 0 0 14.5 2h-11zM3 3.5a.5.5 0 0 1 .5-.5h11a.5.5 0 0 1 .5.5V9h-4.5A1.5 1.5 0 0 0 9 10.5V15H3.5a.5.5 0 0 1-.5-.5v-11zm7 11.293V10.5a.5.5 0 0 1 .5-.5h4.293L10 14.793z"/>
</svg>
  <input type="file" id="sms_bginput" accept="image/jpeg, image/png, image/gif, image/jpg" ultiple>
</label></div>
   <div class ="sidebar_controlbtns button_effect  ellipsis_text" id="color_switch" onclick="changeFontRandomly('back_textinput', 'color_switch')">A  </div>    
   <div class ="sidebar_controlbtns button_effect ellipsis_text" onclick ="eraser_backtweet()"> 
  <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-eraser" viewBox="0 0 16 16">
  <path d="M8.086 2.207a2 2 0 0 1 2.828 0l3.879 3.879a2 2 0 0 1 0 2.828l-5.5 5.5A2 2 0 0 1 7.879 15H5.12a2 2 0 0 1-1.414-.586l-2.5-2.5a2 2 0 0 1 0-2.828l6.879-6.879zm2.121.707a1 1 0 0 0-1.414 0L4.16 7.547l5.293 5.293 4.633-4.633a1 1 0 0 0 0-1.414l-3.879-3.879zM8.746 13.547 3.453 8.254 1.914 9.793a1 1 0 0 0 0 1.414l2.5 2.5a1 1 0 0 0 .707.293H7.88a1 1 0 0 0 .707-.293l.16-.16z"/>
</svg></div>
   <div class ="sidebar_controlbtns button_effect ellipsis_text" id="back_sendbtn"> <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-send-plane-" viewBox="0 0 16 16">
  <path d="M15.854.146a.5.5 0 0 1 .11.54l-5.819 14.547a.75.75 0 0 1-1.329.124l-3.178-4.995L.643 7.184a.75.75 0 0 1 .124-1.33L15.314.037a.5.5 0 0 1 .54.11ZM6.636 10.07l2.761 4.338L14.13 2.576 6.636 10.07Zm6.787-8.201L1.591 6.602l4.339 2.76 7.494-7.493Z"/>
</svg></div>
  
     
   </div>
</div>
</div>
<!-- end of a section -->

<div id="tweet_imgdiv" class="tweet_subtabs">
<div id="" class="tweet_subdivs">
            
</div>
</div>
<!-- end of a section -->

<div id="tweet_polldiv" class="tweet_subtabs">
<div id="" class="tweet_subdivs">
       <div id="tweet_textcover">
  <div id="msg_textimg" class="">
  </div>
  <div id="poll_container">
       <div class="" id="poll_topinput" contenteditable="true" data-placeholder="Ask a question "></div>
       <div id="poll_section">
         <div id="poll_quesdiv">
           <div id="ques_inner">
             <input id="first_poll" maxlength="30">
              <span id="first_count">30</span>
           </div>
         
         </div>
         <div id="poll_quesdiv">
           <div id="ques_inner">
             <input id="second_poll" maxlength="30" disabled>
             <span id="second_count">30</span>
           </div>
 
         </div>
         <div id="poll_quesdiv">
           <div id="ques_inner">
             <input id="third_poll" maxlength="30" disabled>
              <span id="third_count">30</span>
           </div>
      
         </div>
         <div id="poll_quesdiv">
           <div id="ques_inner">
             <input id="fourth_poll" maxlength="30" disabled>
             <span id="fourth_count">30</span>
           </div>
      
         </div>
         <div id="post_pollmsg">
           Post
         </div>
       </div>
  </div>
  
  </div>
</div>
</div>
<!-- end of a section -->
          
<div id="tweet_listdiv" class="tweet_subtabs">
<div id="" class="tweet_subdivs">
    <div class ="twit_cover">
       <div class ="twit_profileimg"></div>
       <div class ="twit_post">
         <div class="twe_listcontainer">
           
  <div class="" id="tlist_topinput" contenteditable="true" data-placeholder="Ask a question "></div> 
  
  <div class ="book_cover">
    <div class="book_number"> 1 </div>
    <div class="book_more"> 
    <div class="book_item"></div>
    <div class="book_text"> ELITE </div>
    <div class="book_detail"> 
    <span> 2023 </span>
    <span> 3S & 48E </span>
    <span> 18+ </span>
    <span class="book_rating"> 7.4</span>
    </div>  
    </div>
  </div>
  <div class ="book_cover">
    <div class="book_number"> 1 </div>
    <div class="book_more"> 
    <div class="book_item"></div>
    <div class="book_text"> ELITE </div>
    <div class="book_detail"> 
    <span> 2023 </span>
    <span> 3S & 48E </span>
    <span> 18+ </span>
    <span class="book_rating"> 7.4</span>
    </div>  
    </div>
  </div>
  <div class ="book_cover">
    <div class="book_number"> 1 </div>
    <div class="book_more"> 
    <div class="book_item"></div>
    <div class="book_text"> ELITE </div>
    <div class="book_detail"> 
    <span> 2023 </span>
    <span> 3S & 48E </span>
    <span> 18+ </span>
    <span class="book_rating"> 7.4</span>
    </div>  
    </div>
  </div>
  <div class ="book_cover">
    <div class="book_number"> 1 </div>
    <div class="book_more"> 
    <div class="book_item"></div>
    <div class="book_text"> ELITE </div>
    <div class="book_detail"> 
    <span> 2023 </span>
    <span> 3S & 48E </span>
    <span> 18+ </span>
    <span class="book_rating"> 7.4</span>
    </div>  
    </div>
  </div>
  <div class ="book_cover">
    <div class="book_number"> 1 </div>
    <div class="book_more"> 
    <div class="book_item"></div>
    <div class="book_text"> ELITE </div>
    <div class="book_detail"> 
    <span> 2023 </span>
    <span> 3S & 48E </span>
    <span> 18+ </span>
    <span class="book_rating"> 7.4</span>
    </div>  
    </div>
  </div>
  <div class ="book_cover">
    <div class="book_number"> 1 </div>
    <div class="book_more"> 
    <div class="book_item"></div>
    <div class="book_text"> ELITE </div>
    <div class="book_detail"> 
    <span> 2023 </span>
    <span> 3S & 48E </span>
    <span> 18+ </span>
    <span class="book_rating"> 7.4</span>
    </div>  
    </div>
  </div>
    <!---
      
         <div class="egg_div">
           <div></div>
           <div></div>
           <div></div>
           <div></div>
           <div></div>
         </div>
         -->
  
         </div>
     
         <div class="twit_btns">
         
           <span> <svg xmlns="http://www.w3.org/2000/svg" width="35" height="35" fill="currentColor" class="bi bi-plus-" viewBox="0 0 16 16">
  <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/></svg></span>
           <span> <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-send-plane-" viewBox="0 0 16 16">
  <path d="M15.854.146a.5.5 0 0 1 .11.54l-5.819 14.547a.75.75 0 0 1-1.329.124l-3.178-4.995L.643 7.184a.75.75 0 0 1 .124-1.33L15.314.037a.5.5 0 0 1 .54.11ZM6.636 10.07l2.761 4.338L14.13 2.576 6.636 10.07Zm6.787-8.201L1.591 6.602l4.339 2.76 7.494-7.493Z"/>
</svg></span>    
         </div>
       </div>
         
         
       </div>
</div>
</div>
<!-- end of a section -->
          
          
             <div id="tweet_controls">
   <div class ="tweet_controlbtns button_effect tweet_controlclass ellipsis_text" id="tweet_msgbtn"> 
   <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-chat-left-dots" viewBox="0 0 16 16"><path d="M14 1a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H4.414A2 2 0 0 0 3 11.586l-2 2V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12.793a.5.5 0 0 0 .854.353l2.853-2.853A1 1 0 0 1 4.414 12H14a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z"/><path d="M5 6a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/></svg> </div>   
   <div class ="tweet_controlbtns button_effect  ellipsis_text" id="tweet_backbtn"> <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
  <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z"/>
  <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z"/>
</svg> </div>
   <div class ="tweet_controlbtns button_effect  ellipsis_text" id="tweet_imgbtn"> <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-image" viewBox="0 0 16 16">
  <path d="M6.002 5.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/>
  <path d="M2.002 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2h-12zm12 1a1 1 0 0 1 1 1v6.5l-3.777-1.947a.5.5 0 0 0-.577.093l-3.71 3.71-2.66-1.772a.5.5 0 0 0-.63.062L1.002 12V3a1 1 0 0 1 1-1h12z"/>
</svg> </div>
   <div class ="tweet_controlbtns button_effect ellipsis_text" id="tweet_pollbtn"> 
   <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" width="20" height="20" fill="currentColor" class="bi bi-polls-poll-"><path d="M384 32C419.3 32 448 60.65 448 96V416C448 451.3 419.3 480 384 480H64C28.65 480 0 451.3 0 416V96C0 60.65 28.65 32 64 32H384zM128 224C110.3 224 96 238.3 96 256V352C96 369.7 110.3 384 128 384C145.7 384 160 369.7 160 352V256C160 238.3 145.7 224 128 224zM192 352C192 369.7 206.3 384 224 384C241.7 384 256 369.7 256 352V160C256 142.3 241.7 128 224 128C206.3 128 192 142.3 192 160V352zM320 288C302.3 288 288 302.3 288 320V352C288 369.7 302.3 384 320 384C337.7 384 352 369.7 352 352V320C352 302.3 337.7 288 320 288z"/></svg> </div>
   <div class ="tweet_controlbtns button_effect ellipsis_text" id="tweet_listbtn"> 
  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-list-ol" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M5 11.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zm0-4a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5z"/>
  <path d="M1.713 11.865v-.474H2c.217 0 .363-.137.363-.317 0-.185-.158-.31-.361-.31-.223 0-.367.152-.373.31h-.59c.016-.467.373-.787.986-.787.588-.002.954.291.957.703a.595.595 0 0 1-.492.594v.033a.615.615 0 0 1 .569.631c.003.533-.502.8-1.051.8-.656 0-1-.37-1.008-.794h.582c.008.178.186.306.422.309.254 0 .424-.145.422-.35-.002-.195-.155-.348-.414-.348h-.3zm-.004-4.699h-.604v-.035c0-.408.295-.844.958-.844.583 0 .96.326.96.756 0 .389-.257.617-.476.848l-.537.572v.03h1.054V9H1.143v-.395l.957-.99c.138-.142.293-.304.293-.508 0-.18-.147-.32-.342-.32a.33.33 0 0 0-.342.338v.041zM2.564 5h-.635V2.924h-.031l-.598.42v-.567l.629-.443h.635V5z"/>
</svg></div>
   <div class ="tweet_controlbtns button_effect ellipsis_text" id="tweet_exitbtn"> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16 " fill="currentColor" class="bi bi-x-circle" viewBox="0 0 16 16">
  <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
  <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>
</svg> </div>
  
     
   </div>
        </div>
        </div>
        <!-- season_overall       -->
        <div id="season_overall" class="slide_navclass">
          <div id="season_counter">
         
           
          </div>
          <div id="seas_overalltotal">
          <div id="seas_overallinner">
  <div id="seas_overtop">
            
          <div id="season_left">
            
          </div>
          <!-- end of left section -->
          <div id="season_middle">
          <div id="season_square">
            
          </div>
            
 
 
 
          </div>
          <!-- end of middle section -->
            <div id="season_controls">  
            <div id="season_controlinner">
            <div id="season_epibtn" class="season_controlbtns week_controlclass">
              Episodes
            </div>
            <div id="season_combtn" class="season_controlbtns">
              Reviews
            </div>
              
            </div>
            </div>
          <div id="season_right">
            
          </div>
          <!-- end of right section -->
            
          </div>
   <div id="season_info">
              <div id="series_title"> The bastard son and the devil himself to the div to trigger the animation* person </div>
              <div id="season_title"> Season 1 (The Devil's Hour) person who is that the one who can help you to n who are n </div>
            </div>
 <div id="seas_episodeslist">
 <div id="seas_episodesinner">
   <!--
     <div class ="twit_cover">
       <div class ="twit_profileimg"></div>
       <div class ="twit_post">
         
         
         <div class="egg_div">
       
         </div>
         <div class="twit_text">
         Lorem ipsum dolor sit amet consectetur, adipisicing elit. Provident delectus porro at sed expedita magni, corrupti rerum ex corporis ad.Lorem ipsum dolor sit amet consectetur, adipisicing elit. Provident delectus porro at sed expedita magni, corrupti rerum ex corporis ad.Lorem ipsum dolor sit amet consectetur, adipisicing elit. Provident delectus porro at sed expedita magni, corrupti rerum ex corporis ad.
         </div>
         <div class="twit_btns">
           <span class="display_flex align_center">
           <span> <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-heart" viewBox="0 0 16 16"><path d="m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z"/></svg>
</span>
             <span> 13 </span>
           </span>
           <span><svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-chat-left-dots" viewBox="0 0 16 16"><path d="M14 1a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H4.414A2 2 0 0 0 3 11.586l-2 2V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12.793a.5.5 0 0 0 .854.353l2.853-2.853A1 1 0 0 1 4.414 12H14a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z"/><path d="M5 6a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/></svg></span>
           <span> <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-three-dots-vertical" viewBox="0 0 16 16"><path d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/></svg></span>  
         </div>
       </div>
         
         
       </div>
 
 <div class="episode_cover">
 <div class="episode_img"></div>
 <div class="episode_side"></div>
   
 </div>
 
   -->
 </div>
 </div>
 </div>
          
      
          </div>
        </div>
        <!-- end of overall -->
        
        <div id="season_commentdiv" class="slide_navclass">
        <div id="seas_commentinner" class="">
          
        </div>
        </div>
        
        <div id="longman_bg" class="longman_bg slide_navclass">  
           <div id="tag_controls">
   <div class ="tag_controlbtns button_effect week_controlclass ellipsis_text" id="tag_movbtn"> Overview </div>
   <div class ="tag_controlbtns button_effect ellipsis_text" id="tag_serbtn"> Reviews </div>
   <div class ="tag_controlbtns button_effect ellipsis_text" id="tag_anmovbtn"> Community </div>
     
   </div>
        <div id="long_reviewtab" class="slide_navclass long_twotabs">
       
             <div id="" class ="commentclass_tabinner" >
       
        <div id="overall_reviewinner" class="commentclass_middle">
        
        
          
        </div>
        <div class="commentclass_bot">
        <div class="commentclass_boinner">
          <div class="commentclass_inputdiv">
         
           <div class="" id="review_text" contenteditable="true" data-placeholder="Type something"></div>
       
          </div>
             <div id="review_sendbtn" class="button_effect" ><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-send-plane-" viewBox="0 0 16 16">
  <path d="M15.854.146a.5.5 0 0 1 .11.54l-5.819 14.547a.75.75 0 0 1-1.329.124l-3.178-4.995L.643 7.184a.75.75 0 0 1 .124-1.33L15.314.037a.5.5 0 0 1 .54.11ZM6.636 10.07l2.761 4.338L14.13 2.576 6.636 10.07Zm6.787-8.201L1.591 6.602l4.339 2.76 7.494-7.493Z"/>
</svg></div> 
        </div>
      
        </div>

        </div>
       
          </div>
        <div id="long_commtab" class="slide_navclass long_twotabs">
        <div id="" class="long_twodivs">
          
          </div>
          </div>
        <div id="longman_inner">
          
          <div id="long_top">
          <div id="long_board">
            <div id="long_iconsdiv" class="display_flex align_center justify_between">
              <span id="long_exitbtn">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-chevron-bar-left" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M11.854 3.646a.5.5 0 0 1 0 .708L8.207 8l3.647 3.646a.5.5 0 0 1-.708.708l-4-4a.5.5 0 0 1 0-.708l4-4a.5.5 0 0 1 .708 0zM4.5 1a.5.5 0 0 0-.5.5v13a.5.5 0 0 0 1 0v-13a.5.5 0 0 0-.5-.5z"/>
</svg>
              </span>
              <div class ="display_flex align_center justify_between">
        <span id="film_bookbtn" class="button_effect overall_btns">
        <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-bookmark-plus" viewBox="0 0 16 16"><path d="M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.777.416L8 13.101l-5.223 2.815A.5.5 0 0 1 2 15.5V2zm2-1a1 1 0 0 0-1 1v12.566l4.723-2.482a.5.5 0 0 1 .554 0L13 14.566V2a1 1 0 0 0-1-1H4z"/><path d="M8 4a.5.5 0 0 1 .5.5V6H10a.5.5 0 0 1 0 1H8.5v1.5a.5.5 0 0 1-1 0V7H6a.5.5 0 0 1 0-1h1.5V4.5A.5.5 0 0 1 8 4z"/></svg>
        </span>  
        <span id="film_collectbtn" class="button_effect overall_btns">
          <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-patch-plus" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8 5.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V10a.5.5 0 0 1-1 0V8.5H6a.5.5 0 0 1 0-1h1.5V6a.5.5 0 0 1 .5-.5z"/><path d="m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z"/>
</svg>
        </span>
        <span id="film_sharebtn" class="button_effect overall_btns">
          <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-share" viewBox="0 0 16 16">
  <path d="M13.5 1a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3zM11 2.5a2.5 2.5 0 1 1 .603 1.628l-6.718 3.12a2.499 2.499 0 0 1 0 1.504l6.718 3.12a2.5 2.5 0 1 1-.488.876l-6.718-3.12a2.5 2.5 0 1 1 0-3.256l6.718-3.12A2.5 2.5 0 0 1 11 2.5zm-8.5 4a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3zm11 5.5a1.5 1.5 0 1 0 0 3 1.5 1.5 0 0 0 0-3z"/>
</svg>
        </span>
                
              </div>
            </div>
          </div>
          <div class="display_flex">
            <div id="long_leftboard" class ="long_sideboards"></div>
            <div id="long_rightboard" class ="long_sideboards"></div>
          </div>
          </div>
          <div id="long_bottombg" class ="">
          <div id="long_bottominner" class ="">
   
     <span id="m_profname" class=""> The Magician's elephant </span>
      <div id="major_intel">
        <span id="intel_adult">
          <svg style="color: red" xmlns="http://www.w3.org/2000/svg"  width="30" height="30" data-name="Layer 1" viewBox="0 0 24 24"><path d="M18,5h1V6a1,1,0,0,0,2,0V5h1a1,1,0,0,0,0-2H21V2a1,1,0,0,0-2,0V3H18a1,1,0,0,0,0,2ZM7,7V17a1,1,0,0,0,2,0V7A1,1,0,0,0,7,7ZM21.6,9a1,1,0,0,0-.78,1.18,9,9,0,1,1-7-7,1,1,0,1,0,.4-2A10.8,10.8,0,0,0,12,1,11,11,0,1,0,23,12a10.8,10.8,0,0,0-.22-2.2A1,1,0,0,0,21.6,9ZM11,9v1a3,3,0,0,0,.78,2A3,3,0,0,0,11,14v1a3,3,0,0,0,3,3h1a3,3,0,0,0,3-3V14a3,3,0,0,0-.78-2A3,3,0,0,0,18,10V9a3,3,0,0,0-3-3H14A3,3,0,0,0,11,9Zm5,6a1,1,0,0,1-1,1H14a1,1,0,0,1-1-1V14a1,1,0,0,1,1-1h1a1,1,0,0,1,1,1Zm0-6v1a1,1,0,0,1-1,1H14a1,1,0,0,1-1-1V9a1,1,0,0,1,1-1h1A1,1,0,0,1,16,9Z" fill="red"></path></svg>
        </span>
        <span id="intel_year" class="ellipsis_text"> 2022 </span>
        <span id="intel_type" class="ellipsis_text"> TV Series </span>
        <span id="intel_series" class="ellipsis_text">  2S & 15E </span>
        <span id="intel_status" class="ellipsis_text">   </span>
      </div>
      <div id="long_awarddiv">
         <span class="long_imdb">
             <span><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#e67e22 " class="bi bi-star-fill" viewBox="0 0 16 16">
<path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z"/>
</svg></span>
<span id="m_imdb"></span> 
</span>
        
         <div id = "award_txt">  </div>
      </div>
         <div class="border_cover">
         <div class = "lit_txt"> Synopsis </div>
         <div id="film_note">
         
         </div>
         
         </div> 
      
  <div id = "film_photo">

        <div class = "lit_txt"> Photo </div>

        <div id = "photo_val" class="no_scrollbar"> 
      
        
        </div>
      </div>
 
 <div id="director_path">
          <span id="director_head"> Director </span>
          <span id="director_val"> Xavier Christian </span>
        </div>
    <div id = "film_trailer">

        <div class = "lit_txt"> Trailers & Clips</div>

        <div id = "trailer_val" class="no_scrollbar"> 
     
        </div>
      </div>
      
  <div class = "border_cover display_none" id="jolly_element">

        <div class = "lit_txt display_flex align_center" id="jolly_head"> 
        <span> Seasons </span>
        <span> <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor" class="bi bi-chevron-right" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/></svg> </span> 
        </div>

        <div id = "jolly_val" class="no_scrollbar"> 
       
        
        </div>
      </div>
      
  <div class = "border_cover">

        <div class = "lit_txt"> Top Cast </div>

        <div id = "cast_val" class="no_scrollbar"> 
       
        
        </div>
      </div>
      
  <div id="company_path">
    <div class = "lit_txt"> Production Company </div> 
         <div id="company_val">
        
         </div>
       </div>
 
   
         <div class = "border_cover">
        <div class = "lit_txt"> Storyline </div>
         <div id="story_note">

           Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.  

         </div>
         <br>
   <div class="">
     <span class="color_orange majorbold_text"> Genre </span>
     <span class="colr_orange" id="film_genre">  Action Comedy Drama </span>
   </div>
   <hr class="border_bottom">
   
   <div class="">
     <span class="color_orange majorbold_text"> Tags </span>
     <span class="colr_orange" id="film_tag"> 
     </span>
   </div>
   <hr class="border_bottom">
   <div class="">
     <span class="color_orange majorbold_text"> Duration </span>
     <span class="colr_orange" id="film_length">  </span>
   </div>
   <hr class="border_bottom">
   <div class="">
     <span class="color_orange majorbold_text"> Tagline </span>
     <span class="colr_orange" id="film_tagline">  </span>
   </div>
   <hr class="border_bottom">
   
   <div class="">
     <span class="color_orange majorbold_text"> Certificate </span>
     <span class="colr_orange" id="film_pg"> caution </span>
   </div>
   <hr class="border_bottom">
        
        </div>
        
         <div class = "border_cover" id="film_moment">
        <div class = "lit_txt display_flex align_center justify_between"> 
        <span>Moments</span>
        <span id="office_addmoment" class ="official_buttons">
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-folder-plus" viewBox="0 0 16 16">
  <path d="m.5 3 .04.87a1.99 1.99 0 0 0-.342 1.311l.637 7A2 2 0 0 0 2.826 14H9v-1H2.826a1 1 0 0 1-.995-.91l-.637-7A1 1 0 0 1 2.19 4h11.62a1 1 0 0 1 .996 1.09L14.54 8h1.005l.256-2.819A2 2 0 0 0 13.81 3H9.828a2 2 0 0 1-1.414-.586l-.828-.828A2 2 0 0 0 6.172 1H2.5a2 2 0 0 0-2 2Zm5.672-1a1 1 0 0 1 .707.293L7.586 3H2.19c-.24 0-.47.042-.683.12L1.5 2.98a1 1 0 0 1 1-.98h3.672Z"/>
  <path d="M13.5 9a.5.5 0 0 1 .5.5V11h1.5a.5.5 0 1 1 0 1H14v1.5a.5.5 0 1 1-1 0V12h-1.5a.5.5 0 0 1 0-1H13V9.5a.5.5 0 0 1 .5-.5Z"/>
</svg>
        </span>
        </div>
         <div id = "moment_val" class="no_scrollbar">
   
        </div>
        </div>
        
         <div class = "border_cover" id="film_more">
        <div class = "lit_txt"> More like this </div>
   <div id = "morefilm_val" class="no_scrollbar">
    
         <div class="m_profimg"></div>

         <div class="m_profimg"></div>

         <div class="m_profimg"></div>
         <div class="m_profimg"></div>
         <div class="m_profimg"></div>
    
        </div>
        </div>


   <div class = "border_cover">
        <div class = "lit_txt"> Details </div>
        
       <div class="">
     <span class="color_orange majorbold_text"> Production Country </span>
     <span class="colr_orange" id="film_coun">   </span>
   </div>
        <hr class="border_bottom">
        
   
       <div class="">
     <span class="color_orange majorbold_text"> Release Date </span>
     <span class="colr_orange" id="film_date">  18th March, 2023 </span>
   </div>
        <hr class="border_bottom">
        
       <div class="">
     <span class="color_orange majorbold_text"> Language </span>
     <span class="colr_orange" id="film_lang">  English Russian  </span>
   </div>
        <hr class="border_bottom">
        
       <div class="">
     <span class="color_orange majorbold_text"> Also Known As </span>
     <span class="colr_orange" id="film_aka"> The search for the missing magic chess elephant </span>
   </div>
        <hr class="border_bottom">
        
        
       <div class="display_none" id="film_website">
     <span class="color_orange majorbold_text"> Homepage </span>
     <span class="colr_orange" id="film_homepage">  </span>
        <hr class="border_bottom">
   </div>
        
       <div class="">
     <span class="color_orange majorbold_text"> Box Office </span>
     <span class="colr_orange" id="film_budget">  $11,000,000 </span>
   </div>
        <hr class="border_bottom">
       <div class="">
     <span class="color_orange majorbold_text"> Revenue </span>
     <span class="colr_orange" id="film_revenue">  </span>
   </div>
        <hr class="border_bottom">
       <div class="">
     <span class="color_orange majorbold_text"> Path </span>
     https://www.themoviedb.org/<span class="colr_orange" id="film_pathtype"></span>/<span class="colr_orange" id="film_pathid"></span>
     
   </div>
        <hr class="border_bottom">
        
        
        </div>
        
         <div class = "border_cover" id="film_check">
        <div class = "lit_txt"> Check These Out </div>
   <div id = "checkfilm_val" class="no_scrollbar">      
         <div class="m_profimg"></div>

         <div class="m_profimg"></div>

         <div class="m_profimg"></div>
         <div class="m_profimg"></div>
         <div class="m_profimg"></div>
        
        </div>
        </div>        
         
      </div>
            <!---   -->
          </div>
       
          
          
   
   
          
          
        </div>
        </div>
        <!-- end of overall longman_bg  -->
        
        
         
 <div id="tweet_hashtab">
 <div id="tweet_hashinner">
 <div id="tweet_hashtext"> </div>

      
  <div class="swiper_containerone">
  <div class="swiper-wrapper">
    <div class="swiper-slide swiper_hashclass" id="movies_hash">Tab 1</div>
    <div class="swiper-slide swiper_hashclass" id="series_hash">Tab 2</div>
    <div class="swiper-slide swiper_hashclass" id="actor_hash">Tab 3</div>
    <div class="swiper-slide swiper_hashclass" id="account_hash">Tab 4</div>
    <div class="swiper-slide swiper_hashclass" id="group_hash">Tab 5</div>
  </div>
</div>

  <div id="hash_controls">
         
        
   <div class ="hash_controlbtns button_effect week_controlclass ellipsis_text" id="mov_hashbtn" onclick="changeActiveTab1(0)"> Movies </div>
   <div class ="hash_controlbtns button_effect ellipsis_text" id="ser_hashbtn" onclick="changeActiveTab1(1)"> Series     </div>
   <div class ="hash_controlbtns button_effect  ellipsis_text" id="act_hashbtn" onclick="changeActiveTab1(2)">  Actors </div>
   <div class ="hash_controlbtns button_effect ellipsis_text" id="acc_hashbtn" onclick="changeActiveTab1(3)"> Accounts </div>
   <div class ="hash_controlbtns button_effect ellipsis_text display_flex" id="grp_hashbtn" onclick="changeActiveTab1(5)"> Groups </div>
     
   </div>
    
 </div>
 </div>
        
        
  <div id="relative_bg" class="pick_topclass">
  <div id="relative_inner" class="">
  <div id="relative_head">
  <div id="relative_exit">
    <svg xmlns="http://www.w3.org/2000/svg" width="35" height="35" fill="currentColor" class="bi bi-x" viewBox="0 0 16 16">
  <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>
</svg>
  </div>
  <div id="relative_search">
    <span> <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor " class="bi bi-search" viewBox="0 0 16 16"><path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z"/></svg></span>
    <span id="relative_item">Marvel Entertainment white-space:nowrap ;
    overflow: hidden ;
    text-overflow: ellipsis;</span>
  </div>
    
  </div>
    
  <div id="relative_body" class="flex_section">
    
  </div>
  
  </div>
  </div>
        
        
        <div id="page_bg" class="slide_navclass">
        <div id="page_inner" class="">
  <div id="page_board">
    
  </div>
  <div id="page_info">
  <div id="page_intop">
    <div id="page_pic"></div>
    <div id="page_follow"> Subscribe </div>
  </div>
  <div id="page_inbot">
    <div id="page_name"> The Sandman Fans </div>
    <div id="page_detail"> <span id="page_number"> 15M </span> Subscribers </div>
  </div>
  <div id="page_inleg">
   Lorem ipsum dolor sit amet consectetur, adipisicing elit. Provident delectus porro at sed expedita magni, corrupti rerum ex corporis ad.Lorem ipsum dolor sit amet consectetur, adipisicing elit. Provident delectus porro at sed expedita magni, corrupti rerum ex corporis ad.Lorem ipsum dolor sit amet consectetur, adipisicing elit. Provident delectus porro at sed expedita magni, corrupti rerum ex corporis ad.
  </div>
  <div id="page_intags">
    <span>fantasy </span>
    <span>elite </span>
    <span>arunmois </span>
    <span>arónPiper </span>
    <span>manurios </span>
    <span>fantasy </span>
    <span>elite </span>
    <span>arunmois </span>
    <span>arónPiper </span>
    <span>manurios </span>
    <span>fantasy </span>
    <span>elite </span>
    <span>arunmois </span>
    <span>arónPiper </span>
    <span>manurios </span>
    <span>fantasy </span>
    <span>elite </span>
    <span>arunmois </span>
    <span>arónPiper </span>
    <span>manurios </span>
    <span>fantasy </span>
    <span>elite </span>
    <span>arunmois </span>
    <span>arónPiper </span>
    <span>manurios </span>
    <span>fantasy </span>
    <span>elite </span>
    <span>arunmois </span>
    <span>arónPiper </span>
    <span>manurios </span>
    <span>fantasy </span>
    <span>elite </span>
    <span>arunmois </span>
    <span>arónPiper </span>
    <span>manurios </span>
    <span>fantasy </span>
    <span>elite </span>
    <span>arunmois </span>
    <span>arónPiper </span>
    <span>manurios </span>
  </div>
  </div>
   <div id="page_plus" class="button_effect">
        <svg xmlns="http://www.w3.org/2000/svg" width="39" height="39" fill="currentColor" class="bi bi-plus-" viewBox="0 0 16 16">
  <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/></svg>
      </div>
  <div id="page_posts">
    
  </div>
          
        </div>
        </div>
         
        <div id="trending_bg" class="pick_topclass">
        <div id="trending_inner" class="">
        <div id="trending_head" class="">
          <div id="trending_exit">
    <svg xmlns="http://www.w3.org/2000/svg" width="35" height="35" fill="currentColor" class="bi bi-x" viewBox="0 0 16 16">
  <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>
</svg>
  </div>
  <div id="trending_search">
    <span> <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-chevron-left" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z"/></svg></span>
    <span id="trending_item" class="trending_dates">Today</span>
    <span> <svg xmlns="http://www.w3.org/2000/svg" width="23" height="23" fill="currentColor" class="bi bi-chevron-right" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/></svg></span>
    
  </div>
        </div>
        <div id="trending_tail" class="flex_section">
        </div>
          
          
        </div>
        </div>
      
        <div id="closet_bg" class="slide_navclass">
        <div id="closet_inner" class="">
        <div id="closet_head" class="">
          <div class="display_flex">
            <div id="closet_exit">
              <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#fff" class="bi bi-chevron-left" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z"/></svg>
            </div>
            <div id="closet_name"> Trevor Noah  </div>
          </div>
            <div id="closet_bookmark">
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-bookmark-plus" viewBox="0 0 16 16"><path d="M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.777.416L8 13.101l-5.223 2.815A.5.5 0 0 1 2 15.5V2zm2-1a1 1 0 0 0-1 1v12.566l4.723-2.482a.5.5 0 0 1 .554 0L13 14.566V2a1 1 0 0 0-1-1H4z"/><path d="M8 4a.5.5 0 0 1 .5.5V6H10a.5.5 0 0 1 0 1H8.5v1.5a.5.5 0 0 1-1 0V7H6a.5.5 0 0 1 0-1h1.5V4.5A.5.5 0 0 1 8 4z"/></svg>
            </div>
            <div id="office_addcloset" class="official_buttons"> 
               <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-folder-plus" viewBox="0 0 16 16">
  <path d="m.5 3 .04.87a1.99 1.99 0 0 0-.342 1.311l.637 7A2 2 0 0 0 2.826 14H9v-1H2.826a1 1 0 0 1-.995-.91l-.637-7A1 1 0 0 1 2.19 4h11.62a1 1 0 0 1 .996 1.09L14.54 8h1.005l.256-2.819A2 2 0 0 0 13.81 3H9.828a2 2 0 0 1-1.414-.586l-.828-.828A2 2 0 0 0 6.172 1H2.5a2 2 0 0 0-2 2Zm5.672-1a1 1 0 0 1 .707.293L7.586 3H2.19c-.24 0-.47.042-.683.12L1.5 2.98a1 1 0 0 1 1-.98h3.672Z"/>
  <path d="M13.5 9a.5.5 0 0 1 .5.5V11h1.5a.5.5 0 1 1 0 1H14v1.5a.5.5 0 1 1-1 0V12h-1.5a.5.5 0 0 1 0-1H13V9.5a.5.5 0 0 1 .5-.5Z"/>
</svg>
            </div>   
        </div>
        <div id="closet_info" class="">
          <div id="closet_image"></div>
          <div id="closet_details">
            <span class="display_flex align_center">
               <span id="" class=""> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-balloon-baloon-ballon-balon" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 9.984C10.403 9.506 12 7.48 12 5a4 4 0 0 0-8 0c0 2.48 1.597 4.506 4 4.984ZM13 5c0 2.837-1.789 5.227-4.52 5.901l.244.487a.25.25 0 1 1-.448.224l-.008-.017c.008.11.02.202.037.29.054.27.161.488.419 1.003.288.578.235 1.15.076 1.629-.157.469-.422.867-.588 1.115l-.004.007a.25.25 0 1 1-.416-.278c.168-.252.4-.6.533-1.003.133-.396.163-.824-.049-1.246l-.013-.028c-.24-.48-.38-.758-.448-1.102a3.177 3.177 0 0 1-.052-.45l-.04.08a.25.25 0 1 1-.447-.224l.244-.487C4.789 10.227 3 7.837 3 5a5 5 0 0 1 10 0Zm-6.938-.495a2.003 2.003 0 0 1 1.443-1.443C7.773 2.994 8 2.776 8 2.5c0-.276-.226-.504-.498-.459a3.003 3.003 0 0 0-2.46 2.461c-.046.272.182.498.458.498s.494-.227.562-.495Z"/>
</svg> 
</span>
 <span id="" class="font_twelve">Born </span>
               <span id="closet_birthdate" class="closet_spans"> 18th June 2023 </span>
               </span>
            <span class="display_flex align_center"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-star" viewBox="0 0 16 16">
  <path d="M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288L8 2.223l1.847 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.565.565 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z"/>
</svg>
                <span id="" class=""> <span>
</span>

               <span id="closet_dept" class="closet_spans"> Acting </span>
               </span>
            </span>
            <span class="display_flex align_center">
               <span id="" class=""> <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" class="bi bi-geo-alt" viewBox="0 0 16 16">
  <path d="M12.166 8.94c-.524 1.062-1.234 2.12-1.96 3.07A31.493 31.493 0 0 1 8 14.58a31.481 31.481 0 0 1-2.206-2.57c-.726-.95-1.436-2.008-1.96-3.07C3.304 7.867 3 6.862 3 6a5 5 0 0 1 10 0c0 .862-.305 1.867-.834 2.94zM8 16s6-5.686 6-10A6 6 0 0 0 2 6c0 4.314 6 10 6 10z"/>
  <path d="M8 8a2 2 0 1 1 0-4 2 2 0 0 1 0 4zm0 1a3 3 0 1 0 0-6 3 3 0 0 0 0 6z"/>
</svg>
</span>
 <span id="" class="font_twelve">Place of Birth </span>
               <span id="closet_birthplace" class="closet_spans"> Okholama, South Africa </span>
               </span>
            <span class="display_flex align_center" id="closet_deathdiv">
               <span id="" class=""> <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" class="bi bi-balloon-heart" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="m8 2.42-.717-.737c-1.13-1.161-3.243-.777-4.01.72-.35.685-.451 1.707.236 3.062C4.16 6.753 5.52 8.32 8 10.042c2.479-1.723 3.839-3.29 4.491-4.577.687-1.355.587-2.377.236-3.061-.767-1.498-2.88-1.882-4.01-.721L8 2.42Zm-.49 8.5c-10.78-7.44-3-13.155.359-10.063.045.041.089.084.132.129.043-.045.087-.088.132-.129 3.36-3.092 11.137 2.624.357 10.063l.235.468a.25.25 0 1 1-.448.224l-.008-.017c.008.11.02.202.037.29.054.27.161.488.419 1.003.288.578.235 1.15.076 1.629-.157.469-.422.867-.588 1.115l-.004.007a.25.25 0 1 1-.416-.278c.168-.252.4-.6.533-1.003.133-.396.163-.824-.049-1.246l-.013-.028c-.24-.48-.38-.758-.448-1.102a3.177 3.177 0 0 1-.052-.45l-.04.08a.25.25 0 1 1-.447-.224l.235-.468ZM6.013 2.06c-.649-.18-1.483.083-1.85.798-.131.258-.245.689-.08 1.335.063.244.414.198.487-.043.21-.697.627-1.447 1.359-1.692.217-.073.304-.337.084-.398Z"/>
</svg>
</span>
 <span id="" class="font_twelve">Died </span>
               <span id="closet_deathval" class="closet_spans">  </span>
               </span>
            <span class="display_flex align_center" id="closet_webdiv">
               <span id="" class="">  <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" class="bi bi-globe" viewBox="0 0 16 16">
  <path d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm7.5-6.923c-.67.204-1.335.82-1.887 1.855A7.97 7.97 0 0 0 5.145 4H7.5V1.077zM4.09 4a9.267 9.267 0 0 1 .64-1.539 6.7 6.7 0 0 1 .597-.933A7.025 7.025 0 0 0 2.255 4H4.09zm-.582 3.5c.03-.877.138-1.718.312-2.5H1.674a6.958 6.958 0 0 0-.656 2.5h2.49zM4.847 5a12.5 12.5 0 0 0-.338 2.5H7.5V5H4.847zM8.5 5v2.5h2.99a12.495 12.495 0 0 0-.337-2.5H8.5zM4.51 8.5a12.5 12.5 0 0 0 .337 2.5H7.5V8.5H4.51zm3.99 0V11h2.653c.187-.765.306-1.608.338-2.5H8.5zM5.145 12c.138.386.295.744.468 1.068.552 1.035 1.218 1.65 1.887 1.855V12H5.145zm.182 2.472a6.696 6.696 0 0 1-.597-.933A9.268 9.268 0 0 1 4.09 12H2.255a7.024 7.024 0 0 0 3.072 2.472zM3.82 11a13.652 13.652 0 0 1-.312-2.5h-2.49c.062.89.291 1.733.656 2.5H3.82zm6.853 3.472A7.024 7.024 0 0 0 13.745 12H11.91a9.27 9.27 0 0 1-.64 1.539 6.688 6.688 0 0 1-.597.933zM8.5 12v2.923c.67-.204 1.335-.82 1.887-1.855.173-.324.33-.682.468-1.068H8.5zm3.68-1h2.146c.365-.767.594-1.61.656-2.5h-2.49a13.65 13.65 0 0 1-.312 2.5zm2.802-3.5a6.959 6.959 0 0 0-.656-2.5H12.18c.174.782.282 1.623.312 2.5h2.49zM11.27 2.461c.247.464.462.98.64 1.539h1.835a7.024 7.024 0 0 0-3.072-2.472c.218.284.418.598.597.933zM10.855 4a7.966 7.966 0 0 0-.468-1.068C9.835 1.897 9.17 1.282 8.5 1.077V4h2.355z"/>
</svg>
</span>
 <span id="" class="font_twelve">Webpage </span>
               <span id="closet_webval" class="closet_spans">  </span>
               </span>
           
          </div>
          <div id="closet_aka">
             
          </div>
          <div id="closet_path"> Path: https://www.themoviedb.org/person/<span class="font_twelve" id="closet_id"></span>
          </div>
          
          <div id="closet_describe">
            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Provident delectus porro at sed expedita magni, corrupti rerum ex corporis ad.Lorem ipsum dolor sit amet consectetur, adipisicing elit. Provident delectus porro at sed expedita magni, corrupti rerum ex corporis ad.Lorem ipsum dolor sit amet consectetur, adipisicing elit. Provident delectus porro at sed expedita magni, corrupti rerum ex corporis ad.
          </div>
        </div>
        <div id="closet_body" class="">
        <div id="closet_table" class="">
        <div id="closet_listbtn" class="closet_topicbtns closet_topicclass"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-grid-3x3" viewBox="0 0 16 16">
  <path d="M0 1.5A1.5 1.5 0 0 1 1.5 0h13A1.5 1.5 0 0 1 16 1.5v13a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 14.5v-13zM1.5 1a.5.5 0 0 0-.5.5V5h4V1H1.5zM5 6H1v4h4V6zm1 4h4V6H6v4zm-1 1H1v3.5a.5.5 0 0 0 .5.5H5v-4zm1 0v4h4v-4H6zm5 0v4h3.5a.5.5 0 0 0 .5-.5V11h-4zm0-1h4V6h-4v4zm0-5h4V1.5a.5.5 0 0 0-.5-.5H11v4zm-1 0V1H6v4h4z"/>
</svg>
       
        </div>
        <div id="closet_commbtn" class="closet_topicbtns"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-person-video2" viewBox="0 0 16 16">
  <path d="M10 9.05a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5Z"/>
  <path d="M2 1a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2H2ZM1 3a1 1 0 0 1 1-1h2v2H1V3Zm4 10V2h9a1 1 0 0 1 1 1v9c0 .285-.12.543-.31.725C14.15 11.494 12.822 10 10 10c-3.037 0-4.345 1.73-4.798 3H5Zm-4-2h3v2H2a1 1 0 0 1-1-1v-1Zm3-1H1V8h3v2Zm0-3H1V5h3v2Z"/>
</svg>
        
        </div>
          
        </div>
        <div class="swiper_containertwo">
        <div class="swiper-wrapper">
          
           <div id="closet_listdiv" class="closet_tabsclass lex_section swiper-slide">
             
           </div>
           <div id="closet_commdiv" class="closet_tabsclass swiper-slide">
             
           </div>
          
        </div>
        </div>
          
        </div>
        </div>
        </div>
        
   <div id="group_formbg" class="drop_topclass">
   
   </div>
        
    <div class="pick_topclass" id="feed_tabdiv">
       
       <div id="feed_optionbg">
       <div id="feed_optiontop"></div>
       <div id="feed_optioninner">
       <div id="create_groupbtn" class="feed_options">
       <span class="feed_opticons"> 
         <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-people" viewBox="0 0 16 16">
  <path d="M15 14s1 0 1-1-1-4-5-4-5 3-5 4 1 1 1 1h8Zm-7.978-1A.261.261 0 0 1 7 12.996c.001-.264.167-1.03.76-1.72C8.312 10.629 9.282 10 11 10c1.717 0 2.687.63 3.24 1.276.593.69.758 1.457.76 1.72l-.008.002a.274.274 0 0 1-.014.002H7.022ZM11 7a2 2 0 1 0 0-4 2 2 0 0 0 0 4Zm3-2a3 3 0 1 1-6 0 3 3 0 0 1 6 0ZM6.936 9.28a5.88 5.88 0 0 0-1.23-.247A7.35 7.35 0 0 0 5 9c-4 0-5 3-5 4 0 .667.333 1 1 1h4.216A2.238 2.238 0 0 1 5 13c0-1.01.377-2.042 1.09-2.904.243-.294.526-.569.846-.816ZM4.92 10A5.493 5.493 0 0 0 4 13H1c0-.26.164-1.03.76-1.724.545-.636 1.492-1.256 3.16-1.275ZM1.5 5.5a3 3 0 1 1 6 0 3 3 0 0 1-6 0Zm3-2a2 2 0 1 0 0 4 2 2 0 0 0 0-4Z"/>
</svg>  
</span>
       <span class="feed_opttext"> Create a Group</span>
         
       </div>
       <div id="create_postbtn" class="feed_options">
       <span class="feed_opticons"> 
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
  <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z"/>
  <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z"/>
</svg>
</span>
       <span class="feed_opttext"> Create a Post</span>
         
       </div>
         
       </div>
       </div>
   
     </div>
    <div class="pick_topclass" id="option_tabdiv">
       
       <div id="tweet_optionbg">
       <div id="feed_optiontop"></div>
       <div id="feed_optioninner">  
       <div id="share_postbtn" class="feed_options">
       <span class="feed_opticons"> 
      <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-reply" viewBox="0 0 16 16"><path d="M6.598 5.013a.144.144 0 0 1 .202.134V6.3a.5.5 0 0 0 .5.5c.667 0 2.013.005 3.3.822.984.624 1.99 1.76 2.595 3.876-1.02-.983-2.185-1.516-3.205-1.799a8.74 8.74 0 0 0-1.921-.306 7.404 7.404 0 0 0-.798.008h-.013l-.005.001h-.001L7.3 9.9l-.05-.498a.5.5 0 0 0-.45.498v1.153c0 .108-.11.176-.202.134L2.614 8.254a.503.503 0 0 0-.042-.028.147.147 0 0 1 0-.252.499.499 0 0 0 .042-.028l3.984-2.933zM7.8 10.386c.068 0 .143.003.223.006.434.02 1.034.086 1.7.271 1.326.368 2.896 1.202 3.94 3.08a.5.5 0 0 0 .933-.305c-.464-3.71-1.886-5.662-3.46-6.66-1.245-.79-2.527-.942-3.336-.971v-.66a1.144 1.144 0 0 0-1.767-.96l-3.994 2.94a1.147 1.147 0 0 0 0 1.946l3.994 2.94a1.144 1.144 0 0 0 1.767-.96v-.667z"/></svg>
</span>
       <span class="feed_opttext"> Share Post </span>
         
       </div>
       <div id="save_postbtn" class="feed_options">
       <span class="feed_opticons"> 
   <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-save" viewBox="0 0 16 16">
  <path d="M2 1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H9.5a1 1 0 0 0-1 1v7.293l2.646-2.647a.5.5 0 0 1 .708.708l-3.5 3.5a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L7.5 9.293V2a2 2 0 0 1 2-2H14a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h2.5a.5.5 0 0 1 0 1H2z"/>
</svg>
</span>
       <span class="feed_opttext"> Save Post</span>
         
       </div>
       <div id="del_postbtn" class="feed_options display_none">
       <span class="feed_opticons"> 
   <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16"><path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6Z"/><path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1ZM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118ZM2.5 3h11V2h-11v1Z"/></svg>
</span>
       <span class="feed_opttext"> Delete Post</span>
         
       </div>
         
       </div>
       </div>
   
     </div>
     <!-- end of a section -->
        
     <div id="club_formbg" class="slide_navclass">
     <div id="club_forminner" class="">
       
     <div id="club_formtop" class="">
       
       <span id="club_formexit"><svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="#fff" class="bi bi-chevron-left" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z"/></svg></span>  
       <span id="club_formtitle">Create Group </span>  
     </div>
     
     <div id="club_formbot" class="">
       
       <div id="club_firstsection" class="club_formsections">
       <div id="" class="club_forminside">
         
         <div class="club_formparts">
           <div> Name </div>
           <input id="club_ansname">
          <div class="font_twelve" id="club_nameerror"></div>
         </div>
         
         <div class="club_formparts">
           <div> Select Group Type </div>
           <nav id="club_formnav">
             <span id="club_anstype">
               Public
             </span>
             <span class ="button_effect">
               <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-down-fill" viewBox="0 0 16 16">
  <path d="M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z"/>
</svg>
             </span>
           </nav>
          
         </div>
         
         <div class="club_formparts">
           <div> Group Description </div>
           <textarea id="club_ansdesc"></textarea>
          
         </div>  
         
         <div id="club_firstsubmit" class="club_formsubmits display_none"> Next </div>
         
       </div>
        </div>
     <!-- end of a section -->
        
        
       <div id="club_secondsection" class="club_formsections">
         <nav>
         <header> Select multiple choices </header>
         
  <label class="check">
<input type="checkbox" class="group_radios">
<div class="checker"></div>
<span> Movies </span>
</label>
  <label class="check">
<input type="checkbox" class="group_radios">
<div class="checker"></div>
<span> Series </span>
</label>
  <label class="check">
<input type="checkbox" class="group_radios">
<div class="checker"></div>
<span> Anime </span>
</label>
  <label class="check">
<input type="checkbox" class="group_radios">
<div class="checker"></div>
<span> Hollywood </span>
</label>
  <label class="check">
<input type="checkbox" class="group_radios">
<div class="checker"></div>
<span> Bollywood </span>
</label>
  <label class="check">
<input type="checkbox" class="group_radios">
<div class="checker"></div>
<span> K Drama </span>
</label>
  <label class="check">
<input type="checkbox" class="group_radios">
<div class="checker"></div>
<span> Filipino </span>
</label>
  <label class="check">
<input type="checkbox" class="group_radios">
<div class="checker"></div>
<span> Action </span>
</label>
  <label class="check">
<input type="checkbox" class="group_radios">
<div class="checker"></div>
<span> Adventure </span>
</label>
  <label class="check">
<input type="checkbox" class="group_radios">
<div class="checker"></div>
<span> Animation </span>
</label>
  <label class="check">
<input type="checkbox" class="group_radios">
<div class="checker"></div>
<span> Comedy </span>
</label>
  <label class="check">
<input type="checkbox" class="group_radios">
<div class="checker"></div>
<span> Documentary </span>
</label>
  <label class="check">
<input type="checkbox" class="group_radios">
<div class="checker"></div>
<span> Documentary </span>
</label>
  <label class="check">
<input type="checkbox" class="group_radios">
<div class="checker"></div>
<span> Documentary </span>
</label>
  <label class="check">
<input type="checkbox" class="group_radios">
<div class="checker"></div>
<span> Documentary </span>
</label>
  <label class="check">
<input type="checkbox" class="group_radios">
<div class="checker"></div>
<span> Documentary </span>
</label>
  <label class="check">
<input type="checkbox" class="group_radios">
<div class="checker"></div>
<span> Documentary </span>
</label>
 

            </nav>
             <div id="club_secondsubmit" class="club_formsubmits"> Next </div>
       </div>
     <!-- end of a section -->
     
     
       <div id="club_thirdsection" class="club_formsections">
         
    <div> Upload a Cover Photo </div>
   <div id="club_coverimg">  
   
     <div class="display_flex align_center">
       <label for="club_coverinput" class="file-input-label">  
       <span> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-images" viewBox="0 0 16 16">
  <path d="M4.502 9a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z"/>
  <path d="M14.002 13a2 2 0 0 1-2 2h-10a2 2 0 0 1-2-2V5A2 2 0 0 1 2 3a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2v8a2 2 0 0 1-1.998 2zM14 2H4a1 1 0 0 0-1 1h9.002a2 2 0 0 1 2 2v7A1 1 0 0 0 15 11V3a1 1 0 0 0-1-1zM2.002 4a1 1 0 0 0-1 1v8l2.646-2.354a.5.5 0 0 1 .63-.062l2.66 1.773 3.71-3.71a.5.5 0 0 1 .577-.094l1.777 1.947V5a1 1 0 0 0-1-1h-10z"/>
</svg></span>
       <span>Upload Cover Photo </span>
  <input type="file" id="club_coverinput" accept="image/jpeg, image/png, image/gif, image/jpg" >
</label>

        </div>
        
   </div>
   <div id="club_posterimg">  
   
     <div class="display_flex align_center">
       <label for="club_posterinput" class="file-input-label">  
       <span><svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
  <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z"/>
</svg> </span>
  <input type="file" id="club_posterinput" accept="image/jpeg, image/png, image/gif, image/jpg" >
</label>

        </div>
        
   </div>
         
         
         <div id="club_thirdsubmit" class="club_formsubmits"> Create Group </div>
         
       </div>
     <!-- end of a section -->
       
       
            <div id="group_optionbg" class="">
       <div id="feed_optiontop"></div>
       <div id="feed_optioninner">
       <div id="public_groupbtn" class="feed_options">
       <span class="feed_opticons"> 
       <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-globe" viewBox="0 0 16 16">
  <path d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm7.5-6.923c-.67.204-1.335.82-1.887 1.855A7.97 7.97 0 0 0 5.145 4H7.5V1.077zM4.09 4a9.267 9.267 0 0 1 .64-1.539 6.7 6.7 0 0 1 .597-.933A7.025 7.025 0 0 0 2.255 4H4.09zm-.582 3.5c.03-.877.138-1.718.312-2.5H1.674a6.958 6.958 0 0 0-.656 2.5h2.49zM4.847 5a12.5 12.5 0 0 0-.338 2.5H7.5V5H4.847zM8.5 5v2.5h2.99a12.495 12.495 0 0 0-.337-2.5H8.5zM4.51 8.5a12.5 12.5 0 0 0 .337 2.5H7.5V8.5H4.51zm3.99 0V11h2.653c.187-.765.306-1.608.338-2.5H8.5zM5.145 12c.138.386.295.744.468 1.068.552 1.035 1.218 1.65 1.887 1.855V12H5.145zm.182 2.472a6.696 6.696 0 0 1-.597-.933A9.268 9.268 0 0 1 4.09 12H2.255a7.024 7.024 0 0 0 3.072 2.472zM3.82 11a13.652 13.652 0 0 1-.312-2.5h-2.49c.062.89.291 1.733.656 2.5H3.82zm6.853 3.472A7.024 7.024 0 0 0 13.745 12H11.91a9.27 9.27 0 0 1-.64 1.539 6.688 6.688 0 0 1-.597.933zM8.5 12v2.923c.67-.204 1.335-.82 1.887-1.855.173-.324.33-.682.468-1.068H8.5zm3.68-1h2.146c.365-.767.594-1.61.656-2.5h-2.49a13.65 13.65 0 0 1-.312 2.5zm2.802-3.5a6.959 6.959 0 0 0-.656-2.5H12.18c.174.782.282 1.623.312 2.5h2.49zM11.27 2.461c.247.464.462.98.64 1.539h1.835a7.024 7.024 0 0 0-3.072-2.472c.218.284.418.598.597.933zM10.855 4a7.966 7.966 0 0 0-.468-1.068C9.835 1.897 9.17 1.282 8.5 1.077V4h2.355z"/>
</svg>
</span>
      <div class="align_start display_column">
       <span class="feed_opttext"> Public Group </span>
       <span class="feed_opttext font_twelve"> Anyone can view posts. </span>
  
</div>
         
       </div>
       <div id="private_groupbtn" class="feed_options">
       <span class="feed_opticons"> 
   <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-house-lock" viewBox="0 0 16 16">
  <path d="M7.293 1.5a1 1 0 0 1 1.414 0L11 3.793V2.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v3.293l2.354 2.353a.5.5 0 0 1-.708.708L8 2.207l-5 5V13.5a.5.5 0 0 0 .5.5h4a.5.5 0 0 1 0 1h-4A1.5 1.5 0 0 1 2 13.5V8.207l-.646.647a.5.5 0 1 1-.708-.708L7.293 1.5Z"/>
  <path d="M10 13a1 1 0 0 1 1-1v-1a2 2 0 0 1 4 0v1a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-4a1 1 0 0 1-1-1v-2Zm3-3a1 1 0 0 0-1 1v1h2v-1a1 1 0 0 0-1-1Z"/>
</svg>
</span>
<div class="align_start display_column">
       <span class="feed_opttext"> Private Group </span>
       <span class="feed_opttext font_twelve"> Only Members can view posts. </span>
  
</div>
         
       </div>
         
       </div>
       </div>
       
     </div>
       
       
     </div>
     </div>
        
        
<!-- loader     -->
        
<div id="loader_spinbg">
<div id="loader_inner">
<svg class="spinner-container" width="50" height="50" viewBox="0 0 44 44">
<circle class="spinner-path" cx="22" cy="22" r="20" fill="none" stroke-width="4"></circle>
</svg>
</div>
</div>


<div id="phoenix_bg">
<div id="phoenix_inner">
<div id="phoenix_top"></div>
<div id="phoenix_bot">
<div id="phoeonix_left">
<div id="phoenix_name"> Trevor Noah fans </div>
<div id="phoenix_sub"> <span id="phoenix_number" class="font_twelve">15k</span> Subscribers </div>
  
</div>
<div id="phoeonix_right">
  <div id="phoenix_markbtn"> <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-bookmark-plus" viewBox="0 0 16 16"><path d="M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.777.416L8 13.101l-5.223 2.815A.5.5 0 0 1 2 15.5V2zm2-1a1 1 0 0 0-1 1v12.566l4.723-2.482a.5.5 0 0 1 .554 0L13 14.566V2a1 1 0 0 0-1-1H4z"/><path d="M8 4a.5.5 0 0 1 .5.5V6H10a.5.5 0 0 1 0 1H8.5v1.5a.5.5 0 0 1-1 0V7H6a.5.5 0 0 1 0-1h1.5V4.5A.5.5 0 0 1 8 4z"/></svg> </div>    
  <div id="phoenix_morebtn"> Read more </div>
</div>
  
</div>
  
</div>
</div>
        
   <div id="research_tab" class="pick_topclass">
   <div id="research_inner">
       
       
     </div>
     </div>
        
        <div id="gallery_bg" class ="pick_topclass">
        <div id="gallery_inner" class ="swiper_containerfive">
        <div id="gallery_top" class ="">
          <div id="gallery_count">3 / 23</div>
          <div id="gallery_btns">
            <span id="gallery_share"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-reply" viewBox="0 0 16 16"><path d="M6.598 5.013a.144.144 0 0 1 .202.134V6.3a.5.5 0 0 0 .5.5c.667 0 2.013.005 3.3.822.984.624 1.99 1.76 2.595 3.876-1.02-.983-2.185-1.516-3.205-1.799a8.74 8.74 0 0 0-1.921-.306 7.404 7.404 0 0 0-.798.008h-.013l-.005.001h-.001L7.3 9.9l-.05-.498a.5.5 0 0 0-.45.498v1.153c0 .108-.11.176-.202.134L2.614 8.254a.503.503 0 0 0-.042-.028.147.147 0 0 1 0-.252.499.499 0 0 0 .042-.028l3.984-2.933zM7.8 10.386c.068 0 .143.003.223.006.434.02 1.034.086 1.7.271 1.326.368 2.896 1.202 3.94 3.08a.5.5 0 0 0 .933-.305c-.464-3.71-1.886-5.662-3.46-6.66-1.245-.79-2.527-.942-3.336-.971v-.66a1.144 1.144 0 0 0-1.767-.96l-3.994 2.94a1.147 1.147 0 0 0 0 1.946l3.994 2.94a1.144 1.144 0 0 0 1.767-.96v-.667z"/></svg></span>
            <span id="gallery_exit">
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-x" viewBox="0 0 16 16">
  <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>
</svg>
            </span>
          </div>
        </div>
        <div id="gallery_val" class ="swiper-wrapper">
          <div class="swiper-slide gallery_items"></div>
          <div class="swiper-slide gallery_items"></div>
          <div class="swiper-slide gallery_items"></div>
          <div class="swiper-slide gallery_items"></div>
        </div>
        <div id="gallery_bot" class =""></div>
          
           </div>
           </div>
           
           
           <div id="whatsapp_bg" class="pick_topclass">
           <div id="whatsapp_inner" class="">
           <div id="whatsapp_send" class="">
             <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-reply-all-fill" viewBox="0 0 16 16">
  <path d="M8.021 11.9 3.453 8.62a.719.719 0 0 1 0-1.238L8.021 4.1a.716.716 0 0 1 1.079.619V6c1.5 0 6 0 7 8-2.5-4.5-7-4-7-4v1.281c0 .56-.606.898-1.079.62z"/>
  <path d="M5.232 4.293a.5.5 0 0 1-.106.7L1.114 7.945a.5.5 0 0 1-.042.028.147.147 0 0 0 0 .252.503.503 0 0 1 .042.028l4.012 2.954a.5.5 0 1 1-.593.805L.539 9.073a1.147 1.147 0 0 1 0-1.946l3.994-2.94a.5.5 0 0 1 .699.106z"/>
</svg>
           </div>
           <div id="whatsapp_div">
           <div class="" id="whatsapp_input" contenteditable="true" data-placeholder="Type something"></div>
             
           </div>
           <div id="whatsapp_top" class="">
               <span id="whatsapp_exit"> 
                <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="#fff" class="bi bi-chevron-left" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z"/></svg>
               </span>
               <span id="whatsapp_count"> None Selected</span>
           </div>
           <div id="whatsapp_head" class="">
         
           </div>
           <div id="whatsapp_bot" class="">
             
             
           </div>
             
             
             
             
           </div>
           </div>
           
    </body>
    
<!-- html   end of html <html> </html> -->
    
    
    
    <script>
      

const firebaseConfig = {

  apiKey: "AIzaSyACUFoBAI4Fb-wfN6h9GVj28GJxjhuohtg",
  authDomain: "poprizon-c0ae3.firebaseapp.com",
  databaseURL: "https://poprizon-c0ae3-default-rtdb.firebaseio.com",
  projectId: "poprizon-c0ae3",
  storageBucket: "poprizon-c0ae3.appspot.com",
  messagingSenderId: "285270129714",
  appId: "1:285270129714:web:eef0e07a011265ffd7d02b",
  measurementId: "G-2Q5M8RSXS8"
};

// Initialize Firebase

firebase.initializeApp(firebaseConfig);
 const API_KEY = 'd7b06dbe31895d3e7aa40af4d69173db';
 const OMDB_KEY = '9ccd3fcf';
 const LOCATION_KEY = '8pwbtvahlhvhkweo';
 var d = new Date(); 

       var time = d.toLocaleTimeString();
      var date = d.getDate();
   const const_year = d.getFullYear().toString();
   
var now = new Date();
var startOfYear = new Date(now.getFullYear(), 0, 0);
var diff = now - startOfYear;
var oneWeek = 1000 * 60 * 60 * 24 * 7;
const const_week = Math.floor(diff / oneWeek);
 
 var CURRENT_TAB ;
 const visitedPages = [];
 var PREVIOUS_TAB ;
 
 function loading(){

    //document.getElementById("plus").style.display="block";
document.getElementById('welcome_bg').style.width = '0';
   document.getElementById("welcome_inner").style.display="none";
  
document.getElementById('intro_body').style.width = '100%';
  $("#intro_bot").css({"display":"flex"})
  $("#intro_skip").css({"display":"flex"})
  
  
  
//document.getElementById('2nd_come').style.width = '100%';
}
setTimeout(loading,3000)


$(document).ready(function(){

    $("#offix_circleexit").click(function(){
    document.querySelector('.film_subtabs').style.marginRight = '100%';
     document.getElementById('post_stuffbg').style.width = '100%';
     document.getElementById("post_textarea").focus()
    
      
    })
       $("#post_stuffexit").click(function(){
   document.querySelector('.film_subtabs').style.marginRight = '0%';
     document.getElementById('post_stuffbg').style.width = '0%';
    })
    
    $("#tweet_msgbtn").click(function(){
     
     $(".tweet_subtabs").hide()
     $(".tweet_controlbtns").removeClass("tweet_controlclass")
     $("#tweet_msgdiv").show()
     $(this).addClass("tweet_controlclass")
    })
    $("#tweet_backbtn").click(function(){
     
     $(".tweet_subtabs").hide()
     $(".tweet_controlbtns").removeClass("tweet_controlclass")
     $("#tweet_backdiv").show()
     $(this).addClass("tweet_controlclass")
    })
    $("#tweet_imgbtn").click(function(){
     
     $(".tweet_subtabs").hide()
     $(".tweet_controlbtns").removeClass("tweet_controlclass")
     $("#tweet_imgdiv").show()
     $(this).addClass("tweet_controlclass")
    })
    $("#tweet_pollbtn").click(function(){
     
     $(".tweet_subtabs").hide()
     $(".tweet_controlbtns").removeClass("tweet_controlclass")
     $("#tweet_polldiv").show()
     $(this).addClass("tweet_controlclass")
    })
    $("#tweet_listbtn").click(function(){
     
     $(".tweet_subtabs").hide()
     $(".tweet_controlbtns").removeClass("tweet_controlclass")
     $("#tweet_listdiv").show()
     $(this).addClass("tweet_controlclass")
    })
    
    $("#tweet_exitbtn").click(function(){
     document.getElementById("tweet_bg").classList.remove ("drop");
     
        history.back();     
    CURRENT_TAB = visitedPages[visitedPages.length - 1];
  history_back()
    })
    $("#create_postbtn").click(function(){
       firebase.database().ref("my_channels_root/"+useremail .toString()+"/info").on("value", (snapshot) => {
  
    var imge  =[snapshot.val().image];
    var nam  =[snapshot.val().name];
      document.getElementById("msg_textimg").style.backgroundImage = "url("+imge+")";
    //  alert(imge)
   
})
        document.getElementById("feed_tabdiv").classList.remove("drop");     
        
     document.getElementById("tweet_bg").classList.add("drop");
      /*
 PREVIOUS_TAB = CURRENT_TAB
  CURRENT_TAB = "tweet_bg"
  history.pushState(null, null, null);
   visitedPages.push("tweet_bg");
   */
    PREVIOUS_TAB = CURRENT_TAB
    CURRENT_TAB = "tweet_bg"
   var newURL = "tweet_bg";
   history.replaceState(null, null, null);
   var currentStateIndex = visitedPages.length - 1;
  visitedPages[currentStateIndex] = newURL;
  
  //   document.getElementById("post_textarea").focus()
    
      
    })
    $("#create_groupbtn").click(function(){
     
        document.getElementById("feed_tabdiv").classList.remove("drop");     


clear_groupform()
     document.querySelector('.film_subtabs').style.marginRight = '100%';
     document.getElementById("club_formbg").style.width = '100%';     
    
    PREVIOUS_TAB = CURRENT_TAB
    CURRENT_TAB = "club_formbg"
   var newURL = "club_formbg";
   history.replaceState(null, null, null);
   var currentStateIndex = visitedPages.length - 1;
  visitedPages[currentStateIndex] = newURL;
  
  //   document.getElementById("post_textarea").focus()
    $("#club_firstsubmit").css({"display":"flex"})
      
    })
    $("#post_plus").click(function(){
     document.getElementById("post_makertab").classList.add("drop");
  //   document.getElementById("post_textarea").focus()
    
      
    })
       $("#sms_stuffexit").click(function(){
   document.getElementById("post_smsbg").classList.remove("drop");
    })
       $("#post_makerexit").click(function(){
   document.getElementById("post_makertab").classList.remove("drop");
    })
    
    
})
$(function(){
  
    $(document).mouseup(function(e) {



    var container = $("#add_nomibg");


    // if the target of the click isn't the container nor a descendant of the container
    if (!container.is(e.target) && container.has(e.target).length === 0) 
    {
        $("#add_nomibig").hide()
        container.css({"bottom":"-100%"});
      
    }
});
    $("#follow_tabbtn").click(function(){
      $(".film_controlbtns").removeClass("week_controlclass") 
      $(this).addClass("week_controlclass") 
      $(".film_subtabs").hide()
      $("#follow_tabdiv").show()
    })
    $("#feed_tabbtn").click(function(){
   //   $(".film_controlbtns").removeClass("week_controlclass") 
  //    $(this).addClass("week_controlclass") 
    //  $(".film_subtabs").hide()
     document.getElementById("feed_tabdiv").classList.add("drop");     
       PREVIOUS_TAB = CURRENT_TAB

  CURRENT_TAB = "feed_tabdiv"

  history.pushState(null, null, null);
   visitedPages.push("feed_tabdiv");
    })
    $("#reel_tabbtn").click(function(){
      $(".film_controlbtns").removeClass("week_controlclass") 
      $(this).addClass("week_controlclass") 
      $(".film_subtabs").hide()
      $("#reel_tabdiv").show()
    })
    
    $("#intro_skip").click(function(){

    document.getElementById('intro_body').style.width = '0';
 //   document.getElementById('content').style.marginLeft = '0';
      $("#intro_bot").hide()
      $("#intro_skip").hide()
   $("#second_come").show()  
   $("#second_come").addClass("shrink_class")  
setTimeout(function() {



   $("#second_come").removeClass("shrink_class")  
  }, 100)
     history.back();     

    CURRENT_TAB = visitedPages[visitedPages.length - 1];

  history_back()
     }) 
    $("#content_skip").click(function(){
$("#intro_skip").click()
}) 
  
}) 
//. setTimeout(openNav,2000)
 $(function(){
    $("#switch_in").click(function(){
      $("#palm_signup").fadeOut()
       $("#palm_signin").slideDown()
       $("#palm_signin").css({"display":"flex"})
     //  alert("")
    })
    $("#check_div").click(function(){
      $(this).toggleClass("color_orange")
      
       PREVIOUS_TAB = CURRENT_TAB

  CURRENT_TAB = "term_slide"

  history.pushState(null, null, null);
   visitedPages.push("term_slide");
      
      document.getElementById('term_slide').style.width = '100%';

    })
    $(function(){

//     terms      term       my_terms   
   firebase.database().ref('my_terms/paragraph_one').on("value", (snapshot) => {
  
    var note  =[snapshot.val().note];
   $(".condition_one").text(note)
})
   firebase.database().ref('my_terms/paragraph_two').on("value", (snapshot) => {
  
    var note  =[snapshot.val().note];
   $(".condition_two").text(note)
})
   firebase.database().ref('my_terms/paragraph_three').on("value", (snapshot) => {
  
    var note  =[snapshot.val().note];
   $(".condition_three").text(note)
})
   firebase.database().ref('my_terms/paragraph_four').on("value", (snapshot) => {
  
    var note  =[snapshot.val().note];
   $(".condition_four").text(note)
})
   firebase.database().ref('my_terms/paragraph_five').on("value", (snapshot) => {
  
    var note  =[snapshot.val().note];
   $(".condition_five").text(note)
})
   firebase.database().ref('my_terms/paragraph_six').on("value", (snapshot) => {
  
    var note  =[snapshot.val().note];
   $(".condition_six").text(note)
})
   firebase.database().ref('my_terms/paragraph_seven').on("value", (snapshot) => {
  
    var note  =[snapshot.val().note];
   $(".condition_seven").text(note)
})
   firebase.database().ref('my_terms/paragraph_eight').on("value", (snapshot) => {
  
    var note  =[snapshot.val().note];
   $(".condition_eight").text(note)
})

    })
$("#term_slide_exit").click(function(){

  document.getElementById('term_slide').style.width = '0%';
         history.back();     

    CURRENT_TAB = visitedPages[visitedPages.length - 1];

  history_back()
})
    $("#switch_up").click(function(){
      $("#palm_signin").fadeOut()
       $("#palm_signup").slideDown()
       $("#palm_signup").css({"display":"flex"})
     //  alert("")
    })
    
    $("#sign_upbtn").click(function(){
      var a = document.getElementById("new_gotname").value
      var b = document.getElementById("new_gotmail").value
      var c = document.getElementById("new_gotpass").value
     
     var myDiv = document.querySelector('#check_div');


      a.trim()
      b.trim().toLowerCase()
      var d = b.replace('@gmail.com','');
      if(a =="" ||  d =="" || c =="" || (!myDiv.classList.contains('color_orange'))){
         failure_asake("Be sure to fill the input boxes and agree to our terms and conditions")    
        return false ;
      }else{
      var e = d.trim()+"@gmail.com" 
        firebase.auth().createUserWithEmailAndPassword(e.toString(), c.toString()).then(function(){

  var d = new Date(); 

       var time = d.toLocaleTimeString();
      var date = d.getDate();
    var fullyear = d.getFullYear();
    var month = d.getMonth();
   month= month+1;
var date=(fullyear+"|"+month+"|"+date);
/*
var playersRef = firebase.database().ref("users_list/"+d.toLowerCase().trim()+"/");
//   var youz = firebase.database().ref("my_subscribelist/"+email.toLowerCase().trim()+"/");
playersRef.update ({ 
username: a.toString().trim(), 
password: c.toString(), 
date: date.toString(), 
time: time.toString(), 
email: d.toString().trim()});
/*
var items = ['xavier4125_sport%telly','xavier4125_militelly','xavier4125_rated','xavier4125_telly%scary','xavier4125_adventure%telly','xavier4125_hero%telly','xavier4125_lgbtq%telly','xavier4125_m.a.d','xavier4125_fantelly','xavier4125_crime%telly','xavier4125_space%telly','xavier4125_wuxia%telly','xavier4125_cop%telly','xavier4125_religious','xavier4125_alien%&%zombie']
var item = items[Math.floor(Math.random()*items.length)];

youz.push().set({
           "useremail":email.toString().toLowerCase().trim(), 
           "channelId":item.toString(),
            "name":"name".toString(),
           "date":date,
           "username":mane.toString().trim(),
            "time":time

        }) 
*/
  
}).catch(function(error) {
  
 failure_asake(error.message )    
//alert(error.message); 
});
      }
    })
    
     $("#forgot_passbtn").click(function(){
   document.getElementById("forgot_passdiv").style.bottom = "10px";
   document.getElementById("forgot_passval").focus()
   $(document).mouseup(function(e) {



    var container = $("#forgot_passdiv");


    // if the target of the click isn't the container nor a descendant of the container
    if (!container.is(e.target) && container.has(e.target).length === 0) 
    {
        container.css({"bottom":"-300px"});
    }
});
       
     })
     $("#sign_inbtn").click(function(){

      var a = document.getElementById("new_logmail").value

      var b = document.getElementById("new_logpass").value
     

      a.trim()
      b.trim().toLowerCase()
      var c = a.replace('@gmail.com','');
      if(b =="" ||  c ==""){
        return false ;
      }else{
        var d = c.trim()+"@gmail.com"  
        firebase.auth().signInWithEmailAndPassword(d.toString(), b.toString()).catch(function(error) {
          
   failure_asake(error.message )    
        })
        
        
        
        
      }
     })
     
     
     
     
  })  // end of all login functions  
  
   $("#forgot_passval").keyup(function(event) {



        if (event.which === 13) {
           $("#forgot_passdiv").css({"bottom":"-300px"});
    var auth = firebase.auth();
    var box =$("#forgot_passval").val()
    if(box!==''){
    var lox = box.toLowerCase()
    var fox =lox.trim()
     var foxy=(fox).replace('@gmail.com','');
    var bhai= foxy+"@gmail.com"
    //alert(bhai)
    auth.sendPasswordResetEmail(bhai) 
    .then(function() {
      
      let msg = 'Sent to ' + bhai+"  . You may want to check your spam folders. EXPLORE...";
        
      failure_asake(msg )    
         
 }) .catch(function(error) {
  let msg = " Sending message encountered some issues.  EXPLORE...";
        
      failure_asake(msg )    
 });
    } //end of if function 
    else{
return false;
    }//end of else function 
  
  
  
        } // end of enter key 
})
  
  
  $(document).mouseup(function(e) {



    var container = $("#asake_alertfailure");


    // if the target of the click isn't the container nor a descendant of the container
    if (!container.is(e.target) && container.has(e.target).length === 0) 
    {
        container.css({"bottom":"-50%"});
    }
});
    function myFunction() {
    var x = document.getElementById("new_gotpass");
    if (x.type == "password") 
    {
        x.type = "text";
    } 
    else 
    {
        x.type = "password";
    }
    move_cursorback("new_gotpass")
}
$(document).mouseup(function(e) {
    var container = $("#new_gotpass");


    // if the target of the click isn't the container nor a descendant of the container
    if (!container.is(e.target) && container.has(e.target).length === 0) 
    {
      document.getElementById("new_gotpass").type  = "password";
    }
});
$(document).mouseup(function(e) {
    var container = $("#new_logpass");


    // if the target of the click isn't the container nor a descendant of the container
    if (!container.is(e.target) && container.has(e.target).length === 0) 
    {
      document.getElementById("new_logpass").type  = "password";
    }
});
    function myFunctiontwo() {
    var x = document.getElementById("new_logpass");
    if (x.type == "password") 
    {
        x.type = "text";
    } 
    else 
    {
        x.type = "password";
    }
     move_cursorback("new_logpass")
}


firebase.auth().onAuthStateChanged(function(user) { 

if (user) { 
    
 $(function(){
   
//alert("")  auth     

const API_URL = 'https://api.themoviedb.org/3';

// Get a random popular movie or TV show
async function getRandomFilm() {
  const mediaTypes = ['movie', 'tv'];
  const randomMediaType = mediaTypes[Math.floor(Math.random() * mediaTypes.length)];
  const endpoint = randomMediaType === 'movie' ? 'movie/popular' : 'tv/popular';
  const response = await fetch(`${API_URL}/${endpoint}?api_key=${API_KEY}&language=en-US&page=1`);
  const data = await response.json();
  const randomIndex = Math.floor(Math.random() * data.results.length);
  const film = data.results[randomIndex];
  return { ...film, media_type: randomMediaType };
}

// Example usage
getRandomFilm().then(film => {
  /*
  if(film.media_type === "movie"){
    alert("yes")
  }
  else{
    alert("yesterday ") 
    
  }
  
  console.log(`The randomly selected film is a ${film.media_type === 'movie' ? 'movie' : 'TV series'}.`);
  console.log(film);  
  */
 // alert(film.media_type)
//  open_overallwithid(film.id, film.media_type)
});


 })
 // end of function 
var coke = firebase.auth().currentUser
   useremail  =(coke.email).replace('@gmail.com','');
 if (user.photoURL) {
    // User has a profile picture
     profileImageURL = user.photoURL;
   
  } else {
  profileImageURL = "https://www.dropbox.com/s/cpuoiau1mh6ghed/images.png?raw=1";
  }
  
firebase.database().ref("users_list/"+useremail).on("value", (snapshot) => {
  
    username =[snapshot.val().username];
  
})
var verified_email = "Poprizon"
  firebase.database().ref("my_company_details").on("value", (snapshot) => {
   
  verified_email =[snapshot.val().email];
  
  })
  
  
  
  fetch('https://ipapi.co/json/')
    .then(response => response.json())
    .then(data => {
      user_nation = data.country_name;
      // user_nation    country   
   //   console.log('User country:', country);
    })
    .catch(error => {
   //   console.log('Error occurred while fetching user country:', error);
    });
var countryMapping = {
  'Afghanistan': 'AF',
  'Albania': 'AL',
  'Algeria': 'DZ',
  'American Samoa': 'AS',
  'Andorra': 'AD',
  'Angola': 'AO',
  'Anguilla': 'AI',
  'Antarctica': 'AQ',
  'Antigua and Barbuda': 'AG',
  'Argentina': 'AR',
  'Armenia': 'AM',
  'Aruba': 'AW',
  'Australia': 'AU',
  'Austria': 'AT',
  'Azerbaijan': 'AZ',
  'Bahamas (the)': 'BS',
  'The Bahamas ': 'BS',
  'Bahrain': 'BH',
  'Bangladesh': 'BD',
  'Barbados': 'BB',
  'BelarusBelarus': 'BY',
  'Belgium': 'BE',
  'Bermuda': 'BM',
  'Benin': 'BJ',
  'Belize': 'BZ',
  'Bhutan': 'BT',
  'Botswana': 'BW',
  'Bouvet Island': 'BV',
  'Brazil': 'BR',
  'Bulgaria': 'BG',
  'Burkina Faso': 'BF',
  'Burundi': 'BI',
  'Cabo Verde': 'CV',
  'Cambodia': 'KH',
  'Cameroon': 'CM',
  'Canada': 'CA',
  'Cayman Islands (the)': 'KY',
  'The Cayman Islands': 'KY',
  'Central African Republic (the)': 'CF',
  'The Central African Republic': 'CF',
  'Chad': 'TD',
  'Chile': 'CL',
  'China': 'CN',
  'Congo ': 'CG',
  'Comoros ': 'KM',
  'Colombia': 'CO',
  'Costa Rica': 'CR',
  'Croatia': 'HR',
  'Cuba': 'CU',
  'Czechia': 'CZ',
  'Cyprus': 'CY',
  'Curaçao': 'CW',
  'Djibouti': 'DJ',
  'Denmark': 'DK',
  "Côte d'Ivoire": 'CL',
  'Dominica': 'DM',
  'Dominican Republic (the)': 'DO',
  'The Dominican Republic': 'DO',
  'Ecuador': 'EC',
  'Egypt': 'EG',
  'El Salvador': 'SV',
  'Equatorial Guinea': 'GQ',
  'Eritrea': 'ER',
  'Estonia': 'EE',
  'Eswatini': 'SZ',
  'Finland': 'FL',
  'Fiji': 'FJ',
  'Ethiopia': 'ET',
  'France': 'FR',
  'French Guiana': 'GF',
  'French Polynesia': 'PF',
  'Gabon': 'GA',
  'Gambia ': 'GM',
  'Georgia': 'GE',
  'Germany': 'DE',
  'Ghana': 'GH',
  'Gibraltar': 'GL',
  'Greece': 'GR',
  'Greenland': 'GL',
  'Grenada': 'GD',
  'Guadeloupe': 'GP',
  'Guam': 'GU',
  'Guatemala': 'GT',
  'Guinea': 'GN',
  'Guinea-Bissau': 'GW',
  'Haiti': 'HT',
  'Honduras': 'HN',
  'Hong Kong': 'HK',
  'Hungary': 'HU',
  'Iceland': 'IS',
  'India': 'IN',
  'Indonesia': 'ID',
  'Iran': 'IR',
  'Iraq': 'IQ',
  'Ireland': 'IE',
  'Italy': 'IT',
  'Israel': 'IL',
  'Isle of Man': 'IM',
  'Jamaica': 'JM',
  'Japan': 'JP',
  'Jersey': 'JE',
  'Jordan': 'JO',
  'Kazakhstan': 'KZ',
  'Kenya': 'KE',
  'South Korea': 'KR',
  'Kuwait': 'KW',
  'Lebanon': 'LB',
  'Lesotho': 'LS',
  'Liberia': 'LR',
  'Liechtenstein': 'LI',
  'Lithuania': 'LT',
  'Luxembourg': 'LU',
  'Macao': 'MO',
  'Madagascar': 'MG',
  'Malawi': 'MW',
  'Malaysia': 'MY',
  'Maldives': 'MV',
  'Mali': 'ML',
  'Malta': 'MT',
  'Martinique': 'MQ',
  'Mauritania': 'MR',
  'Marshall Islands': 'MH',
  'Mauritius': 'MU',
  'Mayotte': 'YT',
  'Mexico': 'MX',
  'Monaco': 'MC',
  'Mongolia': 'MN',
  'Montenegro': 'ME',
  'Myanmar': 'MM',
  'Morocco': 'MA',
  'Mozambique': 'MZ',
  'Namibia': 'NA',
  'Nauru': 'NR',
  'Nepal': 'NP',
  'Netherlands': 'NL',
  'New Zealand': 'NZ',
  'Niger': 'NE',
  'Nigeria': 'ng',
  'Norway': 'NO',
  'Oman': 'OM',
  'Pakistan': 'PK',
  'Palau': 'PW',
  'Palestine': 'PS',
  'Panama': 'PA',
  'Paraguay': 'PY',
  'Peru': 'PE',
  'Philippines': 'PH',
  'Poland': 'PL',
  'Portugal': 'PT',
  'Puerto Rico': 'PR',
  'Qatar': 'QA',
  'Romania': 'RO',
  'Russia': 'RU',
  'Rwanda': 'RW',
  'Samoa': 'WS',
  'Saudi Arabia': 'SA',
  'Senegal': 'SN',
  'Serbia': 'RS',
  'Sao Tome and Principe': 'ST',
  'Seychelles': 'SC',
  'Sierra Leone': 'SL',
  'Singapore': 'SG',
  'South Africa': 'ZA',
  'Somalia': 'SO',
  'South Sudan': 'SS',
  'Spain': 'ES',
  'Sri Lanka': 'LK',
  'Sudan': 'SD',
  'Sweden': 'SE',
  'Switzerland': 'CH',
  'Taiwan': 'TW',
  'Tajikistan': 'TJ',
  'Tanzania': 'TZ',
  'Thailand': 'TH',
  'Togo': 'TG',
  'Tunisia': 'TN',
  'Turkey': 'TR',
  'Turkmenistan': 'TM',
  'Uganda': 'UG',
  'Ukraine': 'UA',
  'United Arab Emirates': 'AE',
  'United Kingdom': 'GB',
  'Britain': 'GB',
  'United Kingdom of Great Britain and Northern Ireland': 'GB',
  'United States of America': 'US',
  'United States': 'US',
  'America': 'US',
  'Uruguay': 'UY',
  'Venezuela': 'VE',
  'Viet Nam': 'VN',
  'Yemen': 'YE',
  'Zambia': 'ZM',
  'Zimbabwe': 'ZW'
  
  // Add more country mappings as needed
};

function getCountryAbbreviation(countryName) {
  var formattedCountryName = countryName.trim();
  return countryMapping[formattedCountryName] || '';
}

fetch(`https://api.themoviedb.org/3/configuration/languages?api_key=${API_KEY}`)
  .then(response => response.json())
  .then(response => console.log(response))
  .catch(err => console.error(err));

window.onload = function(){
  
//  console.log('Country Abbreviation:', countryAbbreviation);


  $(function(){
var countryAbbreviation = getCountryAbbreviation(user_nation);

    

var currentPage = 1;
var moviesPerPage = 15;
var totalMovies = 0;

function fetchLocalMovies() {
  // Calculate the total number of pages needed to fetch the desired number of movies
  var totalPages = Math.ceil(totalMovies / moviesPerPage);
  
  // Check if all movies have been fetched already
  if (currentPage > totalPages) {
 //   console.log('All movies have been fetched!');
    return;
  }
  
  // /const apiUrl = `https://api.themoviedb.org/3/discover/movie?api_key=${apiKey}`;
//var bedy = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&region=${countryAbbreviation}`;

//
//
  var bedy = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&region=IN&page=${currentPage}`
  //  var bedy = `https://api.themoviedb.org/3/movie/upcoming?api_key=${API_KEY}&language=en-US&page=${currentPage}`
//  alert(bedy )
  fetch(bedy)
    .then(response => response.json())
    .then(data => {
      var popularLateDiv = document.getElementById('local_movies');  
      data.results.forEach(movie => {
    var a = document.createElement("div")
   
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
     $(a).addClass("late_kids")
     $(a).appendTo("#local_movies")
     $(a).click(function(){
       open_opera (movie.title, movie.id, bedy)
     })
      });
      
      // Increment the current page counter
      currentPage++;
    })
    .catch(error => {
     // console.error('Error fetching movies:', error);
    });
    
}

// Wrap the code inside DOMContentLoaded event listener
$(function(){
  // Fetch the total number of movies from TMDB API to calculate the total number of pages
  fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&region=${countryAbbreviation}&sort_by=popularity.desc&include_adult=false&with_original_language=en`)
    .then(response => response.json())
    .then(data => {
      totalMovies = data.total_results;
      
      fetchLocalMovies();
    })
    .catch(error => {
    //  console.error('Error fetching total number of movies:', error);
    });

  document.getElementById('local_movies').addEventListener('scroll', function(event) {
    // Check if the user has scrolled to the end of the div
    if (event.target.scrollLeft + event.target.clientWidth + 1 >= event.target.scrollWidth) {
     
      fetchLocalMovies();
    }
  });

});

})  // end of latest 



}
  
  
  
  
  
  /*
 
      */
  
/*
  var bad = user.email
var d = new Date(); 
       var time = d.toLocaleTimeString();
      var date = d.getDate();
    var fullyear = d.getFullYear();
    var month = d.getMonth();
   month= month+1;
var date=(fullyear+"|"+month+"|"+date);
document.getElementById("pals").style.display = "block";
     document.getElementById("login").style.display = "none";
     document.getElementById("new_signbg").style.display = "none";
     */
     //alert("someone in")
// User is signed in. 
  //$("#1st_come").css({'margin-left':'-100%'})
 $("#1st_come").hide()
  $("#all_tabs").fadeIn(2500)
  var myElement = document.getElementById('1st_come');
myElement.style.left = '150px';
myElement.style.top = '100px';

document.getElementById('viewtab').style.width = '98%';
$("#view_footbtn").click()
/*
CURRENT_TAB = "viewtab"
 var newState = { context: "viewtab" };
  var pageTitle = "viewtab Page";
  var newURL = "viewtab";

  history.pushState(null, null, null);
   visitedPages.push(newURL);
*/
} else {
    
       PREVIOUS_TAB = CURRENT_TAB

  CURRENT_TAB = "intro_body"

   
  history.pushState(null, null, null);
   visitedPages.push("intro_body");
 $("#all_tabs").hide()
      
      
}
})
    


  $(function(){
  $(function(){
   // $("#view_footbtn").click()
  })
  //    all            all         all function      
    
    
    $(".week_topmovbtn").click(function(){
    var a = $(this).text()
    var b =a.replaceAll(" ","").trim()
  open_votetab(b)
    })
    $("#week_exitbtn").click(function(){
    
    document.getElementById("week_bg").classList.remove("drop");
    })
  $(function(){
    
   
     
     $("#search_movbtn").click(function(){
       $(".search_answertabs").hide()
       $("#answer_movies").show()
         $(".search_controlbtns").removeClass("week_controlclass")
     $(".search_controlbtns").css({"background-color":"#4444"})
      $(this).css({"background-color":"#e67e22"})
     })
     $("#search_serbtn").click(function(){
       $(".search_answertabs").hide()
       $("#answer_series").show()
         $(".search_controlbtns").removeClass("week_controlclass")
       $(".search_controlbtns").css({"background-color":"#4444"})
      $(this).css({"background-color":"#e67e22"})
     })
     
   
     
     $("#tag_exitbtn").click(function(){
    
    document.getElementById("tag_bg").classList.remove("drop");
       if(typeof clear_searchtagurl2 != 'function'){
   window.clear_searchtagurl2 = function(){
    return false;
   };
}
  if(typeof clear_searchtagurl1 != 'function'){
   window.clear_searchtagurl1 = function(){
    return false;
   };
}
     clear_searchtagurl1()
     clear_searchtagurl2()
       history.back();     
    CURRENT_TAB = visitedPages[visitedPages.length - 1];
  history_back()
   //    $(".search_tagdivs").text("")
     setTimeout(function() {
  }, 1000);
    })  
   /*
     $(".option_item").click(function(){
    
       var teg = $(this).text()
       teg.trim()
       var tag = teg.toString().toLowerCase().replaceAll(" ","")
    open_tagbg(tag)
    
    $("#tag_headerval").text(teg)
    })
    */
   
    
    
  })
  
    $("#week_nombtn").click(function(){
      $(".week_controlbtns").removeClass("week_controlclass")
      $(this).addClass("week_controlclass")
      $(".week_tabs").hide()
      $("#week_nomtab").show()
    })
    
    $("#week_sugbtn").click(function(){
      $(".week_controlbtns").removeClass("week_controlclass")
      $(this).addClass("week_controlclass")
      $(".week_tabs").hide()
      $("#week_sugtab").show()
    })
    
    $("#week_prevbtn").click(function(){
      $(".week_controlbtns").removeClass("week_controlclass")
      $(this).addClass("week_controlclass")
      $(".week_tabs").hide()
      $("#week_prevtab").show()
    })
    
    $("#view_footbtn").click(function(){
      PREVIOUS_TAB = CURRENT_TAB
      CURRENT_TAB = "viewtab"
     // alert("")  
     var ab = checkDivDisplay("viewtab")
     if(ab===true){
    //   alert("1")
     }
     else if(ab===false){
   //    alert("2")
      $(".all_divs").hide()
      $("#viewtab").show()
     
     
 
     }
   
   
    })
    $("#search_footbtn").click(function(){
      $(".all_divs").hide()
      $("#searchtab").show()
      /*
var lastState = history.state.context;
alert(lastState)
if(lastState === "searchtab"){
  alert("")
}
else if(lastState === "hometab"){
  alert("hometab")
}
else if(lastState === "viewtab"){
  alert("vampires")
}
else{
  return false 
}
console.log(history.state)
console.log(history.location)
*/
  var newState = { context: "searchtab" };
  var pageTitle = "searchtab Page";
  var newURL = "searchtab";
var a = isLastPage()
if(a === false){
 // alert("y")

  history.pushState(null, null, null);
   visitedPages.push(newURL);
}else{
//  alert("n")
  history.replaceState(newState, pageTitle, newURL);
   var currentStateIndex = visitedPages.length - 1;
  visitedPages[currentStateIndex] = newURL;
}
//  IDK   BUT THE FUNCTION ONLY WIRKS ID YOU REVERSE OT 
      PREVIOUS_TAB = CURRENT_TAB
      CURRENT_TAB = "searchtab"
 
  
    })
    
    
    $("#home_footbtn").click(function(){
      $(".all_divs").hide()
      $("#hometab").show()

      PREVIOUS_TAB = CURRENT_TAB
      CURRENT_TAB = "hometab"
  var newState = { context: "hometab" };
  var pageTitle = "hometab Page";
  var newURL = "hometab";
var a = isLastPage()
if(a === false){
 // alert("y")

  history.pushState(null, null, null);
   visitedPages.push(newURL);
}else{
//  alert("n")
  history.replaceState(newState, pageTitle, newURL);
   var currentStateIndex = visitedPages.length - 1;
  visitedPages[currentStateIndex] = newURL;
}
//  IDK   BUT THE FUNCTION ONLY WIRKS ID YOU REVERSE OT 
    })
    
    
    $("#film_footbtn").click(function(){
      $(".all_divs").hide()
      $("#filmtab").show()

      PREVIOUS_TAB = CURRENT_TAB
      CURRENT_TAB = "filmtab"
  var newState = { context: "filmtab" };
  var pageTitle = "filmtab Page";
  var newURL = "filmtab";

var a = isLastPage()
if(a === false){
 // alert("y")

  history.pushState(null, null, null);
   visitedPages.push(newURL);
}else{
//  alert("n")
  history.replaceState(newState, pageTitle, newURL);
   var currentStateIndex = visitedPages.length - 1;
  visitedPages[currentStateIndex] = newURL;
}
//  IDK   BUT THE FUNCTION ONLY WIRKS ID YOU REVERSE OT 
   
    })
    
    
    $("#more_footbtn").click(function(){
   //   $(".all_divs").hide()
      $("#moretab").slideDown()
     $("#more_bg").css({"bottom":"0px"})
   //   $("footer").addClass("two_footer")
      

      PREVIOUS_TAB = CURRENT_TAB
      CURRENT_TAB = "moretab"
  var newState = { context: "moretab" };
  var pageTitle = "moretab Page";
  var newURL = "moretab";

  history.pushState(null, null, null);
  visitedPages.push(newURL);
    })
    /*
    $("#feed_plus").click(function(){
   //   $(".all_divs").hide()
      $("#add_newsoption").slideDown()
     $("#news_optioninner").css({"bottom":"0px"})
   //   $("footer").addClass("two_footer")
      
    })
    */
     $(document).mouseup(function(e) {
    var container = $("#news_optioninner");


    // if the target of the click isn't the container nor a descendant of the container
    if (!container.is(e.target) && container.has(e.target).length === 0) 
    {
        container.css({"bottom":"-300px"});
         $("#add_newsoption").slideUp()
    }
});
     $(document).mouseup(function(e) {
    var container = $("#more_bg");


    // if the target of the click isn't the container nor a descendant of the container
    if ((!container.is(e.target) && container.has(e.target).length === 0) && ($("#more_bg").is(':visible'))) {
    
        container.css({"bottom":"-300px"});
         $("#moretab").slideUp()
    history.back();     
    CURRENT_TAB = visitedPages[visitedPages.length - 1];
  history_back()
 
    }
});

    $("#search_link").click(function(){
     document.getElementById('searchtab').style.marginRight = '100%';
     document.getElementById('search_answer').style.width = '100%';
     document.getElementById("answer_input").focus()
     
      PREVIOUS_TAB = CURRENT_TAB
  CURRENT_TAB = "search_answer"
  history.pushState(null, null, null);
   visitedPages.push("search_answer");
    })
    $(".searchanswer_exit").click(function(){
     document.getElementById('searchtab').style.marginRight = '0%';
     document.getElementById('search_answer').style.width = '0%';
     
        history.back();     
    CURRENT_TAB = visitedPages[visitedPages.length - 1];
  history_back()
    })
    
    
    
    
    $(".foot_items").click(function(){
      
      $(".foot_items").removeClass("foot_hover")
      $(this).addClass("foot_hover")
     
    })
    
    /*
    $(document).on("mousemove", function(e){
   var x = e.pageX || e.clientX;
   var y = e.pageY || e.clientY;
 $("#mouse").css({
 "top" : y+1+"px",
 "left" : x+1+"px"
    });
 });
 rc      #rc      .rc    
 */
 $(document).on("contextmenu",function(e){
     var w = e.pageX || e.clientX;
     var z = e.pageY || e.clientY;
     $("#rc").show();
     $("#rc").css({"top":z,"left":w});
 });
 $(document).mouseup(function(e) {



    var container = $("#rc");


    // if the target of the click isn't the container nor a descendant of the container
    if (!container.is(e.target) && container.has(e.target).length === 0) 
    {
        container.hide();
    }
});
/*
 var navItems = document.querySelectorAll('.nav-item');
var line = document.querySelector('.line');

function handleItemClick(e) {
  var item = e.target;
  var itemRect = item.getBoundingClientRect();
  var lineWidth = itemRect.width;
  var lineOffset = itemRect.left;
  line.style.width = `${lineWidth}px`;
  alert(lineOffset)
  line.style.transform = `translateX(${lineOffset-100}px)`;
}
  navItems.forEach(item => item.addEventListener('click', handleItemClick));
  */
  $("#home_movbtn").click(function(){
    $(".nav-item").css({"background-color":"#4444"})
      $(this).css({"background-color":"#e67e22"})
    $(".home_tabs").hide()
    $("#home_movies").show()
  })
  $("#home_serbtn").click(function(){
    $(".nav-item").css({"background-color":"#4444"})
      $(this).css({"background-color":"#e67e22"})
    $(".home_tabs").hide()
    $("#home_series").show()
  })
  $("#home_anmovbtn").click(function(){
    $(".nav-item").css({"background-color":"#4444"})
      $(this).css({"background-color":"#e67e22"})
    $(".home_tabs").hide()
    $("#home_anmov").show()
  })
  $("#home_anserbtn").click(function(){
    $(".nav-item").css({"background-color":"#4444"})
      $(this).css({"background-color":"#e67e22"})
    $(".home_tabs").hide()
    $("#home_anser").show()
  })
  
  
  
  
  })
  
  
  $(function(){
    /*
    
    var url = "https://api.themoviedb.org/3/trending/movie/day?api_key="+API_KEY+"";
    var url2 = "https://api.themoviedb.org/3/trending/tv/day?api_key="+API_KEY+"";
    var url3 = `https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&with_genres=16&sort_by=popularity.desc&page=1`;
    var url4 = `https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&with_genres=16&sort_by=popularity.desc&page=2`;
fetch(url)
        .then(response => response.json())
        .then(data => {
        //  const movieList = document.getElementById('movie-list');
          data.results.slice(0, 50).forEach(movie => {
   var name = [movie.title]
   var image = [movie.poster_path]
   var note = [movie.overview]
   var backdrop_path = [movie.backdrop_path]
     for(let i=0; i<name.length; i++){
   var a = document.createElement("section")
   //  a.style.backgroundImage = "url('https://image.tmdb.org/t/p/w500${"+backdrop_path+"}')";
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${backdrop_path})`
     $(a).addClass("slide_section")
     $(a).appendTo(".view_slider")
       $(a).click(function(){
    document.getElementById("modal_img").src = `https://image.tmdb.org/t/p/w500${image}`
    $("#modal_name").text(name)
    $("#modal_note").text(note)
         showModal()
         
       })
       
     }
   
   
   
   
   
 }); })
  //.catch(error => console.error(error));
  // movies  
  
  
  
fetch(url2)
        .then(response => response.json())
        .then(data => {
        //  const movieList = document.getElementById('movie-list');
          data.results.slice(0, 50).forEach(movie => {
   var name = [movie.name]
   var image = [movie.poster_path]
   var note = [movie.overview]
   var backdrop_path = [movie.backdrop_path]
   
     for(let i=0; i<name.length; i++){
   var a = document.createElement("section")
   //  a.style.backgroundImage = "url('https://image.tmdb.org/t/p/w500${"+backdrop_path+"}')";
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${backdrop_path})`
     $(a).addClass("slide_section")
     $(a).appendTo(".view_slider")
       $(a).click(function(){
    document.getElementById("modal_img").src = `https://image.tmdb.org/t/p/w500${image}`
    $("#modal_name").text(name)
    $("#modal_note").text(note)
         showModal()
         
       })
       
     }
   
   
   
   
   
   
 }); })
  // .catch(error => console.error(error));
// series

 fetch(url3)
        .then(response => response.json())
        .then(data => {
          data.results.slice(0, 50).forEach(movie => {
   var name = [movie.name]
   var image = [movie.poster_path]
   var note = [movie.overview]
   var backdrop_path = [movie.backdrop_path]
   
     for(let i=0; i<name.length; i++){
   var a = document.createElement("section")
   //  a.style.backgroundImage = "url('https://image.tmdb.org/t/p/w500${"+backdrop_path+"}')";
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${backdrop_path})`
     $(a).addClass("slide_section")
     $(a).appendTo(".view_slider")
       $(a).click(function(){
    document.getElementById("modal_img").src = `https://image.tmdb.org/t/p/w500${image}`
    $("#modal_name").text(name)
    $("#modal_note").text(note)
         showModal()
         
       })
       
     }
   
   
   
   
   
 }); 
        })
      //  .catch(error => console.error(error));
        //  anime 
        
        
 fetch(url4)
        .then(response => response.json())
        .then(data => {
          data.results.slice(0, 50).forEach(movie => {
   var name = [movie.name]
   var image = [movie.poster_path]
   var note = [movie.overview]
   var backdrop_path = [movie.backdrop_path]
   
     for(let i=0; i<name.length; i++){
   var a = document.createElement("section")
   //  a.style.backgroundImage = "url('https://image.tmdb.org/t/p/w500${"+backdrop_path+"}')";
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${backdrop_path})`
     $(a).addClass("slide_section")
     $(a).appendTo(".view_slider")
       $(a).click(function(){
    document.getElementById("modal_img").src = `https://image.tmdb.org/t/p/w500${image}`
    $("#modal_name").text(name)
    $("#modal_note").text(note)
         showModal()
         
       })
       
     }
   
   
   
   
   
   
 }); 
        })
   //     .catch(error => console.error(error));
    // still anime 
*/



var searchQuery = 'Korean Drama'; // or any other search query you want to use

// Make the API request
fetch(`https://api.themoviedb.org/3/search/tv?api_key=${API_KEY}&query=${searchQuery}`)
  .then(response => response.json())
  .then(data => {
    var results = data.results;

    // Display the results
   // const resultContainer = document.querySelector('#results');
   // resultContainer.innerHTML = '';
    results.forEach(result => {
      /*
     const resultElem = document.createElement('div');
      resultElem.innerHTML = `
        <h2>${result.name}</h2>
        <p>${result.overview}</p>
      `;
      */
      console.log (result.name+"😁");
    });
  })
  .catch(error => {
  //  console.error(error);
  });
















    // end of function for billboard 
    
    
     $(function(){
        /*
    
    var url = `https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US&page=1`;

      fetch(url)
        .then(response => response.json())
        .then(data => {
        //  const movieList = document.getElementById('movie-list');
          data.results.slice(0, 50).forEach(movie => {
             var a = document.createElement("div")
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
     $(a).click(function(){
       alert(movie.id)
     })
     $(a).addClass("late_kids")
     //$(a).appendTo("#popular_late")
          });
        })
   //     .catch(error => console.error(error));
        
        
    var url = `https://api.themoviedb.org/3/tv/popular?api_key=${API_KEY}&language=en-US&page=1`;

      fetch(url)
        .then(response => response.json())
        .then(data => {
        //  const movieList = document.getElementById('movie-list');
          data.results.slice(0, 50).forEach(movie => { var a = document.createElement("div")
   //  a.style.backgroundImage = "url('https://image.tmdb.org/t/p/w500${"+backdrop_path+"}')";
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
     $(a).addClass("late_kids")
     $(a).appendTo("#popular_late")
          });
        })
     //   .catch(error => console.error(error));
        
        
      
var apiUrl = `https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&sort_by=popularity.desc&with_genres=16`;

fetch(apiUrl)
  .then(response => response.json())
  .then(data => {
    // Retrieve an array of popular anime titles
   // var animeTitles = data.results.map(anime => anime.name);
   // that function put them into a nice arrary 
      data.results.slice(0, 50).forEach(movie => { var a = document.createElement("div")
   //  a.style.backgroundImage = "url('https://image.tmdb.org/t/p/w500${"+backdrop_path+"}')";
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
     $(a).addClass("late_kids")
     $(a).appendTo("#popular_late")
          });
   
  })
  .catch(error => {
  //  console.error(error);
  });
 
        */
        
        
        
        
        
  })
  //  end of popular   
    
    /*
    $(function(){
      
  
    
    var url = `https://api.themoviedb.org/3/movie/upcoming?api_key=${API_KEY}`;
//var url = `https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&with_genres=99`;
      fetch(url)
        .then(response => response.json())
        .then(data => {
       //   const movieList = document.getElementById('movie-list');
          data.results.slice(0, 10).forEach(movie => {
            var a = document.createElement("div")
   a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
     $(a).addClass("late_kids")
     $(a).click(function(){
     //  console.log (data)
    //  alert(movie.title)
      open_opera(movie.title, movie.id, url)
     })
     $(a).appendTo("#upcome_late")
          });
        })
     //   .catch(error => console.error(error));
    
    })
    // end of upcoming   
    
    
     $(function(){
   
// Make the API request
fetch(`https://api.themoviedb.org/3/movie/now_playing?api_key=${API_KEY}`)
  .then(response => response.json())
  .then(data => {
    var movies = data.results;

    // Display the movies
    movies.forEach(movie => {
     var a = document.createElement("div")
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
     $(a).addClass("late_kids")
     $(a).appendTo("#theater_late")
    });
  })
  .catch(error => {
  });

  
  
  
})
    // movies in theaters 
    
    
    
     $(function(){
    
 var apiUrl = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&sort_by=vote_average.desc&with_original_language=tl&primary_release_year=${const_year}`;
// var apiUrl = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&with_original_language=fil`;
fetch(apiUrl)
  .then(response => response.json())
  .then(data => {
    data.results.forEach(movie => {
     var a = document.createElement("div")
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
     $(a).click(function(){
       alert(movie.release_date)
      // alert(movie.first_air_date)
     })
     $(a).addClass("late_kids")
     $(a).appendTo("#fil_late")
    });
  })
 // .catch(error => console.log(error));



})
    // top rated & Filipino 
    
    
    
     $(function(){
    

var endpoint = `https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&with_original_language=ko`;

fetch(endpoint)
  .then(response => response.json())
  .then(data => {
  data.results.forEach(movie => {
     var a = document.createElement("div")
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
     $(a).addClass("late_kids")
     $(a).appendTo("#kdrama_late")
    });
  })
  .catch(error => {
  });


})
// kdrama 
    
    */
    
  }) // end of tmdb function  victim 
  
      function hideModal() {
      var modal = document.getElementsByClassName("modal");
        modal[0].style.bottom = "-300px";
        $("#modal_name").text("")
    $("#modal_note").text("")
   //  document.getElementById("modal_img").src = ""
      }
      window.showModal = function(){
         var modal = document.getElementsByClassName("modal");
          modal[0].style.bottom = "20px";
         }

  window.showModam = function(){
         var modam = document.getElementsByClassName("modam");
    modam[0].style.bottom = "20px";
}

function hideModam() {
         var modam = document.getElementsByClassName("modam");
    modam[0].style.bottom = "-300px";
     $("#modam_name").text("")
    $("#modam_note").text("")
}
   $(document).mouseup(function(e) {

    var container = $(".modal");


    // if the target of the click isn't the container nor a descendant of the container
    if (!container.is(e.target) && container.has(e.target).length === 0) 
    {
       hideModal()
    }
});
   $(document).mouseup(function(e) {

    var container = $(".modam");


    // if the target of the click isn't the container nor a descendant of the container
    if (!container.is(e.target) && container.has(e.target).length === 0) 
    {
       hideModam()
    }
});
  
  $(function(){
    $("#match_more").click(function(){
       document.getElementById('viewtab').style.marginRight = '100%';
     document.getElementById('match_answer').style.width = '100%';
   
$(function (){
  var dbRef = firebase.database().ref('my_collection/'+useremail.toString());

var collectInner = document.getElementById('match_ansinn');

dbRef.on('value', (snapshot) => {
  collectInner.innerHTML = '';
  snapshot.forEach((childSnapshot) => {
    const img = document.createElement('img');
    img.src = childSnapshot.val().image;
    $(collectInner).prepend(img);
      var idy = childSnapshot.val().idy
    $(img).click(function(){
    $("#matchanswer_exit").click()
    prepare_to_match(idy)
    })
    // end of img click 
  });
});

})
      // end of 
      
    })
    $("#matchanswer_exit").click(function(){
       document.getElementById('viewtab').style.marginRight = '0%';
     document.getElementById('match_answer').style.width = '0%';
      
      
      
    })
    
   
    
    $("#drive_exit").click(function(){
      //  if you update then update at history 
       document.getElementById('viewtab').style.marginRight = '0%';
     document.getElementById('drive_bg').style.width = '0%';
    
  history.back();     
  CURRENT_TAB = visitedPages[visitedPages.length - 1];
  history_back()
      
    })
    
    
    
    
    
  })
  function googleSignin(){
    var provider = new firebase.auth.GoogleAuthProvider();

  firebase.auth().signInWithPopup(provider).then(function(result) {   
    // This gives you a Google Access Token. You can use it to access the Google API.
    var token = result.credential.accessToken;
    // The signed-in user info.
    var user = result.user;
		
     
      var name = user.displayName
      var email = user.email
      var email =(email).replace('@gmail.com','');
      var d = new Date();
       var time = d.toLocaleTimeString();
      var date = d.getDate();
    var fullyear = d.getFullYear();
    var month = d.getMonth();
   month= month+1;
var date=(date+"|"+month+"|"+fullyear);
  
       firebase.database().ref("users_list/"+email.toString()).set ({ 
username: name.toString(),  
time: time.toString(),  
date: date.toString(),  
email: email.toString() });
      
      
   
  }).catch(function(error) {
    // Handle Errors here.
    var errorCode = error.code;
    var errorMessage = error.message;
    // The email of the user's account used.
    var email = error.email;
    // The firebase.auth.AuthCredential type that was used.
    var credential = error.credential;
    // ...
  });


  }

$(function(){
/*
  // get the video element and canvas element
const myVideo = document.getElementById("macro_video");
myVideo.addEventListener("loadedmetadata", function() {
  // set the current time of the video to get the frame
  myVideo.currentTime = 0.5;

});

$("#maj_hash").click(function(){
  $(".major_kids").hide()
  $("#major_hash").show()
  $(".major_btns").removeClass("m_switch")
  $(this).addClass("m_switch")
})
$("#maj_more").click(function(){
  $(".major_kids").hide()
  $("#major_more").show()
   $(".major_btns").removeClass("m_switch")

  $(this).addClass("m_switch")
})
$("#maj_view").click(function(){
  $(".major_kids").hide()
  $("#major_view").show()
   $(".major_btns").removeClass("m_switch")

  $(this).addClass("m_switch")
})

$("#macro_exit").click(function(){
  document.getElementById('macro_bg').style.width = '0';
  overallexit_func()
  
     history.back();     
    CURRENT_TAB = visitedPages[visitedPages.length - 1];
  history_back()
})
*/
$("#long_exitbtn").click(function(){
   $(".tag_controlbtns").css({"background-color":"#4444"})
      $("#tag_movbtn").css({"background-color":"#e67e22"})
      // Handle back navigation for function2
         document.getElementById("long_commtab").style.width = '0';
          document.getElementById("long_reviewtab").style.width = '0';
       document.getElementById("longman_bg").style.width = '0';
  overallexit_func()
  
     history.back();     
    CURRENT_TAB = visitedPages[visitedPages.length - 1];
  history_back()
})
// end of overall click   overall          macro      movie     
  
})
function overallexit_func(){
  
  $("#intel_series").text("")
  $("#intel_type").text("")
  $("#intel_year").text("")
  $("#intel_adult").hide()
  $("#intel_status").text("")
  $("#m_imdb").text("")
  $("#award_txt").text("")
  $("#film_note").text("")
  $("#film_tag").text("")
  $("#film_tagline").text("")
  $("#film_length").text("")
  $("#film_genre").html("")
    document.getElementById('film_genre').innerHTML = "";
    document.getElementById('jolly_val').innerHTML = "";
  $("#jolly_element").hide()
  $("#film_budget").text("")
  $("#film_revenue").text("")
  $("#cast_val").text("")
  $("#director_val").text("")
  $("#director_head").text("Director")
  $("#company_val").text("")
  $("#film_coun").text("")
  $("#film_date").text("")
  $("#film_lang").text("")
  $("#morefilm_val").text("")
  $("#photo_val").text("")
  $("#trailer_val").text("")
  $("#moment_val").text("")
  $("#film_aka").text("")
  $("#film_pg").text("")
  $("#story_note").text("")
    $("#long_board").css({"background-image":"url()"})
 //   document.getElementById("long_leftboard").style.backgroundImage = "";
//    document.getElementById("long_rightboard").style.backgroundImage = "";
//  document.getElementById("macro_video").src = ""
  $("#m_profname").text("")
  $("#checkfilm_val").text("")
  $("#major_more").text("")
   $("#film_website").hide()
  $("#film_homepage").text("")
    //$("#major_switch").css({"position":"relative","width":"100%","box-shadow":"0px 0px 8px #0000 "})
    //$("#major_bg").css({"position":"relative", "overflow-y":"hidden"})
      $("#film_collectbtn").html('<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#000" class="bi bi-patch-plus" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8 5.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V10a.5.5 0 0 1-1 0V8.5H6a.5.5 0 0 1 0-1h1.5V6a.5.5 0 0 1 .5-.5z"/><path d="m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z"/></svg>')
  document.getElementById("overall_reviewinner").innerHTML = '';
}
// end of macro_video     
// Created by Calviղ



// onload = init;


/*

const apiKey = '9ccd3fcf';
const movieTitle = 'The Shawshank Redemption';

fetch(`http://www.omdbapi.com/?apikey=${apiKey}&t=${movieTitle}`)
  .then(response => response.json())
  .then(data => console.log(data))
  .catch(error => console.error(error));





*/
    </script>
    
    <script>
      

//   billboard    bill   board    view_board     section     content      son      latest   
$(function(){
  
// var myArray = ['hollywood', 'cinema of the united kingdom', 'cinema of korea', 'Cinema of japan', 'Cinema of china', 'Cinema of germany', 'Cinema of france', 'bollywood', 'Cinema of italy', 'Cinema of russia', 'Cinema of mexico', 'Cinema of spain', 'Cinema of brazil', 'Cinema of iran', 'Cinema of argentina', 'Cinema of turkey', 'Nollywood', 'Cinema of Australia', 'Cinema of egypt', 'Cinema of s_africa', 'Cinema of more'];
  var myArray = ['hollywood', 'cinema of the united kingdom', 'cinema of korea', 'Cinema of japan', 'Cinema of china', 'Cinema of germany', 'Cinema of france', 'bollywood','Nollywood'];
var randomIndex = Math.floor(Math.random() * myArray.length);
var randomValue = myArray[randomIndex];
 randomValue = "hollywood"

   
  
firebase.database().ref(randomValue.toString().toLowerCase()+"_movies").on("value", (snapshot) => {
//    firebase.database().ref("hollywood_movies").once("value", function(snapshot) {

  let arr = [];
snapshot.forEach(childSnapshot => {
     arr.unshift(childSnapshot.val());
});
 // console.log(arr.length)
function randomNumber(min, max) {
    return Math.random() * (max - min) + min;
}
 var num = Math.trunc(randomNumber(0, arr.length));

//   alert(num);
   var name = [arr[num].moviename]
   var image  = [arr[num].mainimage]
   var year   = [arr[num].movieyear]
   var category   = [arr[num].category]
   var idy   = [arr[num].id]
   var genre   = [arr[num].genre]
   var type   = [arr[num].type]
   var come_note   = [arr[num].movienote]
   var length   = [arr[num].length]
     $("#b_name1").text(name)
     $("#b_year1").text(year)
     $("#b_time1").text(length)
     
    var gen =(genre.toString()).replaceAll('%',' ');
     gen =(gen.toString()).replaceAll('  ',' ');
$("#b_genre1").text(gen);

     var img = new Image();
  $("#b_board1").click(function(){
    var modal = document.getElementById("opera_bg");
         
          modal.style.bottom = "4px";
     $("#opera_name").text(name)
     $("#opera_year").text(year)
//     $("#net_time").text(length)
 //    $("#net_note").text(come_note)
     fetch("https://www.omdbapi.com/?apikey="+OMDB_KEY+"&t=" + name.toString().toLowerCase() + "&plot=full")
  .then(response => response.json())
  .then(data => {
    if (data.Response === 'True') {
        document.querySelector('#opera_imdb').innerHTML = data.imdbRating;
        document.querySelector('#opera_pg').innerHTML = data.Rated;
    } else {
     return false 
    }
  })
       document.getElementById("opera_image").style.backgroundImage = "url("+image+")";
       
       var url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${name}`;

fetch(url)
  .then(response => response.json())
  .then(data => {
    // Find the first movie in the results
    var movie = data.results[0];
    
    // Get the movie ID
    var movieId = movie.id;
        $(function(){
            $(function(){

fetch(`https://api.themoviedb.org/3/movie/${movieId}/images?api_key=${API_KEY}`)

  .then(response => response.json())
  .then(data => {
    var posterPath = data.posters[0].file_path; // get the poster image URL from the API response
    var posterUrl = `https://image.tmdb.org/t/p/w500/${posterPath}`; // construct the full poster image URL
    //  document.getElementById("macro_poster").style.backgroundImage = "url("+posterUrl+")";
      $(".open_billboard").css({"background-image":"url("+posterUrl+")"})
         
      function color_thief() {
    var colorThief = new ColorThief();

    var img = new Image();
    
        
        img.onload = function() {
        // Display main color e.g [125, 189, 193]
        var mainRGB = colorThief.getColor(img);
        // console.log(mainRGB.join(','));
        
   //     var mainColor = document.querySelector('.colors .main .color')
        var a = `rgb(${mainRGB[0]}, ${mainRGB[1]}, ${mainRGB[2]})`;
     // alert(a)
      
        $("#opera_inner").css({"background-image":"linear-gradient(to bottom, "+a+", #000000) "})
    
    }
    
    img.crossOrigin = "Anonymous";
    img.src = posterUrl.toString(); 
    
}
color_thief()



  })
  .catch(error => {
   // console.error(error);
  });

})
        })
        })
       
       
  })// end of click 
     
img.src = image.toString();
img.onload = function() {
  var aspectRatio  = img.naturalWidth / img.naturalHeight;
 // console.log(`Aspect ratio: ${aspectRatio}`);
 // $("#b_board1").css({"padding-bottom": "calc(100% /"+ aspectRatio+")","background": "-webkit-linear-gradient(90deg,rgba(0,0,0,1),  transparent,transparent ),url("+image.toString()+")"})
  
$(function(){
 
  
// omdb    OMDB_KEY   
fetch(`https://www.omdbapi.com/?apikey=${OMDB_KEY}&t=${name.toString().toLowerCase()}&y=${year}&plot=full`)
  .then(response => response.json())
  .then(data => {
    if (data.Response === 'True') {
        document.querySelector('#b_imdb1').innerHTML = data.imdbRating;
    } else {
        return false;
    }
  })


//  .catch(error => console.log('Error:', error));



}) // imdb call back function  


  
}
})


// end of movies snapshot 
  
  
firebase.database().ref("series_info/"+randomValue.toString().toLowerCase()).on("value", (snapshot) => {
//    firebase.database().ref("hollywood_movies").once("value", function(snapshot) {

  let arr = [];
snapshot.forEach(childSnapshot => {
     arr.unshift(childSnapshot.val());
});
 // console.log(arr.length)
function randomNumber(min, max) {
    return Math.random() * (max - min) + min;
}
 var num = Math.trunc(randomNumber(0, arr.length));

//   alert(num);
   var name = [arr[num].moviename]
   var image  = [arr[num].mainimage]
   var year   = [arr[num].movieyear]
   var category   = [arr[num].category]
   var idy   = [arr[num].id]
   var genre   = [arr[num].genre]
   var type   = [arr[num].type]
   var come_note   = [arr[num].movienote]
       
    $("#b_board2").click(function(){
    var modal = document.getElementById("opera_bg");
         
          modal.style.bottom = "4px";
     $("#opera_name").text(name)
     $("#opera_year").text(year)
//     $("#net_time").text(length)
 //    $("#net_note").text(come_note)
     fetch("https://www.omdbapi.com/?apikey="+OMDB_KEY+"&t=" + name.toString().toLowerCase() + "&plot=full")
  .then(response => response.json())
  .then(data => {
    if (data.Response === 'True') {
        document.querySelector('#opera_imdb').innerHTML = data.imdbRating;
        document.querySelector('#opera_pg').innerHTML = data.Rated;
    } else {
     return false 
    }
  })
       document.getElementById("opera_image").style.backgroundImage = "url("+image+")";
       
       var url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${name}`;

fetch(url)
  .then(response => response.json())
  .then(data => {
    // Find the first movie in the results
    var movie = data.results[0];
    
    // Get the movie ID
    var movieId = movie.id;
        $(function(){
            $(function(){

fetch(`https://api.themoviedb.org/3/movie/${movieId}/images?api_key=${API_KEY}`)

  .then(response => response.json())
  .then(data => {
    var posterPath = data.posters[0].file_path; // get the poster image URL from the API response
    var posterUrl = `https://image.tmdb.org/t/p/w500/${posterPath}`; // construct the full poster image URL
    //  document.getElementById("macro_poster").style.backgroundImage = "url("+posterUrl+")";
      $(".open_billboard").css({"background-image":"url("+posterUrl+")"})
         
      function color_thief() {
    var colorThief = new ColorThief();

    var img = new Image();
    
        
        img.onload = function() {
        // Display main color e.g [125, 189, 193]
        var mainRGB = colorThief.getColor(img);
        // console.log(mainRGB.join(','));
        
   //     var mainColor = document.querySelector('.colors .main .color')
        var a = `rgb(${mainRGB[0]}, ${mainRGB[1]}, ${mainRGB[2]})`;
     // alert(a)
      
        $("#opera_inner").css({"background-image":"linear-gradient(to bottom, "+a+", #000000) "})
    
    }
    
    img.crossOrigin = "Anonymous";
    img.src = posterUrl.toString(); 
    
}
color_thief()



  })
  .catch(error => {
   // console.error(error);
  });

})
        })
        })
       
       
  })// end of click 
     
     $("#b_name2").text(name)
     $("#b_year2").text(year)
     $("#b_time2").text(length)// end of click 
     
      var gen =(genre.toString()).replaceAll('%',' ');
     gen =(gen.toString()).replaceAll('  ',' ');
$("#b_genre2").text(gen);

   var img = new Image();
img.src = image.toString();
img.onload = function() {
  var aspectRatio  = img.naturalWidth / img.naturalHeight;
 // console.log(`Aspect ratio: ${aspectRatio}`);
  
 //  $("#b_board2").css({"padding-bottom": "calc(100% /"+ aspectRatio+")","background": "-webkit-linear-gradient(90deg,rgba(0,0,0,1),  transparent,transparent ),url("+image.toString()+")"})
   $(function(){

 

  

fetch("https://www.omdbapi.com/?apikey="+OMDB_KEY+"&t=" + name.toString().toLowerCase() + "&plot=full")
  .then(response => response.json())
  .then(data => {
    if (data.Response === 'True') {
        document.querySelector('#b_imdb2').innerHTML = data.imdbRating;
    } else {
     return false 
    }
  })
//  .catch(error => console.log('Error:', error));



}) // imdb call back function  

}
})
// end of series snapshot 
  
  
  
firebase.database().ref("anime_movies").on("value", (snapshot) => {
//    firebase.database().ref("hollywood_movies").once("value", function(snapshot) {

  let arr = [];
snapshot.forEach(childSnapshot => {
     arr.unshift(childSnapshot.val());
});
 // console.log(arr.length)
function randomNumber(min, max) {
    return Math.random() * (max - min) + min;
}
 var num = Math.trunc(randomNumber(0, arr.length));

//   alert(num);
   var name = [arr[num].moviename]
   var image  = [arr[num].mainimage]
   var year   = [arr[num].movieyear]
   var category   = [arr[num].category]
   var idy   = [arr[num].id]
   var genre   = [arr[num].genre]
   var type   = [arr[num].type]
   var come_note   = [arr[num].movienote]
       /*
   $("#b_board3").click(function(){
    var modal = document.getElementById("netcard_bg");
         
          modal.style.bottom = "4px";
     $("#net_name").text(name)
     $("#net_year").text(year)
     $("#net_time").text(length)
     $("#net_note").text(come_note)
     fetch("https://www.omdbapi.com/?apikey="+OMDB_KEY+"&t=" + name.toString().toLowerCase() + "&plot=full")
  .then(response => response.json())
  .then(data => {
    if (data.Response === 'True') {
        document.querySelector('#net_imdb').innerHTML = data.imdbRating;
    } else {
     return false 
    }
  })
       document.getElementById("net_image").style.backgroundImage = "url("+image+")";
  })// end of click 
     */
     
      $("#b_board3").click(function(){
    var modal = document.getElementById("opera_bg");
         
          modal.style.bottom = "4px";
     $("#opera_name").text(name)
     $("#opera_year").text(year)
//     $("#net_time").text(length)
 //    $("#net_note").text(come_note)
     fetch("https://www.omdbapi.com/?apikey="+OMDB_KEY+"&t=" + name.toString().toLowerCase() + "&plot=full")
  .then(response => response.json())
  .then(data => {
    if (data.Response === 'True') {
        document.querySelector('#opera_imdb').innerHTML = data.imdbRating;
        document.querySelector('#opera_pg').innerHTML = data.Rated;
    } else {
     return false 
    }
  })
       document.getElementById("opera_image").style.backgroundImage = "url("+image+")";
       
       var url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${name}`;

fetch(url)
  .then(response => response.json())
  .then(data => {
    // Find the first movie in the results
    var movie = data.results[0];
    
    // Get the movie ID
    var movieId = movie.id;
        $(function(){
            $(function(){

fetch(`https://api.themoviedb.org/3/movie/${movieId}/images?api_key=${API_KEY}`)

  .then(response => response.json())
  .then(data => {
    var posterPath = data.posters[0].file_path; // get the poster image URL from the API response
    var posterUrl = `https://image.tmdb.org/t/p/w500/${posterPath}`; // construct the full poster image URL
    //  document.getElementById("macro_poster").style.backgroundImage = "url("+posterUrl+")";
      $(".open_billboard").css({"background-image":"url("+posterUrl+")"})
         
      function color_thief() {
    var colorThief = new ColorThief();

    var img = new Image();
    
        
        img.onload = function() {
        // Display main color e.g [125, 189, 193]
        var mainRGB = colorThief.getColor(img);
        // console.log(mainRGB.join(','));
        
   //     var mainColor = document.querySelector('.colors .main .color')
        var a = `rgb(${mainRGB[0]}, ${mainRGB[1]}, ${mainRGB[2]})`;
     // alert(a)
      
        $("#opera_inner").css({"background-image":"linear-gradient(to bottom, "+a+", #000000) "})
    
    }
    
    img.crossOrigin = "Anonymous";
    img.src = posterUrl.toString(); 
    
}
color_thief()



  })
  .catch(error => {
   // console.error(error);
  });

})
        })
        })
       
       
  })// end of click 
     
     $("#b_name3").text(name)
     $("#b_year3").text(year)
     $("#b_time3").text(length)// end of click 
     
      var gen =(genre.toString()).replaceAll('%',' ');
     gen =(gen.toString()).replaceAll('  ',' ');
$("#b_genre3").text(gen);

   var img = new Image();
img.src = image.toString();
img.onload = function() {
  var aspectRatio  = img.naturalWidth / img.naturalHeight;
 // console.log(`Aspect ratio: ${aspectRatio}`);
  
 //  $("#b_board3").css({"padding-bottom": "calc(100% /"+ aspectRatio+")","background": "-webkit-linear-gradient(90deg,rgba(0,0,0,1),  transparent,transparent ),url("+image.toString()+")"})
   $(function(){

 

  

fetch("https://www.omdbapi.com/?apikey="+OMDB_KEY+"&t=" + name.toString().toLowerCase() + "&plot=full")
  .then(response => response.json())
  .then(data => {
    if (data.Response === 'True') {
        document.querySelector('#b_imdb3').innerHTML = data.imdbRating;
    } else {
     return false 
    }
  })
//  .catch(error => console.log('Error:', error));



}) // imdb call back function  

}
})
// end of anime_movies snapshot 
  
  
  
firebase.database().ref("anime_series").on("value", (snapshot) => {
//    firebase.database().ref("hollywood_movies").once("value", function(snapshot) {

  let arr = [];
snapshot.forEach(childSnapshot => {
     arr.unshift(childSnapshot.val());
});
 // console.log(arr.length)
function randomNumber(min, max) {
    return Math.random() * (max - min) + min;
}
 var num = Math.trunc(randomNumber(0, arr.length));

//   alert(num);
   var name = [arr[num].moviename]
   var image  = [arr[num].mainimage]
   var year   = [arr[num].movieyear]
   var category   = [arr[num].category]
   var idy   = [arr[num].id]
   var genre   = [arr[num].genre]
   var type   = [arr[num].type]
   var come_note   = [arr[num].movienote]
       
    $("#b_board4").click(function(){
    var modal = document.getElementById("opera_bg");
         
          modal.style.bottom = "4px";
     $("#opera_name").text(name)
     $("#opera_year").text(year)
//     $("#net_time").text(length)
 //    $("#net_note").text(come_note)
     fetch("https://www.omdbapi.com/?apikey="+OMDB_KEY+"&t=" + name.toString().toLowerCase() + "&plot=full")
  .then(response => response.json())
  .then(data => {
    if (data.Response === 'True') {
        document.querySelector('#opera_imdb').innerHTML = data.imdbRating;
        document.querySelector('#opera_pg').innerHTML = data.Rated;
    } else {
     return false 
    }
  })
       document.getElementById("opera_image").style.backgroundImage = "url("+image+")";
       
       var url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${name}`;

fetch(url)
  .then(response => response.json())
  .then(data => {
    // Find the first movie in the results
    var movie = data.results[0];
    
    // Get the movie ID
    var movieId = movie.id;
        $(function(){
            $(function(){

fetch(`https://api.themoviedb.org/3/movie/${movieId}/images?api_key=${API_KEY}`)

  .then(response => response.json())
  .then(data => {
    var posterPath = data.posters[0].file_path; // get the poster image URL from the API response
    var posterUrl = `https://image.tmdb.org/t/p/w500/${posterPath}`; // construct the full poster image URL
    //  document.getElementById("macro_poster").style.backgroundImage = "url("+posterUrl+")";
      $(".open_billboard").css({"background-image":"url("+posterUrl+")"})
         
      function color_thief() {
    var colorThief = new ColorThief();

    var img = new Image();
    
        
        img.onload = function() {
        // Display main color e.g [125, 189, 193]
        var mainRGB = colorThief.getColor(img);
        // console.log(mainRGB.join(','));
        
   //     var mainColor = document.querySelector('.colors .main .color')
        var a = `rgb(${mainRGB[0]}, ${mainRGB[1]}, ${mainRGB[2]})`;
     // alert(a)
      
        $("#opera_inner").css({"background-image":"linear-gradient(to bottom, "+a+", #000000) "})
    
    }
    
    img.crossOrigin = "Anonymous";
    img.src = posterUrl.toString(); 
    
}
color_thief()



  })
  .catch(error => {
   // console.error(error);
  });

})
        })
        })
       
       
  })// end of click 
     

     
     $("#b_name4").text(name)
     $("#b_year4").text(year)
     $("#b_time4").text(length)// end of click 
     
      var gen =(genre.toString()).replaceAll('%',' ');
     gen =(gen.toString()).replaceAll('  ',' ');
$("#b_genre4").text(gen);

   var img = new Image();
img.src = image.toString();
img.onload = function() {
  var aspectRatio  = img.naturalWidth / img.naturalHeight;
 // console.log(`Aspect ratio: ${aspectRatio}`);
  
 //  $("#b_board4").css({"padding-bottom": "calc(100% /"+ aspectRatio+")","background": "-webkit-linear-gradient(90deg,rgba(0,0,0,1),  transparent,transparent ),url("+image.toString()+")"})
   $(function(){

 

  

fetch("https://www.omdbapi.com/?apikey="+OMDB_KEY+"&t=" + name.toString().toLowerCase() + "&plot=full")
  .then(response => response.json())
  .then(data => {
    if (data.Response === 'True') {
        document.querySelector('#b_imdb4').innerHTML = data.imdbRating;
    } else {
     return false 
    }
  })
//  .catch(error => console.log('Error:', error));



}) // imdb call back function  

}
})
// end of anime_series snapshot 
  
  
  
  
  
  
  
  
  
  
})
//   end of billboard    bill   board    view_board     section     content      

//   search              answer            
$(function(){
  
  $("#answer_input").keydown(function(){
   search_function()
  })
  function longestWord(str) {
  let words = str.split(' ');
  let maxLength = 0;
  let longestWord = '';
  for (let i = 0; i < words.length; i++) {
    let word = words[i];
    if (word.length > maxLength) {
      maxLength = word.length;
      longestWord = word;
    }
  }
  return longestWord;
}

function searchStringInArray(arr, searchString) {
  let resultIndexes = [];
  let results = arr.filter((item, index) => {
    if (item.includes(searchString)) {
      resultIndexes.push(index);
      return true;
    }
    return false;
  });
  return { results, resultIndexes };
}

// ,search   
/*
  window.search_function = function(){
      document.getElementById("answer_movies").innerHTML = "";
       var quer = document.getElementById("answer_input").value;
 var query = quer.toString().toLowerCase().trim()
  // Keep track of the movie IDs that have already been displayed
var displayedMovies = new Set();

  var page = 1 ;
  function searchMovies(pages){
     var url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&page=${pages}`;
  
console.log(url)
  // Send the API request
  fetch(url)
    .then(response => response.json())
    .then(data => {
      // Process the API response and display the search results
      var results = data.results;
      if (results.length > 0) {
        // Clear any existing search results
        var searchResults = document.getElementById("answer_movies");
        if (pages = 1) {
    //      searchResults.innerHTML = "";
    //      displayedMovies.clear();
        }

        // Loop through the search results and create a card for each one
        results.forEach(result => {
          // Check if the movie has already been displayed
    //      if (!displayedMovies.has(result.id)) {
            // Add the movie title to the Set of displayed movies
       //     displayedMovies.add(result.id);

            var card = document.createElement("div");
            card.classList.add("card");
            var sec2 = document.createElement("section");
            sec2.style.backgroundImage = `url('https://image.tmdb.org/t/p/w500${result.poster_path}')`;

            $(sec2).click(function() {
              var a = result.title;
              var b = result.id;
              open_opera(a, b, "https://api.themoviedb.org/3/movie");
            });
            var year = getMovieYear(result.release_date);
            fetch(`https://www.omdbapi.com/?apikey=${OMDB_KEY}&t=${result.title
              .toString()
              .toLowerCase()}&y=${year}&plot=full`)
              .then(response => response.json())
              .then(data => {
                if (data.Response === "True") {
                  card.innerHTML = data.imdbRating;
                } else {
                  return false;
                }
              });

            $(card).appendTo(sec2);
            $("#answer_movies").append(sec2);
    //      }
        });

        // Update the current page number
     //   document.getElementById("currentPage").value = parseInt(page) + 1;
     page = page + 1 ;
     
        
          
      }
    })
    .catch(error => {
      console.error(error);
    }); 
    
  }
var container = document.getElementById("search_inner");
        container.addEventListener("scroll", function() {
          if (container.scrollTop + container.clientHeight >= container.scrollHeight) {
        console.log(page)
        searchMovies(page)
          }
        })
// Call the searchMovies function when the page loads
searchMovies(1);

  }
  */
  window.search_function = function(){
    var search_input = document.getElementById("answer_input").value 
    document.getElementById("answer_movies").innerHTML = ""
    
  
  const baseUrl = `https://api.themoviedb.org/3/search/multi?api_key=${API_KEY}&query=${encodeURIComponent(search_input)}`;
/*
  fetch(baseUrl)
    .then(response => response.json())
    .then(data => {
      // Filter out adult content from the search results
      const filteredResults = data.results.filter(movie => !movie.adult);
console.log(data)
   document.getElementById("answer_movies").innerHTML = ""
      // Process the filtered search results
      filteredResults.forEach(movie => {
        // Process each movie object
        const movieTitle = movie.title;
        const movieId = movie.id;
     var div = document.createElement('section')
      
    div.style.backgroundImage = `url(https://image.tmdb.org/t/p/w300${movie.poster_path})`;  
   
     document.getElementById("answer_movies").appendChild(div);
     
     
      });
    })
    .catch(error => {
      console.error('Error searching movies:', error);
    });
  
*/
// Function to fetch more images (movies) from TMDB API
      var popular = document.getElementById('search_inner');
      let currentPage = 1;
var moviesPerPage = 15;
let totalMovies = 0;
function fetchPopularImages() {
  // Calculate the total number of pages needed to fetch the desired number of movies
  var totalPages = Math.ceil(totalMovies / moviesPerPage);
  
  // Check if all movies have been fetched already
  if (currentPage > totalPages) {
 //   console.log('All movies have been fetched!');
    return;
  }
   
  // Fetch popular movies from TMDB API
  var bedy = `https://api.themoviedb.org/3/search/multi?api_key=${API_KEY}&query=${encodeURIComponent(search_input)}&page=${currentPage}`
//  console.log(bedy)
  fetch(bedy)
    .then(response => response.json())
    .then(data => {
      // popular_late     
     
      data.results.forEach(movie => {
    var a = document.createElement("section")
   
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
   //  $(a).addClass("late_kids")
     $(a).appendTo("#answer_movies")
     $(a).click(function(){
       open_opera (movie.title, movie.id, "movies")
     })
      });
      
      // Increment the current page counter
      currentPage++;
    })
    .catch(error => {
     // console.error('Error fetching movies:', error);
    });
    
  // Fetch popular tv from TMDB API
 
}

// Wrap the code inside DOMContentLoaded event listener
$(function() {
  // Fetch the total number of movies from TMDB API to calculate the total number of pages
  fetch(`https://api.themoviedb.org/3/search/multi?api_key=${API_KEY}&query=${encodeURIComponent(search_input)}`)
    .then(response => response.json())
    .then(data => {
      totalMovies = data.total_results;
      
      fetchPopularImages();
    })
    .catch(error => {
    //  console.error('Error fetching total number of movies:', error);
    });

  // Add scroll event listener to "popular_late" div
 
popular.addEventListener('scroll', function() {
  if (isDivScrolledToBottom(popular)) {
 
  //    alert(search_input )
      fetchPopularImages();  
  }
});

});


    
    
  //  console.log(search_input)
    
  }
  
  // end of search_function              
  
  
  
  
  
})
//   search              answer        
$(function(){
  
$("#netcard_exit").click(function(){
   $("#netcard_bg").css({"bottom":"-300px"}); 
   $("#net_name").text("")
     $("#net_year").text("")
     $("#net_time").text("")
     $("#net_note").text("")
     $("#net_imdb").text("")
       document.getElementById("net_image").style.backgroundImage = "url()";
})
 $(document).mouseup(function(e) {





    var container = $("#netcard_bg");


    // if the target of the click isn't the container nor a descendant of the container
    if (!container.is(e.target) && container.has(e.target).length === 0) 
    {
     $("#netcard_exit").click()
    }
});

})

  $("#verify_addbtn").click(function(){
      $("#add_nomibig").show(200)
      document.getElementById("add_nomibg").style.bottom = "0";
      add_nominationfunc()
    })   

function open_votetab(outside_text){
  $(".week_answerdiv").text("")
//  $("#nomi_tabinner").text("")
 // $("#prev_tabinner").text("")
  document.getElementById("week_bg").classList.add("drop");

 $(document).mouseup(function(e) {



    var container = $(".fake_weekevent");


    // if the target of the click isn't the container nor a descendant of the container
    if (!container.is(e.target) && container.has(e.target).length === 0) 
    {
    $(".week_messagediv").removeClass("wk_inputclass")
    $("#tag_box").hide()
      
    }
});


var inputBox = document.getElementById('fake_weektxt');
inputBox.addEventListener('focus', function(event) {
 // console.log('User input:', event.target.value);
 //alert("")
$(".week_messagediv").addClass("wk_inputclass")
});


if(outside_text.toString().toLowerCase().trim() == "thisweek'stopmovies"){
  //alert("yes!")  
  
      var tagBox = document.getElementById('tag_box');

inputBox.addEventListener('input', function() {
  var inputValue = inputBox.value;
  var highlightedValue = inputValue.replace(/(^|\s)(\w+)/g, '$1$$2)');
  
  var hashtags = inputValue.match(/@\w+/g);

  if (hashtags) {
    
    tagBox.style.display = "flex";
    var inputRect = inputBox.getBoundingClientRect();
    
    
    var lastHashtag = hashtags[hashtags.length - 1];
    var hashtagIndex = inputValue.lastIndexOf(lastHashtag);
    var nextCharIndex = hashtagIndex + lastHashtag.length;
    
    
   var fastHashtag = lastHashtag.slice(1);
   fastHashtag.toString().toLowerCase()
    $(function(){
      $("#tag_box").text("")
      var eat = firebase.database().ref("my_collection/"+useremail)
      
eat.on("value", function(snapshot)
 { snapshot.forEach(function(snapshot) {
      // collectiontab              
      
   if ((snapshot.val() && snapshot.val().name.toString().toLowerCase().indexOf(fastHashtag) > -1) || (snapshot.val() && snapshot.val().idy.toString().toLowerCase().indexOf(fastHashtag) > -1)) {
  
  
 var name =[snapshot.val().name]   
 var image =[snapshot.val().image]   
 var year =[snapshot.val().year]   
   
 
 var note  =[snapshot.val().note]   
 var idy  =[snapshot.val().idy]   
 var part  =[snapshot.val().id]   
 var date =[snapshot.val().msgdate]   
 var time =[snapshot.val().msgtime]   
 var type  =[snapshot.val().type]   
 var category  =[snapshot.val().category]   
  
  for(let i=0; i<part.length; i++){
       
    
// var cat =document.createElement('div')
var cat_two =document.createElement('img')
  cat_two.style.backgroundImage = "url("+image+")";
  
  cat_two.addEventListener("click", function() {
 var a;
 var t = idy.toString().replaceAll(' ','');
    a = "@"+t+" "
    
    inputBox.value = inputValue.replace(lastHashtag.toString(), a.toString());
     document.getElementById("fake_weektxt").focus()
//  console.log(lastHashtag)
  $("#tag_box").hide()
  })
  
  
  
  $("#tag_box").prepend(cat_two)
// console.log(name)
}
}
})
})
      
      
      
    })
    /// 
    
    
    
    
    if (inputValue[nextCharIndex] === " ") {
      tagBox.style.display = "none";
  //    inputBox.value = highlightedValue.toString();
  //  $("#fake_weektxt").val(highlightedValue.toString())
    }
  } else {
    inputBox.value = inputValue;
    tagBox.style.display = "none";
  }
}); // end of function listening for more inputs into the textarea 

// end of comment section, time for the submit 

$("#fake_weekbtn").click(function(){
  var work = (inputBox.value).toString()
  if(work == ""){
    return false ;
  }
  else{
    
 //   alert(const_year+"@gmail.com "+username)
    var d = new Date();

       var time_string = d.toLocaleTimeString();

     var date = d.getDate();
    var fullyear = d.getFullYear();
    var month = d.getMonth();
   month= month+1;
var date_string=(fullyear+"|"+month+"|"+date);

var worked = work.replace(/\n/g, "<br>");
//  alert(worked)
     firebase.database().ref("poprizon_picks/all_movies/"+const_year.toString()+"/"+const_week.toString()+"/comments").push({

 "useremail":useremail.toString(),
 "username":username.toString(),
 "message":worked.toString(),
 "msgdate":date_string.toString(),
 "msgtime":time_string .toString(),
 "extra1":"extra_one",
 "extra2":"extra_two"
 });
 inputBox.value =  ""
 
 
 
    // there would be multiple posts of this comment, one so that when you look into a user's activity, you would find his comments as long as his posts bad shits like that 
    
  }
  // end of function of the string is not empty 
  
})
// end of posting comments 

$(function(){
  var m =   firebase.database().ref("poprizon_picks/all_movies/"+const_year.toString()+"/"+const_week.toString()+"/nominee")
  m.on("child_added", (snapshot) => {
   // console.log(snapshot.val())
    var name  =[snapshot.val().name];
    var idy  =[snapshot.val().idy];
    var type  =[snapshot.val().type];
    var image  =[snapshot.val().image];
    var movieId  =[snapshot.val().tmdb_id];
    var v_string  =[snapshot.val().video_string];
    var i_string  =[snapshot.val().scene_string];
    for(var a =0; a<idy.length; a++){
      
     var bg= document.createElement("div")
     var one= document.createElement("div")
     var two= document.createElement("div")
     var three= document.createElement("div")
     var four= document.createElement("div")
     var five= document.createElement("span")
     var six= document.createElement("span")
     var seven= document.createElement("span")
     var eight= document.createElement("span")
     var nine= document.createElement("span")
     var ten= document.createElement("span")
     var eleven = document.createElement("span")
     var twelve= document.createElement("span")
     var thirteen= document.createElement("span")
     var fourteen= document.createElement("span")
      
      $(eight).addClass("display_flex")
      $(seven).addClass("nom_name")
      $(seven).addClass("ellipsis_text")
      $(four).addClass("nom_txt")
      $(three).addClass("nom_img")
      $(one).addClass("nom_left")
      $(one).addClass("display_flex")
      $(two).addClass("nom_right")
      $(two).addClass("display_flex")
      $(bg).addClass("nom_listbg")
      $(twelve).addClass("nom_star")
      fourteen.id ="nom_imdb"
      
      $(five).append('<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-check-circle-fill" viewBox="0 0 16 16"><path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z"/></svg>')
      $(thirteen).append('<svg xmlns="http://www.w3.org/2000/svg" width="10" height="10" fill="currentColor" class="bi bi-star-fill" viewBox="0 0 16 16"> <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z"/></svg>')
      $(six).append('<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-three-dots-vertical" viewBox="0 0 16 16"><path d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/></svg>')
    
     $(ten).text("+")
     $(seven).text(name)
     
       $(three).css('background-image', 'url(' + image + ')');
       
       
     $(function(){
       
       
   fetch("https://www.omdbapi.com/?apikey="+OMDB_KEY+"&t=" + name.toString().toLowerCase() + "&plot=full")

  .then(response => response.json())

  .then(data => {
    if (data.Response === 'True') {
    $(fourteen).text(data.imdbRating)
    $(eleven).text(data.Rated)
    } else {
     return false 
    }
  })
// end of imdb rating 







     })
     // tmdb calls 
     
     
     
     
     
      $(twelve).append(thirteen, fourteen)
      $(ten).prepend(eleven)
      $(eight).append(nine, ten, twelve)
      $(four).append(seven, eight)
      $(two).append(five, six)
      $(one).append(three, four)
      $(bg).append(one, two)
      $("#nomi_tabinner").prepend(bg)
      
      
    }
    // end of for each 
    
  })
  })
// end of function that retrieves the nominees 
    
$(function(){
  var m =  firebase.database().ref("poprizon_picks/all_movies/"+const_year.toString()+"/"+const_week.toString()+"/comments")
  m.on("child_added", (snapshot) => {
  //alert(m)
  //console.log(snapshot.val().message)
    var message  =[snapshot.val().message];
    var name  =[snapshot.val().username];
    var mail  =[snapshot.val().useremail];
    var time  =[snapshot.val().msgtime];
    var dates  =[snapshot.val().msgdate];
   for(let i=0; i<time.length; i++){

   var a = document.createElement("div")
   var b = document.createElement("div")
   var d = document.createElement("div")
   var c = document.createElement("div")
   var e = document.createElement("div")
   var f = document.createElement("div")
   var g = document.createElement("span")
   var h = document.createElement("span")
   var img = document.createElement("section")
   var j = document.createElement("div")
   message.toString().trim()
   
  a.id = "message_box"
  d.id = "message_up"
  e.id = "message_middle"
  f.id = "message_innertop"
  c.id = "message_innermiddle"
  b.id = "message_innerbot"
  
  $(c).html(message)
  $(h).html(username)
  img.style.backgroundImage = "url("+profileImageURL+")";
function getHashtags(str) {
  const regex = /@[^\s]+/g;
  const matches = str.match(regex);
  return matches ? matches.map(match => match.slice(1)) : [];
}


const hashtags = getHashtags(message.toString().toLowerCase());
var at = hashtags.toString().split(",")
for(let i=0; i<at.length; i++){
//alert(at[i])
if(at[i].toString() !== ""){
firebase.database().ref("my_collection/"+mail.toString()).on("value", function(snapshot)
 { snapshot.forEach(function(snapshot) {
      // collectiontab              
  var idy = [snapshot.val().idy]
  //idy.replaceAll(" ","")
  
var newArray = idy.map(str => str.replace(/\s/g, ""));

   if ((newArray.toString().toLowerCase().replaceAll(" ","").indexOf(at[i].toString()) > -1)) {
 var name =[snapshot.val().name]   
 var image =[snapshot.val().image]   
 var year =[snapshot.val().year]   
 //alert(name)
 var img2 = document.createElement("div")
img2.style.backgroundImage = "url("+image.toString()+")";
 img2.id = "chat_circles"
 $(img2).click(function(){
     document.getElementById("modam_img").src = image.toString();
    $("#modam_name").text(name)
   // $("#modam_note").text(note)
   showModam()
 })
 // end of image click 
 $(img2).appendTo(b)
   }
 })
 })
}
 
}

  
  $(f).append(g,h)
  $(e).append(f,c,b)
  $(d).append(img)
  $(a).append(d,e)
  $(".week_answerdiv").prepend(a)
   }
  // end of for 
  }) // end of snapshot function
})
// end of function that retrieves the comments 


$(function(){
  
  $("#nomi_sceneinput").keyup(function(event) {
     
        if (event.which === 13) {

          var b = $("#nomi_sceneinput").val();
         var a = document.createElement("img")
         a.src = b
         $("#add_nomiscene").prepend(a)    
         $("#nomi_sceneinput").val("")    
        }

    });
  $("#nomi_momentinput").keyup(function(event) {
     
        if (event.which === 13) {

          var b = $("#nomi_momentinput").val();
         var a = document.createElement("video")
         a.src = b
         a.controls = "true"
         a.currentTime = 0.5
        //  $(a).prop('preload','metadata')
         $("#add_nomimoment").prepend(a)    
         $("#nomi_momentinput").val("")    
        }

    });

if(useremail.toString().toLowerCase().trim() == verified_email.toString().toLowerCase().trim()){
  
 $("#verify_addbtn").show()
}
  
  window.add_nominationfunc = function(){
    firebase.database().ref("my_collection/"+verified_email.toString().toLowerCase()).on("value", function(snapshot)
 { snapshot.forEach(function(snapshot) {
      // collectiontab              
      
   if (snapshot.val() && snapshot.val().category.toString().toLowerCase()== "movies") {
  
  
 var name =[snapshot.val().name]   
 var image =[snapshot.val().image]   
 var year =[snapshot.val().year]   
 var i_d =[snapshot.val().idy]   
 var cate =[snapshot.val().category]   
 var t_ype =[snapshot.val().type]   
    for(var a =0; a<i_d.length; a++){
      var b = document.createElement("img")
      b.src = image
      var images = Array.from(document.querySelectorAll("img"));
images.forEach(image => {
  image.addEventListener('click', () => {
    // Add the class to the clicked image
    image.classList.add('img_class');
    
    // Remove the class from all the other images
    images.filter(img => img !== image).forEach(img => {
      img.classList.remove('img_class');
    });
  });
});

      $(b).click(function(){
        $("#add_nomimoment").text("")    
        $("#add_nomiscene").text("")    
      document.getElementById('nomi_momentinput').disabled = false;
      document.getElementById('nomi_sceneinput').disabled = false;
   //   document.getElementById('nomi_imageinput').disabled = false;
      document.getElementById('nomi_idinput').disabled = false;

      //  $(b).removeClass("img_class")
       // $(this).addClass("img_class")
        $("#nomi_name").text(name)
        $("#nomi_idy").text(i_d)
        $("#nomi_type").text(t_ype)
        $("#nomi_year").text(year)
        $("#nomi_category").text(cate)
        $("#nomi_imageinput").val(image)
      }) // end of img click 
      $("#add_nomicollect").prepend(b)
    }
   }
 })
 })
  $("#add_nomisubmit").click(function(){
    
       var name = $("#nomi_name").text()
       var idy = $("#nomi_idy").text()
       var cate = $("#nomi_category").text()
       var type = $("#nomi_type").text()
       var year = $("#nomi_year").text()
       var image = $("#nomi_imageinput").val()
       var tmdb_id = $("#nomi_idinput").val()
   if((tmdb_id.toString().trim() == "") || (name.toString().trim() == "") || (idy.toString().trim() == "") || (cate.toString().trim() == "") || (type.toString().trim() == "") || (year.toString().trim() == "")){
     
     $("#custom_messagefail").text(name+" has not been added, one input or two is blank ")
       document.getElementById("custom_alertfailure").style.bottom = "4px";
   }
   else{
var srcString ;
var vidString ;
  var addNomisceneDiv = document.getElementById("add_nomiscene");
  var addNomimom = document.getElementById("add_nomimoment");
// Select all images within the div
var images = addNomisceneDiv.getElementsByTagName("img");

// Create an array to store unique src values
var uniqueSrcValues = [];

// Loop through the images and retrieve their src attribute values
for (let i = 0; i < images.length; i++) {
  var src = images[i].src;

  // Check if src value is not already in the uniqueSrcValues array
  if (!uniqueSrcValues.includes(src)) {
    uniqueSrcValues.push(src); // Store unique src value in the array
  }
}

// Concatenate unique src values into a string separated by underscores
 srcString = uniqueSrcValues.join("{_}");
 
 
 
// Select all images within the div
var imag = addNomimom.getElementsByTagName("video");

// Create an array to store unique src values
var uniqueSrcValu = [];

// Loop through the images and retrieve their src attribute values
for (let i = 0; i < imag.length; i++) {
  var src = imag[i].src;

  // Check if src value is not already in the uniqueSrcValues array
  if (!uniqueSrcValu.includes(src)) {
    uniqueSrcValu.push(src); // Store unique src value in the array
  }
}

// Concatenate unique src values into a string separated by underscores
 vidString = uniqueSrcValu.join("{_}");
 
  firebase.database().ref("poprizon_picks/all_movies/"+const_year.toString()+"/"+const_week.toString()+"/nominee").push({

 "name":name.toString(),
 "year":year.toString(),
 "type":type.toString(),
 "category":cate.toString(),
 "idy":idy.toString(),
 "tmdb_id":tmdb_id.toString(),
 "image":image.toString(),
 "video_string":vidString.toString(),
 "scene_string":srcString.toString(),
 "extra1":"extra_one",
 "extra2":"extra_two"
 });
 
  $("#custom_messagesus").text(name+" has been added successfully ")
       document.getElementById("custom_alertsuccess").style.bottom = "4px";
 $("#add_nomibig").hide()
  $("#add_nomibg").css({"bottom":"-100%"});
 
 
    
  }
  })
    // end of add_nomisubmit    click 
  }
  // end of function to add nomination 
  
  
  
})
// end of function for company email   and add nomination 





}
//  end of open_votetab for this week's top movies   








}
// end of open_votetab  function     








function open_overall(category, type, id, name){
   
   
  
  $("#m_profname").text(name)
    document.getElementById('macro_bg').style.width = '100%';
    
    if(category.toString().toLowerCase() == "movies"){
 //   console.log (name)
 
 var store_ref = firebase.database().ref(type.toString().toLowerCase()+"_root/"+id.toString().toLowerCase()+"/info")
 var link_ref = firebase.database().ref(type.toString().toLowerCase()+"_root/"+id.toString().toLowerCase()+"/link")
var url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${name}`;

fetch(url)
  .then(response => response.json())
  .then(data => {
    // Find the first movie in the results
    var movie = data.results[0];
    
    // Get the movie ID
    var movieId = movie.id;
    
    // Use the movie ID to fetch more information about the movie
    var movieUrl = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`;
    
    fetch(movieUrl)
      .then(response => response.json())
      .then(movieData => {
   
         $(function(){
     
var url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`;

fetch(url)
  .then(response => response.json())
  .then(data => {
    var cast = data.cast;
    var castContainer = document.getElementById("cast_val");

    for (let i = 0; i < cast.length; i++) {
      var castMember = cast[i];
      var img = document.createElement("div");
      var name1 = document.createElement("div");
      var name2 = document.createElement("div");
      var bag = document.createElement("div");
      
      $(bag).addClass("m_castdiv")
      $(img).addClass("m_castimg")
      $(name1).addClass("m_castname")
      $(name2).addClass("m_castchar")
      img.src = `https://image.tmdb.org/t/p/w500${castMember.profile_path}`;
       img.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${castMember.profile_path})`;
      $(name1).text(castMember.name)
      $(name2).text(castMember.character)
      
      $(bag).append(img, name1, name2)
      castContainer.appendChild(bag);
      
      
      
    }
  })
  .catch(error => {
     store_ref.on("child_added", (snapshot) => {
       
var cast = [snapshot.val().starcast]
var castarray= cast.toString().split("%"); 
castarray.forEach(function(el) {
    
    var img = document.createElement("div");
      var name1 = document.createElement("div");
      var name2 = document.createElement("div");
      var bag = document.createElement("div");
      
      $(bag).addClass("m_castdiv")
      $(img).addClass("m_castimg")
      $(name1).addClass("m_castname")
      $(name2).addClass("m_castchar")
       img.style.backgroundImage = "url(https://dl.dropbox.com/s/cpuoiau1mh6ghed/images.png?dl=0)";
       $(name1).text(el)
       
      $(name2).text("")
      
      $(bag).append(img, name1, name2)
    $(bag).appendTo("#cast_val");
});
  //  $("#film_note").text(summ)
})
  });
  
  
   })
    // end of cast 
          
         $(function(){ 
var tmdbUrl = `https://api.themoviedb.org/3/movie/${movieId}/external_ids?api_key=${API_KEY}`;
fetch(tmdbUrl)
  .then(response => response.json())
  .then(data => {
    // Extract the IMDb ID from the response
    var imdbId = data.imdb_id;
    // Make a request to the OMDB API to get the IMDb rating for the movie
    var omdbUrl = `https://www.omdbapi.com/?i=${imdbId}&apikey=${OMDB_KEY}`.toString();
    return fetch(omdbUrl);
  })
  .then(response => response.json())
  .then(data => {
    // Extract the IMDb rating from the response
    var imdbRating = data.imdbRating;
    $("#m_imdb").text(imdbRating)
  })
 .catch(error => {
     fetch("https://www.omdbapi.com/?apikey="+OMDB_KEY+"&t=" + name.toString().toLowerCase() + "&plot=full")

  .then(response => response.json())

  .then(data => {
    if (data.Response === 'True') {
        document.querySelector('#m_imdb').innerHTML = data.imdbRating;
    } else {
     return false 
    }
  })
  });
          
         })
         //  movie omdb imdb 
      
         $(function(){
     

$(function(){

 fetch(`https://www.omdbapi.com/?apikey=${OMDB_KEY}&t=${name.toString().toLowerCase()}&y=${year}&plot=full`)
  .then(response => response.json())
  .then(data => {
    if (data.Response === 'True') {
          var number = data.BoxOffice;
var formattedNumber = number.toLocaleString('en-US', { style: 'currency', currency: 'USD' });
    document.querySelector('#film_budget').innerHTML = formattedNumber;
    document.querySelector('#award_txt').innerHTML = data.Awards;
    document.querySelector('#film_date').innerHTML =  data.Released;
    document.querySelector('#film_pg').innerHTML = data.Rated;
    document.querySelector('#story_note').innerHTML = data.Plot;
    } else {
        return false;
    }
  })
}) // imdb call back function  
         })
         //  award 
         $(function(){
          
fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`)
  .then(response => response.json())
  .then(data => {
    var synopsis = data.overview; // get the synopsis or storyline from the API response
    $("#film_note").text(synopsis)
  })
  .catch(error => {  
   store_ref.on("child_added", (snapshot) => {
var summ = [snapshot.val().movienote]

    $("#film_note").text(summ)
})
})
  });
         //  Synopsis 
         $(function(){
            store_ref.on("child_added", (snapshot) => {
       
var tage = [snapshot.val().tags]
var genre = [snapshot.val().genre]
var dit = [snapshot.val().moviedirector]
var com = [snapshot.val().moviecompany]
var lan = [snapshot.val().language]
var ak = [snapshot.val().aka]
var main_img = [snapshot.val().mainimage]
var twoimage = [snapshot.val().seimage]

var gent = genre.toString().split("%");
var tag= tage.toString().split("%");
var dir= dit.toString().split("%");
var comp= com.toString().split("%");
var lang= lan.toString().split("%");
var aka= ak.toString().split("%");

tag.forEach(function(el) {
    
    var abd = document.createElement("span");
    $(abd).text(el)
    $("#film_tag").prepend(abd)
})

gent.forEach(function(el) {
    
    var abd = document.createElement("span");
    $(abd).text(el)
    $("#film_genre").prepend(abd)
})


dir.forEach(function(el) {
    
    var abd = document.createElement("span");
    $(abd).text(el)
    $("#director_val").prepend(abd)
})


comp.forEach(function(el) {
    
    var abd = document.createElement("section");
    var one = document.createElement("div");
    var two = document.createElement("p");
   //   one.style.backgroundImage = `url(https://image.tmdb.org/t/p/w300${movie.poster_path})`;  
    $(two).text(el)
    $(abd).append(one, two)
    $("#company_val").append(abd)
})

lang.forEach(function(el) {
    
    var abd = document.createElement("span");
    $(abd).text(el)
    $("#film_lang").prepend(abd)
})

aka.forEach(function(el) {
    
    var abd = document.createElement("span");
    $(abd).text(el)
    $("#film_lang").prepend(abd)
})


  document.getElementById("long_leftboard").style.backgroundImage = "url("+main_img+")";
  document.getElementById("long_rightboard").style.backgroundImage = "url("+twoimage+")";
  
})
  
    link_ref.on("child_added", (snapshot) => {
var one_link = [snapshot.val().link]
  for(let i=0; i<one_link.length; i++){
       

var linked_ref = firebase.database().ref(type+"_root/"+one_link[i]+"/info")

    linked_ref.on("child_added", (snapshot) => {
      var namey = [snapshot.val().moviename]
var imagey = [snapshot.val().mainimage]
var summ = [snapshot.val().movienote]
var year = [snapshot.val().movieyear]

 for(let i=0; i<imagey.length; i++){
     
    var img = document.createElement('div');
  $(img).addClass("m_profimg");
      img.style.backgroundImage = "url("+imagey+")";
      $(img).click(function(){
   //     alert("nakupenda")
        
      })
      $("#morefilm_val").prepend(img)
}
})
    
  }
    })
      
      
         })
         //  tags and linked movies  from my own dB 
         $(function(){
         

fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`)
  .then(response => response.json())
  .then(data => {
    var tagline = data.tagline; // get the tagline from the API response
    $("#film_tagline").text(tagline);
  })  
  .catch(error => {
   // console.error(error);
  });

         $(function(){
           
  var ENDPOINT = `https://api.themoviedb.org/3/movie/${movieId}/similar?api_key=${API_KEY}`;

fetch(ENDPOINT)
  .then(response => response.json())
  .then(data => {
    var nominations = data.results;
    console.log(nominations);
  })
  .catch(error => {
  // console.error(error);
  });
         })
         
         $(function(){
           
fetch(`https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=${API_KEY}`)
  .then(response => response.json())
  .then(data => {
    var trailer = data.results.find(result => result.type === "Trailer" && result.site === "YouTube"); // get the trailer video object from the API response
    if (trailer) {
      var trailerKey = trailer.key; // get the trailer video key from the trailer video object
      var trailerUrl = `https://www.youtube.com/watch?v=${trailerKey}`; // construct the full trailer video URL
      alert(trailerUrl)
      
      function copyToClipboard(str) {
  const el = document.createElement('textarea');
  el.value = str;
  document.body.appendChild(el);
  el.select();
  document.execCommand('copy');
  document.body.removeChild(el);
}

      const str = 'Hello, world!';
copyToClipboard(trailerUrl);

  //    document.getElementById("macro_video").src = trailerUrl  
    } else {
    //  console.log("Trailer not found.");
    }
  })
  .catch(error => {
   //console.error(error);
  });
  
  /*
// Make a request to TMDb API to get movie details
fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&append_to_response=videos`)
  .then(response => response.json())
  .then(data => {
    // Extract trailer information from the API response
    const videos = data.videos.results;
    if (videos.length > 0) {
      // Get the key of the first video, which represents the YouTube video ID
      const youtubeVideoId = videos[0].key;
      // Construct the YouTube video URL or embed code
      const youtubeVideoUrl = `https://www.youtube.com/watch?v=${youtubeVideoId}`;
      const youtubeEmbedCode = `<iframe width="560" height="315" src="https://www.youtube.com/embed/${youtubeVideoId}" frameborder="0" allowfullscreen></iframe>`;
      // Use the YouTube video URL or embed code in your application as needed
      console.log('YouTube Video URL:', youtubeVideoUrl);
      console.log('YouTube Embed Code:', youtubeEmbedCode);
    } else {
      console.log('No trailer available for this movie.');
    }
  })
  .catch(error => console.error('Error:', error));
*/
fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&append_to_response=videos`)
  .then(response => response.json())
  .then(data => {
    const videos = data.videos.results;
    if (videos.length > 0) {
      // Get the trailer video by filtering the videos array
      const trailer = videos.find(video => video.type === 'Trailer');
      if (trailer) {
        const youtubeVideoId = trailer.key;
        const youtubeVideoUrl = `https://www.youtube.com/watch?v=${youtubeVideoId}`;
        const youtubeEmbedCode = `<iframe width="560" height="315" src="https://www.youtube.com/embed/${youtubeVideoId}" frameborder="0" allowfullscreen></iframe>`;
        // Use the YouTube video URL or embed code in your application as needed
        console.log('YouTube Video URL:', youtubeVideoUrl);
        console.log('YouTube Embed Code:', youtubeEmbedCode);
      } else {
        console.log('No trailer available for this movie.');
      }
    } else {
      console.log('No videos available for this movie.');
    }
  })
  .catch(error => console.error('Error:', error));

           
         })
         $(function(){
fetch(`https://api.themoviedb.org/3/movie/${movieId}/images?api_key=${API_KEY}`)
  .then(response => response.json())
  .then(data => {
    var posterPath = data.posters[0].file_path; // get the poster image URL from the API response
    var posterUrl = `https://image.tmdb.org/t/p/w500/${posterPath}`; // construct the full poster image URL
    //  document.getElementById("macro_poster").style.backgroundImage = "url("+posterUrl+")";
      $("#long_board").css({"background-image":"url("+posterUrl+")"})
      
      function color_thief() {
    var colorThief = new ColorThief();

    var img = new Image();
    
        
        img.onload = function() {
        // Display main color e.g [125, 189, 193]
        var mainRGB = colorThief.getColor(img);
        // console.log(mainRGB.join(','));
        
   //     var mainColor = document.querySelector('.colors .main .color')
        var a = `rgb(${mainRGB[0]}, ${mainRGB[1]}, ${mainRGB[2]})`;
      //alert(a)
        $("#longman_inner").css({"background-image":"linear-gradient(to bottom, "+a+", #000000) "})
    
    }
    
    img.crossOrigin = "Anonymous";
    img.src = posterUrl.toString(); 
    
}
color_thief()



  })
  .catch(error => {
   // console.error(error);
  });

})


         $(function(){
           /*
var url = `https://api.themoviedb.org/3/movie/${movieId}/images?api_key=${API_KEY}`;

fetch(url)
  .then(response => response.json())
  .then(data => {
    // process the data here
    console.log(data);
  })
  .catch(error => console.error(error));
*/

var url = `https://api.themoviedb.org/3/movie/${movieId}/images?api_key=${API_KEY}`;

fetch(url)
  .then(response => response.json())
  .then(data => {
    // select only the backdrops
    var backdrops = data.backdrops;

    // loop through the backdrops and create an img element for each one
    backdrops.forEach(backdrop => {
      var img = document.createElement('div');
      var src = `https://image.tmdb.org/t/p/w500${backdrop.file_path}`;
       img.style.backgroundImage = "url("+src.toString()+")";
      $(img).addClass("m_profimg")
     $("#photo_val").prepend(img)
    }); 
  })
  .catch(error => console.error(error));

         })





var url = `https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=${API_KEY}`;

fetch(url)
  .then(response => response.json())
  .then(data => {
    var videos = data.results;
    var trailer = videos.find(video => video.type === 'Trailer'); // find the first trailer
    if (trailer) {
      var videoUrl = `https://www.youtube.com/watch?v=${trailer.key}`;
      // use the videoUrl as the source of a video element
      var video = document.createElement('video');
      var source = document.createElement('source');
      source.src = videoUrl;
      video.appendChild(source);
      video.controls = "true"
   //   document.body.appendChild(video);
      $("#trailer_val").append(video)
    }
  })
  .catch(error => console.error(error));


$(function(){
  /*
var url = `https://api.themoviedb.org/3/movie/${movieId}/similar?api_key=${API_KEY}`;

fetch(url)
  .then(response => response.json())
  .then(data => {
    var similarMovies = data.results;
    similarMovies.forEach(movie => {
      var image = document.createElement('img');
      var imageUrl = `https://image.tmdb.org/t/p/w300${movie.poster_path}`;
      image.src = imageUrl;
      document.getElementById("major_more").appendChild(image);  
    }); 
  })
  .catch(error => console.error(error));  


var currentDate = new Date();
var lastYearDate = new Date();
lastYearDate.setFullYear(currentDate.getFullYear() - 1);
var url = `https://api.themoviedb.org/3/movie/${movieId}/similar?api_key=${API_KEY}&language=en-US&sort_by=release_date.desc&release_date.gte=${lastYearDate.toISOString().slice(0, 10)}&release_date.lte=${currentDate.toISOString().slice(0, 10)}`;

fetch(url)
  .then(response => response.json())
  .then(data => {
    var similarMovies = data.results;
    var container = document.createElement('div');
    container.className = 'similar-movies';
    similarMovies.forEach(movie => {
       var image = document.createElement('img');
      var imageUrl = `https://image.tmdb.org/t/p/w300${movie.poster_path}`;
      image.src = imageUrl;
      document.getElementById("major_more").appendChild(image);  
    });
  })
  .catch(error => console.error(error));

  
  
var currentYear = new Date().getFullYear();
var url = `https://api.themoviedb.org/3/movie/${movieId}/similar?api_key=${API_KEY}&language=en-US&sort_by=release_date.desc&primary_release_year=${currentYear}`;

fetch(url)
  .then(response => response.json())
  .then(data => {
    var similarMovies = data.results;
    var container = document.createElement('div');
    container.className = 'similar-movies';
    similarMovies.forEach(movie => { 
      var image = document.createElement('img');

      var imageUrl = `https://image.tmdb.org/t/p/w300${movie.poster_path}`;
      image.src = imageUrl;
      document.getElementById("major_more").appendChild(image);       
    });
    document.body.appendChild(container);
  })
  .catch(error => console.error(error));

  */
  
var currentYear = new Date().getFullYear();
var url = `https://api.themoviedb.org/3/movie/${movieId}/similar?api_key=${API_KEY}&language=en-US&sort_by=release_date.desc&primary_release_year=${currentYear}&release_date.gte=${currentYear}-01-01`;

fetch(url)
  .then(response => response.json())
  .then(data => {
    var similarMovies = data.results;
    var container = document.createElement('div');
    container.className = 'similar-movies';
    similarMovies.forEach(movie => {  var image = document.createElement('img');

      var imageUrl = `https://image.tmdb.org/t/p/w300${movie.poster_path}`;
      image.src = imageUrl;
      document.getElementById("major_more").appendChild(image);        
    });
   
  })
  .catch(error => console.error(error));
  
  
  
// Step 1: Get movie details
fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`)
  .then(response => response.json())
  .then(movie => {
    // Step 2: Get recommended movies
    fetch(`https://api.themoviedb.org/3/movie/${movie.id}/recommendations?api_key=${API_KEY}&language=en-US`)
      .then(response => response.json())
      .then(recommendedMovies => {
        // Step 3: Display recommended movies
        var containerElement = document.getElementById('moment_val');
        containerElement.innerHTML = ''; // Clear existing content

        recommendedMovies.results.forEach(movie => {
          // Create an <img> element to display the movie poster
          var moviePosterElement = document.createElement('img');
          moviePosterElement.src = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;

          // Append the movie poster element to the container element in the DOM
          containerElement.appendChild(moviePosterElement);
        });
      })
      .catch(error => {
        console.error('Error fetching recommended movies:', error);
      });
  })
  .catch(error => {
    failure_alert('Error fetching movie details:', error)
   // console.error('Error fetching movie details:', error);
  });



  
  
})



         })
         //  tagline  from tmdb dB 
         
         
         
         
         
    
        // Do something with the movie data
     //   console.log(movieData);
      })
      .catch(error => {
        
   //     console.error("Error fetching movie data:", error);
      });
  })
  .catch(error => {
  });

}   //  end of if movies   

} 



//   overall        open_overallwithid        open_overall         
function open_overallwithid(movieId, category){
  
     
  
  
if(category.toString().toLowerCase() =="movies" || category.toString().toLowerCase() =="movie"){
  open_moviesoverall()
}
else if(category.toString().toLowerCase() =="series" || category.toString().toLowerCase() =="tv"){
  open_seriesoverall()
}


 function open_moviesoverall(){
      
var url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${name}`;
  
  
   var movieDetailsUrl = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`;
  
  // Fetch movie details from TMDB API
  fetch(movieDetailsUrl)
    .then(response => response.json())
    .then(data => {
      var backdrop = data.backdrop_path;
      var posterPath = data.poster_path;
      var title = data.title;
      var overview = data.overview;
      var movieId = data.id;
      var genres = data.genres;
    var productionCompanies = data.production_companies;
       var tagline = data.tagline;
  var duration = data.runtime;
    var language = data.original_language;
    var altTitle = data.title !== data.original_title ? data.original_title : null;
    var revenue = data.revenue; 
    var budget = data.budget;
    var adult = data.adult;
    var boxOffice = revenue - budget;      
//    alert(movieId)
  $(function() {   
  // Perform function1 specific actions

  
   PREVIOUS_TAB = CURRENT_TAB
  CURRENT_TAB = "longman_bg" 
   
  history.pushState(null, null, null);
   visitedPages.push("longman_bg");
     document.getElementById('longman_bg').style.width = '100%';
     document.getElementById('longman_inner').scrollTop = 0 ;
})
  //  console.log (data )
    $(function(){
  firebase.database().ref(`moments/movies/${movieId}`).on("child_added", (snapshot) => {
       
var cast = [snapshot.val().post_type]
var image_string = [snapshot.val().image_string]
//  console.log(image_string)
    for(let i=0; i<cast.length; i++){
   if(cast.toString().toLowerCase().trim() =="video"){
    var img = document.createElement('video');
  $(img).addClass("m_profvid");
      img.src = image_string.toString()
      img.currentTime = 0.5 ;
      $(img).click(function(){
       alert(image_string)
        
      })
      $("#moment_val").prepend(img)
}
}
    })
    })
    // moment   
    
    
    $(function(){
      if(adult===false){
        $("#intel_adult").hide()
      }
      else{
        $("#intel_adult").show()
      }
    })
    // adult 
 
  $(function(){

    
    
  });
  
  // moment   
  $(function(){
  if (data.homepage) {
  $("#film_website").show()
var link = document.createElement('a');
link.href = data.homepage ;
link.target = '_blank';
link.textContent = data.homepage ;

// Add the link to the desired element in the DOM
var container = document.getElementById('film_homepage');
container.appendChild(link);

    } else {
       $("#film_website").hide()
    }
var holdTimer; // Variable to store the hold timer

// Function to handle the long press event
function handleLongPress() {
  // Your custom code here
 copyToClipboard(data.homepage)
  small_alertfunc('Copied link to Clipboard')
  //  alert("")
  // Clear the hold timer
  clearTimeout(holdTimer);
}

// Function to start the hold timer
function startHoldTimer() {
  holdTimer = setTimeout(handleLongPress, 1000); // 5000 milliseconds = 5 seconds
}

// Function to cancel the hold timer
function cancelHoldTimer() {
  clearTimeout(holdTimer);
}

// Get the reference to the "film_homepage" div element
var filmHomepage = document.getElementById('film_homepage');

// Attach event listeners for touch and mouse events
filmHomepage.addEventListener('touchstart', startHoldTimer);
filmHomepage.addEventListener('touchend', cancelHoldTimer);
filmHomepage.addEventListener('mousedown', startHoldTimer);
filmHomepage.addEventListener('mouseup', cancelHoldTimer);


    
  })
  //  homepage   website   
      var movieYear = getMovieYear(data.release_date);
      // ... add more movie details as needed
  $("#film_pathid").text(movieId)
  $("#film_pathtype").text("movie")
  $("#intel_year").text(movieYear)
  $("#intel_type").text("Movie")
  $("#intel_series").text(convertMinutesToDuration(duration))  
  $("#m_profname").text(title)
    var number = budget;
var formattedNumber = number.toLocaleString('en-US', { style: 'currency', currency: 'USD' });
    document.querySelector('#film_budget').innerHTML = formattedNumber;
     $("#film_tagline").text(tagline);
     $("#film_length").text(`${duration} minutes`);
     $("#film_aka").text(`${altTitle || ''}`);
     $("#film_revenue").text(`$${revenue.toLocaleString()}`);
   
     $(function(){
fetch(`https://api.themoviedb.org/3/movie/${movieId}/images?api_key=${API_KEY}&include_image_language=en&include_image_type=poster`)
  .then(response => response.json())
  .then(data => {
    var image = data.posters[0]; // or data.backdrops[0] for backdrops
    var ima = data.posters[1]; // or data.backdrops[0] for backdrops
    var imageU = `https://image.tmdb.org/t/p/original${image.file_path}`;
    var imageUrl = `https://image.tmdb.org/t/p/original${ima.file_path}`;
   // console.log(imageUrl); // log the URL of the image to the console  
     document.getElementById("long_leftboard").style.backgroundImage = "url("+imageUrl+")";
      document.getElementById("long_rightboard").style.backgroundImage = "url("+imageU+")";
  })
  .catch(error => {  
    var defaults = `https://image.tmdb.org/t/p/original${posterPath}`;
        document.getElementById("long_leftboard").style.backgroundImage = "url("+defaults+")";
        document.getElementById("long_rightboard").style.backgroundImage = "url("+defaults+")";});
    })
 //end of function to find poster 
   $(function(){
fetch(`https://api.themoviedb.org/3/movie/${movieId}/images?api_key=${API_KEY}`)
  .then(response => response.json())
  .then(data => {
    var posterPath = data.backdrops[0].file_path; // get the poster image URL from the API response
    var posterUrl = `https://image.tmdb.org/t/p/w500/${posterPath}`; // varruct the full poster image URL
    //  document.getElementById("macro_poster").style.backgroundImage = "url("+posterUrl+")";
      $("#long_board").css({"background-image":"url("+posterUrl+")"})
      
      function color_thief() {
    var colorThief = new ColorThief();

    var img = new Image();
    
        
        img.onload = function() {
        // Display main color e.g [125, 189, 193]
        var mainRGB = colorThief.getColor(img);
        // console.log(mainRGB.join(','));
        
   //     var mainColor = document.querySelector('.colors .main .color')
        var a = `rgb(${mainRGB[0]}, ${mainRGB[1]}, ${mainRGB[2]})`;
      //alert(a)
        $("#longman_inner").css({"background-image":"linear-gradient(to bottom, "+a+", #000000) "})
       // $(".major_kids").css({"background-image":"linear-gradient(to bottom, "+a+", #000000) "})
    
    
    }
    
    img.crossOrigin = "Anonymous";
    img.src = posterUrl.toString(); 
    
}
color_thief()



  })
  .catch(error => {
      var defaults = `https://image.tmdb.org/t/p/original${backdrop}`;
      $("#long_board").css({"background-image":"url("+defaults+")"})
   // console.error(error);
  });

})

// end of function to get backdrop & color the tab 
      
      $(function(){
        
var url = `https://api.themoviedb.org/3/movie/${movieId}/images?api_key=${API_KEY}`;

fetch(url)
  .then(response => response.json())
  .then(data => {
    // select only the backdrops
    var backdrops = data.backdrops;

    // loop through the backdrops and create an img element for each one
    backdrops.forEach(backdrop => {
      var img = document.createElement('div');
      var src = `https://image.tmdb.org/t/p/w500${backdrop.file_path}`;
     //  img.style.backgroundImage = "url("+src.toString()+")";
     // $(img).addClass("m_profimg")
    // $("#photo_val").prepend(img)
    }); 
  })
  //   .catch(error => console.error(error));

        

      })
      // end of function for photo_val
      
          $(function(){
   
fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`)  
  .then(response => response.json())
  .then(data => {
    var genres = data.production_countries;
    var productionCompanies = data.spoken_languages;

    var filmcoun = document.getElementById('film_coun');
    var filmlang = document.getElementById('film_lang');
filmcoun.innerHTML = ""  
filmlang.innerHTML = ""

    genres.forEach(genre => {
      var genreSpan = document.createElement('span');
      genreSpan.textContent = genre.name;
      genreSpan.classList.add('notag');
      filmcoun.appendChild(genreSpan);
    });
//console.log (productionCompanies)
    productionCompanies.forEach(company => {
      var compSpan = document.createElement('span');
      compSpan.textContent = company.english_name;
      compSpan.classList.add('tag');
      filmlang.appendChild(compSpan);
        $(compSpan).click(function(){
      relative_find(company.english_name, company.iso_639_1, 'language')
    })
    });
  })
//  .catch(error => console.error(error));


      })
      
      // country & language  
      
      
      $(function(){
   
fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`)
  .then(response => response.json())
  .then(data => {
    var genres = data.genres;
    var productionCompanies = data.production_companies;
//console.log (productionCompanies)
    var filmGenre = document.getElementById('film_genre');
    var filmComp = document.getElementById('company_val');
filmGenre.innerHTML = ""
filmComp.innerHTML = ""

    genres.forEach(genre => {
      var genreSpan = document.createElement('span');
      genreSpan.textContent = genre.name;
      genreSpan.classList.add('tag');
      filmGenre.appendChild(genreSpan);
         $(genreSpan).click(function(){
      relative_find(genre.name, genre.id, 'genre')
    })
    });

    productionCompanies.forEach(company => {
      var abd = document.createElement("section");
      var one = document.createElement("div");
    var two = document.createElement("p");
     one.style.backgroundImage = `url(https://image.tmdb.org/t/p/w300${company.logo_path})`;  
    $(two).text(company.name)
    $(abd).append(one, two)
    $("#company_val").append(abd)
    $(abd).click(function(){
      relative_find(company.name, company.id, 'company')
      console.log (company.name, company.id, 'company')
    })
    });
  })
//  .catch(error => console.error(error));
var datey = formatDate(data.release_date)
  document.querySelector('#film_date').innerHTML = datey;
  

      })
      // genre, company , date
      $(function(){
    $("#film_note").text(overview)
    
    
    
$(function(){

  function search() {window.scrollTo(0,0);
  //  var x = document.querySelector('.search-box').value;   omdb       
  //  var api = "https://www.omdbapi.com/?apikey=47d808d1&t=" + title.toString().toLowerCase() + "&plot=full";
    var api =  (`https://www.omdbapi.com/?apikey=${OMDB_KEY}&t=${title.toString().toLowerCase()}&y=${movieYear}&plot=full`)
    $.getJSON(api, response);
}
function response(data) {
if(data.Response==("True")){
  // omdb      
  //  document.querySelector('.title').innerHTML = data.Title;
    //document.querySelector('.director').innerHTML = "Director: " + data.Director;
  //  document.querySelector('.genre').innerHTML = "Genre: " + data.Genre;
  
  //  document.querySelector('#film_rate').innerHTML = data.imdbRating;
 //   document.querySelector('#film_budget').innerHTML = data.BoxOffice;
 //   document.querySelector('.production').innerHTML = "Production: " + data.Production;
    document.querySelector('#award_txt').innerHTML = data.Awards;
  //  document.querySelector('.language').innerHTML = "Language: " + data.Language;
  //  document.querySelector('#film_date').innerHTML =  data.Released;
    document.querySelector('#film_pg').innerHTML = data.Rated;
    document.querySelector('#story_note').innerHTML = data.Plot;
    document.querySelector('#m_imdb').innerHTML = data.imdbRating;
    
    
}
}
search()
}) // imdb call back function  
    
  
     $(function(){
fetch(`https://api.themoviedb.org/3/movie/${movieId}/keywords?api_key=${API_KEY}`)
  .then(response => response.json())
  .then(data => {
    var keywords = data.keywords;
    var filmTags = document.getElementById("film_tag");
filmTags.innerHTML = ""
    keywords.forEach(keyword => {
      var span = document.createElement('span');
      span.textContent = keyword.name;
      span.classList.add('tag'); // add a class to the span element for styling
      filmTags.appendChild(span); // append the span element to the filmTags container
        $(span).click(function(){
      relative_find(keyword.name, keyword.id, 'keyword')
   //      console.log(keyword.name, keyword.id, 'keyword')
    })
    });
  })
 // .catch(error => console.error(error));
})
    
      })
      // end of function for film_note story tagline & omdb   and tags 
       $(function(){
     
var url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`;

fetch(url)
  .then(response => response.json())
  .then(data => {
   // console.log(data);
    var cast = data.cast;
    var person_id = data.id;
    var castContainer = document.getElementById("cast_val");
    castContainer.innerHTML = "";
    for (let i = 0; i < cast.length; i++) {
      var castMember = cast[i];
      var img = document.createElement("div");
      var name1 = document.createElement("div");
      var name2 = document.createElement("div");
      var bag = document.createElement("div");
var idy = castMember.id 
var id2 = castMember.id 
      $(bag).addClass("m_castdiv");
      $(img).addClass("m_castimg");
      $(name1).addClass("m_castname");
      $(name2).addClass("m_castchar");
      img.src = `https://image.tmdb.org/t/p/w500${castMember.profile_path}`;
      img.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${castMember.profile_path})`;
      $(name1).text(castMember.name);
      $(name2).text(castMember.character);
      $(name1).click(function() {
       var person_id = (cast[i].id);
       open_actorfunc(person_id, "actor")
      });
      $(img).click(function() {
        var a = this.src;
        check_enlarge(a.toString(), "image");
      });

      $(bag).append(img, name1, name2);
      castContainer.appendChild(bag);
    }
  })
.catch(error => {
    /*
     store_ref.on("child_added", (snapshot) => {
       
var cast = [snapshot.val().starcast]
var castarray= cast.toString().split("%"); 
castarray.forEach(function(el) {
    
    var img = document.createElement("div");
      var name1 = document.createElement("div");
      var name2 = document.createElement("div");
      var bag = document.createElement("div");
      
      $(bag).addClass("m_castdiv")
      $(img).addClass("m_castimg")
      $(name1).addClass("m_castname")
      $(name2).addClass("m_castchar")
       img.style.backgroundImage = "url(https://dl.dropbox.com/s/cpuoiau1mh6ghed/images.png?dl=0)";
       $(name1).text(el)
       
      $(name2).text("")
      
      $(bag).append(img, name1, name2)
    $(bag).appendTo("#cast_val");
});
  //  $("#film_note").text(summ)
})
*/
  });
  
  
   })
    // end of cast 
    
     $(function(){
var directorEl = document.getElementById('director_val');
directorEl.innerHTML = ""
fetch(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`)
  .then(response => response.json())
  .then(data => {
    var directors = data.crew.filter(member => member.job === 'Director');
  
    directors.forEach(director => {
      var directorName = director.name;
      var directorTag = document.createElement('span');
      directorTag.classList.add('tag');
      directorTag.textContent = directorName;
      $(directorTag).click(function(){
   //     find_similar('director', director.name, director.id)
        open_actorfunc(director.id)
      })
      directorEl.appendChild(directorTag);
    });
  });

 // .catch(error => console.error(error));

     })
      
      $(function(){
         
// Step 1: Get movie details
fetch(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`)
  .then(response => response.json())
  .then(movie => {
    // Step 2: Get recommended movies
    var bed = `https://api.themoviedb.org/3/movie/${movieId}/recommendations?api_key=${API_KEY}&language=en-US`
    fetch(bed)
      .then(response => response.json())
      .then(recommendedMovies => {
       // alert("1")
        // Step 3: Display recommended movies
        var containerElement = document.getElementById('morefilm_val');
        containerElement.innerHTML = ''; // Clear existing content

        recommendedMovies.results.forEach(movie => {
          // Create an <img> element to display the movie poster
          var moviePosterElement = document.createElement('div');
         var src = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;
       moviePosterElement.style.backgroundImage = "url("+src.toString()+")";
      $(moviePosterElement).addClass("m_profimg")
          // Append the movie poster element to the container element in the DOM
       $(moviePosterElement).click(function(){
         open_opera(movie.title, movie.id, bed )
       })   
          containerElement.appendChild(moviePosterElement);
        });
      })
      .catch(error => {
       // console.error('Error fetching recommended movies:', error);
      });
  })
  .catch(error => {
     failure_alert('Error fetching movie details:', error)
  //  console.error('Error fetching movie details:', error);
  });
      })
      // end of more like this 
      
     $(function(){
       
var ref_today = firebase.database().ref("my_collection/"+useremail.toString())
var collectBtn =  $("#film_collectbtn")
check_movieforcollection(movieId).then(function(result) {
  if (result) {
    
 collectBtn.html('<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#000" class="bi bi-patch-check" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M10.354 6.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7 8.793l2.646-2.647a.5.5 0 0 1 .708 0z"/><path d="m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z"/></svg>')
 
//alert(title + '🚳🚳🚳🚳🚳'+movieId)
 




window.overall_addcollect = function(){
  //  alert("")
 
ref_today.orderByChild("idy").equalTo(movieId.toString()).once("value")
  .then((snapshot) => {
    snapshot.forEach((childSnapshot) => {
      childSnapshot.ref.remove()
     
    });
 collectBtn.html('<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#000" class="bi bi-patch-plus" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8 5.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V10a.5.5 0 0 1-1 0V8.5H6a.5.5 0 0 1 0-1h1.5V6a.5.5 0 0 1 .5-.5z"/><path d="m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z"/></svg>')
  })
  .catch((error) => {
    //console.error("Error retrieving snapshots: ", error);
  });

 
 
 collectBtn.html('<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#000" class="bi bi-patch-plus" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8 5.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V10a.5.5 0 0 1-1 0V8.5H6a.5.5 0 0 1 0-1h1.5V6a.5.5 0 0 1 .5-.5z"/><path d="m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z"/></svg>')
 alert_function('good', `successfully removed ${title} from your Collections`)
}
 // end of click 
    // movie is in collection
  } else {

 
   var posterUrl = `https://image.tmdb.org/t/p/w500/${data.poster_path}`; // varruct the full poster image URL
 window.overall_addcollect = function(){
  //  alert("")
   var d = new Date();  
       var time  = d.toLocaleTimeString();
      var date = d.getDate();
    var fullyear = d.getFullYear();
    var month = d.getMonth();
   month= month+1;
var date =(date+"|"+month+"|"+fullyear);
  ref_today.push({
    "name": title.toString(),
    "image": posterUrl.toString(),
    "year": movieYear.toString(),
    "msgdate": date.toString(),
    "idy": movieId.toString(),
    "type": "extra",
    "id": "collection",
    "category": "movies",
    "msgtime": time.toString()
  });   
  
 collectBtn.html('<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#000" class="bi bi-patch-check" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M10.354 6.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7 8.793l2.646-2.647a.5.5 0 0 1 .708 0z"/><path d="m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z"/></svg>')
 
  alert_function('good', `successfully added ${title} to your Collections`)
 }
 
    // movie is not in collection
  }
}).catch(function(error) {
  // handle error
});
     })
    
    // collection  
    
    
      $(function(){
        
// playlist     playlist      
window.overall_addlist = function(){
  
   opera_exit()
   var div = document.getElementById("share_playlistdiv")
   div.style.bottom = "2%";  
   div.innerHTML = ''; 
      var playersRef = firebase.database().ref("my_playlist/"+useremail);
var posterUrl = `https://image.tmdb.org/t/p/w500/${data.poster_path}`; // varruct the full poster image URL
playersRef.orderByKey().on("child_added", function(data) {
   var seasonlist=[data.key]
for(let i=0; i<seasonlist.length; i++){
  var up =document.createElement('div')
up.id="mainlist"
$(up).append(seasonlist)
    
    $(up).click(function(){
    var d = new Date();  
       var time  = d.toLocaleTimeString();
      var date = d.getDate();
    var fullyear = d.getFullYear();
    var month = d.getMonth();
   month= month+1;
var date =(date+"|"+month+"|"+fullyear);
var ref_today = firebase.database().ref("my_playlist/"+useremail+"/"+seasonlist)
  ref_today.push({
    "name": title.toString(),
    "image": posterUrl.toString(),
    "year": movieYear.toString(),
    "msgdate": date.toString(),
    "idy": movieId.toString(),
    "type": "extra",
    "id": "playlist",
    "category": "movies",
    "msgtime": time.toString()
  });   
  
     div.style.bottom = "-50%";  
     alert_function('good',"Successfully added to playlist ")
    
    })
    $("#share_playlistdiv").prepend(up)
}
})
} // end of list_operafunc() 

      })
    // share  
    
    $(function(){
      
        var m =   firebase.database().ref("film_comments/movies/"+movieId.toString())
  m.on("child_added", (snapshot) => {
   // console.log(snapshot.val())
    var time  =[snapshot.val().time]; 
    var date  =[snapshot.val().date]; 
    var htmlmsg  =[snapshot.val().htmlmessage]; 
    var textmsg  =[snapshot.val().textmessage]; 
    var idy  =[snapshot.val().postId]; 
    var type  =[snapshot.val().postType]; 
    var senderemail  =[snapshot.val().useremail]; 
    var commentId  =[snapshot.val().commentId]; 
    var extra1  =[snapshot.val().extra1]; 
    var extra2  =[snapshot.val().extra2]; 
  for (let i = 0; i < senderemail.length; i++) {
    var sec = document.createElement("section")
    var nav = document.createElement("nav")
    var img = document.createElement("header")
    var msg = document.createElement("p")
    var aside = document.createElement("aside")
    var svg = document.createElement("svg")
    var num = document.createElement("div")
    
     $(svg).append('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-heart" viewBox="0 0 16 16"><path d="m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z"/></svg>')
    $(msg).html(htmlmsg)
       
        $(function(){
 var database = firebase.database();
 
 var userId = useremail; 
  var userRef = database.ref('filmcomment_likes/movies/' + movieId.toString() +'/'+ commentId.toString() + '/' + userId.toString());
svg.addEventListener('click', function() {
 // alert(userRef)
  // Check if the user has already liked the post

  userRef.once('value', function(snapshot) {
    var hasLiked = snapshot.val();

    if (hasLiked) {
      // User has already liked the post, so remove the like
      userRef.remove();
     
    } else {
      // User has not liked the post, so add the like
      userRef.set(true);
   
    }
  });
});
userRef.on('value', function(snapshot) {
    var hasLiked = snapshot.val();
    if (hasLiked) {
      $(svg).addClass('like_effect')
      $(svg).css({"color":"red", "transition" : "color 0.5s"})
    }
    else{
      $(svg).removeClass('like_effect')
      $(svg).css({"color":"#fff"})
    }
  })
function getTotalLikes(postIdy , commentId) {
  var likesRef = database.ref("filmcomment_likes/movies/"+postIdy.toString() + '/'+ commentId.toString());
//  alert(likesRef)
  likesRef.on('value', function(snapshot) {
    var likes = snapshot.val(); 
  //  console.log(likes)
    var totalLikes = Object.keys(likes || {}).length;
  
var formattedLikes = formatNumber(totalLikes);
$(num).text(formattedLikes);
  });
}
getTotalLikes(movieId, commentId);               
               
        })
    
    
 //   $(num).text('0')
    
    $(aside).append(svg, num)
    $(nav).append(img, msg)
    $(sec).append(nav, aside)
    $("#overall_reviewinner").prepend(sec) 
  }     
     //  end of for each 
     })
     
     
    
     window.send_a_comment = function(){
  // alert("")
  var input = document.getElementById("review_text")
   var htmlmessage = input.innerHTML
   var textmessage = input.innerText
   //var postId = input.innerText
     var d = new Date();

       var time_string = d.toLocaleTimeString();

     var date = d.getDate();
    var fullyear = d.getFullYear();
    var month = d.getMonth();
   month= month+1;
var date_string=(fullyear+"|"+month+"|"+date);
var msgsRef = firebase.database().ref("film_comments/movies/"+movieId.toString())
 if ((navigator.onLine) && (textmessage !== "")) {
   
var myArray = [1, 2, 3, 4, 5,6,7 ,8, 9, 0 ];
var randomItem = getRandomItem(myArray);

 msgsRef.push ({ 
useremail: useremail.toString(), 
htmlmessage: htmlmessage.toString(), 
textmessage: textmessage.toString(), 
postId:movieId.toString(),
postType:"movies",
extra1:"",
extra2:"",
commentId:Date.now() + '-' + useremail.toString() + '-movies'+ movieId.toString() +'-' +randomItem.toString(),
date:date_string.toString(),
time:time_string.toString()
  
  }).then(function(){
  document.getElementById("review_text").innerHTML = ""
  }).catch(function(error) { 
  failure_alert(error.message)
});

}
  
     }
     // end of function 
     
     $("#review_sendbtn").click(function(){
    send_a_comment() 
  })
      
      
    })
    //  comment    
    
    
    
    //  $(function(){})
        
    })
    // end of movieDetailsUrl    
    
      
    }  
// end of function open_moviesoverall  



 function open_seriesoverall(){
   
var url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${name}`;
  
  
   var movieDetailsUrl = `https://api.themoviedb.org/3/tv/${movieId}?api_key=${API_KEY}`;
//  var movieDetailsUrl = `https://api.themoviedb.org/3/tv/123?api_key=${API_KEY}`;

fetch(movieDetailsUrl)
  .then(response => response.json())
  .then(data => {
 //   console.log(data)
      var backdrop = data.backdrop_path;
      var posterPath = data.poster_path;
      var title = data.name;
      var overview = data.overview;
      var movieId = data.id;
      var genres = data.genres;
    var productionCompanies = data.production_companies;
       var tagline = data.tagline;
    var language = data.original_language;
    var adult = data.adult;
    
 

   
      var movieYear = getMovieYear(data.first_air_date);
      // ... add more movie details as needed
   //   alert("")
   
   $(function() {   
  // Perform function1 specific actions

  
   PREVIOUS_TAB = CURRENT_TAB
  CURRENT_TAB = "longman_bg"
   
  history.pushState(null, null, null);
   visitedPages.push("longman_bg");
     document.getElementById('longman_bg').style.width = '100%';
     document.getElementById('longman_inner').scrollTop = 0;
})
   
     $(function(){
      if(adult===false){
        $("#intel_adult").hide()
      }
      else{
        $("#intel_adult").show()
      }
    })
    // adult 
    
    
     $(function(){
       document.getElementById("jolly_val").innerHTML = ""
       $("#jolly_element").show()
       fetchSeasons(movieId)   
  .then(season => {
    // Process the season data
     season.forEach(movie => {
       var cover = document.createElement("div")
       var right = document.createElement("div")
       var img = document.createElement("div")
       var top = document.createElement("div")
       var mid = document.createElement("div")
       var bot = document.createElement("div")
       var imdb = document.createElement("span")
       var year = document.createElement("span")
       var epi = document.createElement("span")
       
       $(cover).addClass("jolly_cover")
       $(right).addClass("jolly_side")
       $(img).addClass("jolly_img")
       $(top).addClass("jolly_top")
       $(mid).addClass("jolly_mid")
       $(bot).addClass("jolly_bot")
       $(imdb).addClass("jolly_rate")
       
     img.style.backgroundImage = `url("https://image.tmdb.org/t/p/w300${movie.poster_path}")`;
     
     $(top).text(movie.name)
     $(mid).text(movie.overview)
     $(imdb).text(estimateToDecimal(movie.vote_average))
     $(year).text(getMovieYear(movie.air_date))
     $(epi).text(movie.episode_count+" episodes")
  //     alert("")
     
     $(bot).append(imdb, year, epi)
     $(right).append(top, mid, bot)
     $(cover).append(img, right)
     $("#jolly_val").prepend(cover)
  // console.log('Season:', movie);
  
  $(cover).click(function(){
    open_seasonoverall(movieId, movie.season_number)
  })  
  
     })
  })
     })
     //  season  
     $(function(){
  if (data.homepage) {
  $("#film_website").show()
var link = document.createElement('a');
link.href = data.homepage ;
link.target = '_blank';
link.textContent = data.homepage ;

// Add the link to the desired element in the DOM
var container = document.getElementById('film_homepage');
container.appendChild(link);

    } else {
       $("#film_website").hide()
    }
    var holdTimer; // Variable to store the hold timer

// Function to handle the long press event
function handleLongPress() {
  // Your custom code here
 copyToClipboard(data.homepage)
  small_alertfunc('Copied link to Clipboard')
  //  alert("")
  // Clear the hold timer
  clearTimeout(holdTimer);
}

// Function to start the hold timer
function startHoldTimer() {
  holdTimer = setTimeout(handleLongPress, 1000); // 5000 milliseconds = 5 seconds
}

// Function to cancel the hold timer
function cancelHoldTimer() {
  clearTimeout(holdTimer);
}

// Get the reference to the "film_homepage" div element
var filmHomepage = document.getElementById('film_homepage');

// Attach event listeners for touch and mouse events
filmHomepage.addEventListener('touchstart', startHoldTimer);
filmHomepage.addEventListener('touchend', cancelHoldTimer);
filmHomepage.addEventListener('mousedown', startHoldTimer);
filmHomepage.addEventListener('mouseup', cancelHoldTimer);


    
  })
  //  homepage   website   
    
    $("#intel_year").text(movieYear)
  $("#intel_type").text("Series")  
  $("#film_pathid").text(movieId)
  $("#film_pathtype").text("tv")
  
  $("#intel_series").text(`S${data.number_of_seasons} & E${data.number_of_episodes}`)
  $("#intel_series").click(function(){
    open_seasonoverall(movieId, 1)
  })  
  $("#jolly_head").click(function(){
    open_seasonoverall(movieId, 1)
  })  
  
  $("#intel_status").text(`${data.status}`)
  $("#m_profname").text(title)
    
     $("#film_tagline").text(tagline);
    
   $(function(){
    fetch(`https://api.themoviedb.org/3/tv/${movieId}/images?api_key=${API_KEY}&include_image_language=en&include_image_type=poster`)
      .then(response => response.json())
      .then(data => {
        var posters = data.posters.slice(0, 2); // select first 2 posters
        var image1 = posters[0];
        var image2 = posters[1];
        var imageUrl1 = `https://image.tmdb.org/t/p/original${image1.file_path}`;
        var imageUrl2 = `https://image.tmdb.org/t/p/original${image2.file_path}`;
        document.getElementById("long_leftboard").style.backgroundImage = "url("+imageUrl1+")";
        document.getElementById("long_rightboard").style.backgroundImage = "url("+imageUrl2+")";
      })
      .catch(error => {
        var defaults = `https://image.tmdb.org/t/p/original${posterPath}`;
        document.getElementById("long_leftboard").style.backgroundImage = "url("+defaults+")";
        document.getElementById("long_rightboard").style.backgroundImage = "url("+defaults+")";
   //     console.error(error)
        
      });
});
 //end of function to find poster 

   $(function(){
fetch(`https://api.themoviedb.org/3/tv/${movieId}/images?api_key=${API_KEY}`)
  .then(response => response.json())
  .then(data => {
    var posterPath = data.backdrops[0].file_path; // get the poster image URL from the API response
    var posterUrl = `https://image.tmdb.org/t/p/w500/${posterPath}`; // varruct the full poster image URL
    //  document.getElementById("macro_poster").style.backgroundImage = "url("+posterUrl+")";
      $("#long_board").css({"background-image":"url("+posterUrl+")"})
      
      function color_thief() {
    var colorThief = new ColorThief();

    var img = new Image();
    
        
        img.onload = function() {
        // Display main color e.g [125, 189, 193]
        var mainRGB = colorThief.getColor(img);
        // console.log(mainRGB.join(','));
        
   //     var mainColor = document.querySelector('.colors .main .color')
        var a = `rgb(${mainRGB[0]}, ${mainRGB[1]}, ${mainRGB[2]})`;
      //alert(a)
        $("#longman_inner").css({"background-image":"linear-gradient(to bottom, "+a+", #000000) "})
    
    }
    
    img.crossOrigin = "Anonymous";
    img.src = posterUrl.toString(); 
    
}
color_thief()



  })
  .catch(error => {
  //  alert(backdrop)
      var defaults = `https://image.tmdb.org/t/p/original${backdrop}`;
      $("#long_board").css({"background-image":"url("+defaults+")"})
  });

})
// end of function to get backdrop & color the tab 
      
      $(function(){
        
var url = `https://api.themoviedb.org/3/tv/${movieId}/images?api_key=${API_KEY}`;

fetch(url)
  .then(response => response.json())
  .then(data => {
    // select only the backdrops
    var backdrops = data.backdrops;

    // loop through the backdrops and create an img element for each one
    backdrops.forEach(backdrop => {
      var img = document.createElement('div');
      var src = `https://image.tmdb.org/t/p/w500${backdrop.file_path}`;
     //  img.style.backgroundImage = "url("+src.toString()+")";
     // $(img).addClass("m_profimg")
    // $("#photo_val").prepend(img)
    }); 
  })
  //   .catch(error => console.error(error));

        

      })
      // end of function for photo_val
 
     $(function(){
   
fetch(`https://api.themoviedb.org/3/tv/${movieId}?api_key=${API_KEY}`)  
  .then(response => response.json())
  .then(data => {
    var genres = data.production_countries;
    var productionCompanies = data.spoken_languages;

    var filmcoun = document.getElementById('film_coun');
    var filmlang = document.getElementById('film_lang');
filmcoun.innerHTML = ""  
filmlang.innerHTML = ""

    genres.forEach(genre => {
      var genreSpan = document.createElement('span');
      genreSpan.textContent = genre.name;
      genreSpan.classList.add('notag');
      filmcoun.appendChild(genreSpan);
    });

    productionCompanies.forEach(company => {
      var compSpan = document.createElement('span');
      compSpan.textContent = company.english_name;
      compSpan.classList.add('tag');
      filmlang.appendChild(compSpan);
        $(compSpan).click(function(){
      relative_find(company.english_name, company.iso_639_1, 'language')
      console.log (company.english_name, company.iso_639_1, 'language')
    })
    });
  })
//  .catch(error => console.error(error));


      })
      
      // country & language  
 
 
      $(function(){
   
fetch(`https://api.themoviedb.org/3/tv/${movieId}?api_key=${API_KEY}`)
  .then(response => response.json())
  .then(data => {
    var genres = data.genres;
    var productionCompanies = data.production_companies;

    var filmGenre = document.getElementById('film_genre');
    var filmComp = document.getElementById('company_val');
filmGenre.innerHTML = ""
filmComp.innerHTML = ""

    genres.forEach(genre => {
      var genreSpan = document.createElement('span');
      genreSpan.textContent = genre.name;
      genreSpan.classList.add('tag');
      filmGenre.appendChild(genreSpan);
        $(genreSpan).click(function(){
      relative_find(genre.name, genre.id, 'genre')
    })
    });

    productionCompanies.forEach(company => {
       var abd = document.createElement("section");
      var one = document.createElement("div");
    var two = document.createElement("p");
     one.style.backgroundImage = `url(https://image.tmdb.org/t/p/w300${company.logo_path})`;  
    $(two).text(company.name)
    $(abd).append(one, two)
    $("#company_val").append(abd)
      $(abd).click(function(){
      relative_find(company.name, company.id, 'company')
    })
    });
  })
//  .catch(error => console.error(error));
var datey = formatDate(data.first_air_date )
  document.querySelector('#film_date').innerHTML = datey;
  
      })
      // genre, company , date
    //   alert('')
      
      $(function(){
    $("#film_note").text(overview)
    
    
    
$(function(){

  function search() {window.scrollTo(0,0);
 
    var api =  (`https://www.omdbapi.com/?apikey=${OMDB_KEY}&t=${title.toString().toLowerCase()}&y=${movieYear}&plot=full`)
    $.getJSON(api, response);
}
function response(data) {
if(data.Response==("True")){
  // omdb      
 
    document.querySelector('#award_txt').innerHTML = data.Awards;
    document.querySelector('#film_pg').innerHTML = data.Rated;
    document.querySelector('#story_note').innerHTML = data.Plot;
    document.querySelector('#m_imdb').innerHTML = data.imdbRating;
    
    
}
}
search()
}) // imdb call back function  
    
  
     $(function(){
fetch(`https://api.themoviedb.org/3/tv/${movieId}/keywords?api_key=${API_KEY}`)
  .then(response => response.json())
  .then(data => {
   // console.log (data )
    var keywords = data.results;
    var filmTags = document.getElementById("film_tag");
filmTags.innerHTML = ""
    keywords.forEach(keyword => {
      var span = document.createElement('span');
      span.textContent = keyword.name;
      span.classList.add('tag'); // add a class to the span element for styling
      filmTags.appendChild(span); // append the span element to the filmTags container
        $(span).click(function(){
      relative_find(keyword.name, keyword.id, 'keyword')
  //    console.log(keyword.name, keyword.id, 'keyword')
    })
    });
  })
 // .catch(error => console.error(error));
})
    
      })
      // end of function for film_note story tagline & omdb   and tags 
      
      
       $(function(){
     
var url = `https://api.themoviedb.org/3/tv/${movieId}/credits?api_key=${API_KEY}`;

fetch(url)
  .then(response => response.json())
  .then(data => {
   // console.log(data);
    var cast = data.cast;
    var person_id = data.id;
    var castContainer = document.getElementById("cast_val");
    castContainer.innerHTML = "";
    for (let i = 0; i < cast.length; i++) {
      var castMember = cast[i];
      var img = document.createElement("div");
      var name1 = document.createElement("div");
      var name2 = document.createElement("div");
      var bag = document.createElement("div");
var idy = castMember.id 
var id2 = castMember.id 
      $(bag).addClass("m_castdiv");
      $(img).addClass("m_castimg");
      $(name1).addClass("m_castname");
      $(name2).addClass("m_castchar");
      img.src = `https://image.tmdb.org/t/p/w500${castMember.profile_path}`;
      img.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${castMember.profile_path})`;
      $(name1).text(castMember.name);
      $(name2).text(castMember.character);
      $(name1).click(function() {
       var person_id = (cast[i].id);
       open_actorfunc(person_id, "actor")
      });
      $(img).click(function() {
        var a = this.src;
        check_enlarge(a.toString(), "image");
      });

      $(bag).append(img, name1, name2);
      castContainer.appendChild(bag);
    }
  })
.catch(error => {
  
  });
  
  
   })
    // end of cast 
  //   alert('')
     $(function(){
       $("#director_head").text("Creator")
var directorEl = document.getElementById('director_val');
directorEl.innerHTML = ""
 // .catch(error => console.error(error));
 
var creators = data.created_by;
      creators.forEach(creator => {
        const creatorName = creator.name;
        const creatorTag = document.createElement('span');
        creatorTag.classList.add('tag');
        creatorTag.textContent = creatorName;
        directorEl.appendChild(creatorTag);
        
       $(creatorTag).click(function(){
      //  find_similar('director', creator.name, creator.id)
         open_actorfunc(creator.id)
      }) 
        
      });
  
  //  .catch(error => console.error(error));


     })
    
      $(function(){
         
// Step 1: Get movie details
fetch(`https://api.themoviedb.org/3/tv/${movieId}?api_key=${API_KEY}&language=en-US`)
  .then(response => response.json())
  .then(movie => {
    // Step 2: Get recommended movies
    var bed = `https://api.themoviedb.org/3/tv/${movieId}/recommendations?api_key=${API_KEY}&language=en-US`
    fetch(bed)
      .then(response => response.json())
      .then(recommendedMovies => {
       // alert("1")
        // Step 3: Display recommended movies
        var containerElement = document.getElementById('morefilm_val');
        containerElement.innerHTML = ''; // Clear existing content

        recommendedMovies.results.forEach(movie => {
          // Create an <img> element to display the movie poster
          var moviePosterElement = document.createElement('div');
         var src = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;
       moviePosterElement.style.backgroundImage = "url("+src.toString()+")";
      $(moviePosterElement).addClass("m_profimg")
          // Append the movie poster element to the container element in the DOM
       $(moviePosterElement).click(function(){
         open_opera(movie.title, movie.id, bed )
       })   
          containerElement.appendChild(moviePosterElement);
        });
      })
      .catch(error => {
       // console.error('Error fetching recommended movies:', error);
      });
  })
  .catch(error => {
     failure_alert('Error fetching movie details:', error)
  //  console.error('Error fetching movie details:', error);
  });
      })
      // end of more like this 
   
      
     $(function(){
       
var ref_today = firebase.database().ref("my_collection/"+useremail.toString())
var collectBtn =  $("#film_collectbtn")
check_movieforcollection(movieId).then(function(result) {
  if (result) {
    
 collectBtn.html('<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#000" class="bi bi-patch-check" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M10.354 6.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7 8.793l2.646-2.647a.5.5 0 0 1 .708 0z"/><path d="m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z"/></svg>')
 
//alert(title + '🚳🚳🚳🚳🚳'+movieId)
 




window.overall_addcollect = function(){
  //  alert("")
 
ref_today.orderByChild("idy").equalTo(movieId.toString()).once("value")
  .then((snapshot) => {
    snapshot.forEach((childSnapshot) => {
      childSnapshot.ref.remove()
     
    });
 collectBtn.html('<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#000" class="bi bi-patch-plus" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8 5.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V10a.5.5 0 0 1-1 0V8.5H6a.5.5 0 0 1 0-1h1.5V6a.5.5 0 0 1 .5-.5z"/><path d="m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z"/></svg>')
  })
  .catch((error) => {
    //console.error("Error retrieving snapshots: ", error);
  });

 
 
 collectBtn.html('<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#000" class="bi bi-patch-plus" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8 5.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V10a.5.5 0 0 1-1 0V8.5H6a.5.5 0 0 1 0-1h1.5V6a.5.5 0 0 1 .5-.5z"/><path d="m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z"/></svg>')
 alert_function('good', `successfully removed ${title} from your Collections`)
}
 // end of click 
    // movie is in collection
  } else {

 
   var posterUrl = `https://image.tmdb.org/t/p/w500/${data.poster_path}`; // varruct the full poster image URL
 window.overall_addcollect = function(){
  //  alert("")
   var d = new Date();  
       var time  = d.toLocaleTimeString();
      var date = d.getDate();
    var fullyear = d.getFullYear();
    var month = d.getMonth();
   month= month+1;
var date =(date+"|"+month+"|"+fullyear);
  ref_today.push({
    "name": title.toString(),
    "image": posterUrl.toString(),
    "year": movieYear.toString(),
    "msgdate": date.toString(),
    "idy": movieId.toString(),
    "type": "extra",
    "id": "collection",
    "category": "series",
    "msgtime": time.toString()
  });   
  
 collectBtn.html('<svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#000" class="bi bi-patch-check" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M10.354 6.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7 8.793l2.646-2.647a.5.5 0 0 1 .708 0z"/><path d="m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z"/></svg>')
 
  alert_function('good', `successfully added ${title} to your Collections`)
 }
 
    // movie is not in collection
  }
}).catch(function(error) {
  // handle error
});
     })
    
    // collection  
    
    
      $(function(){
        
// playlist     playlist      
window.overall_addlist = function(){
  
   opera_exit()
   var div = document.getElementById("share_playlistdiv")
   div.style.bottom = "2%";  
   div.innerHTML = ''; 
      var playersRef = firebase.database().ref("my_playlist/"+useremail);
var posterUrl = `https://image.tmdb.org/t/p/w500/${data.poster_path}`; // varruct the full poster image URL
playersRef.orderByKey().on("child_added", function(data) {
   var seasonlist=[data.key]
for(let i=0; i<seasonlist.length; i++){
  var up =document.createElement('div')
up.id="mainlist"
$(up).append(seasonlist)
    
    $(up).click(function(){
    var d = new Date();  
       var time  = d.toLocaleTimeString();
      var date = d.getDate();
    var fullyear = d.getFullYear();
    var month = d.getMonth();
   month= month+1;
var date =(date+"|"+month+"|"+fullyear);
var ref_today = firebase.database().ref("my_playlist/"+useremail+"/"+seasonlist)
  ref_today.push({
    "name": title.toString(),
    "image": posterUrl.toString(),
    "year": movieYear.toString(),
    "msgdate": date.toString(),
    "idy": movieId.toString(),
    "type": "extra",
    "id": "playlist",
    "category": "series",
    "msgtime": time.toString()
  });   
  
     div.style.bottom = "-50%";  
     alert_function('good',"Successfully added to playlist ")
    
    })
    $("#share_playlistdiv").prepend(up)
}
})
} // end of list_operafunc() 

      })
    // share  
    
      $(function(){
      
        var m =   firebase.database().ref("film_comments/series/general/"+movieId.toString())
  m.on("child_added", (snapshot) => {
   // console.log(snapshot.val())
    var time  =[snapshot.val().time]; 
    var date  =[snapshot.val().date]; 
    var htmlmsg  =[snapshot.val().htmlmessage]; 
    var textmsg  =[snapshot.val().textmessage]; 
    var idy  =[snapshot.val().postId]; 
    var type  =[snapshot.val().postType]; 
    var senderemail  =[snapshot.val().useremail]; 
    var commentId  =[snapshot.val().commentId]; 
    var extra1  =[snapshot.val().extra1]; 
    var extra2  =[snapshot.val().extra2]; 
  for (let i = 0; i < senderemail.length; i++) {
    var sec = document.createElement("section")
    var nav = document.createElement("nav")
    var img = document.createElement("header")
    var msg = document.createElement("p")
    var aside = document.createElement("aside")
    var svg = document.createElement("svg")
    var num = document.createElement("div")
    
     $(svg).append('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-heart" viewBox="0 0 16 16"><path d="m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z"/></svg>')
    $(msg).html(htmlmsg)
       
        $(function(){
 var database = firebase.database();
 
 var userId = useremail; 
  var userRef = database.ref('filmcomment_likes/series/' + movieId.toString() +'/'+ commentId.toString() + '/' + userId.toString());
svg.addEventListener('click', function() {
 // alert(userRef)
  // Check if the user has already liked the post

  userRef.once('value', function(snapshot) {
    var hasLiked = snapshot.val();

    if (hasLiked) {
      // User has already liked the post, so remove the like
      userRef.remove();
     
    } else {
      // User has not liked the post, so add the like
      userRef.set(true);
   
    }
  });
});
userRef.on('value', function(snapshot) {
    var hasLiked = snapshot.val();
    if (hasLiked) {
      $(svg).addClass('like_effect')
      $(svg).css({"color":"red", "transition" : "color 0.5s"})
    }
    else{
      $(svg).removeClass('like_effect')
      $(svg).css({"color":"#fff"})
    }
  })
function getTotalLikes(postIdy , commentId) {
  var likesRef = database.ref("filmcomment_likes/series/"+postIdy.toString() + '/'+ commentId.toString());
//  alert(likesRef)
  likesRef.on('value', function(snapshot) {
    var likes = snapshot.val(); 
  //  console.log(likes)
    var totalLikes = Object.keys(likes || {}).length;
  
var formattedLikes = formatNumber(totalLikes);
$(num).text(formattedLikes);
  });
}
getTotalLikes(movieId, commentId);               
               
        })
    
    
 //   $(num).text('0')
    
    $(aside).append(svg, num)
    $(nav).append(img, msg)
    $(sec).append(nav, aside)
    $("#overall_reviewinner").prepend(sec) 
  }     
     //  end of for each 
     })
     
     
    
     window.send_a_comment = function(){
  // alert("")   comment     
  var input = document.getElementById("review_text")
   var htmlmessage = input.innerHTML
   var textmessage = input.innerText
   //var postId = input.innerText
     var d = new Date();

       var time_string = d.toLocaleTimeString();

     var date = d.getDate();
    var fullyear = d.getFullYear();
    var month = d.getMonth();
   month= month+1;
var date_string=(fullyear+"|"+month+"|"+date);
var msgsRef = firebase.database().ref("film_comments/series/general/"+movieId.toString())
 if ((navigator.onLine) && (textmessage !== "")) {
   
var myArray = [1, 2, 3, 4, 5,6,7 ,8, 9, 0 ];
var randomItem = getRandomItem(myArray);
//   alert(1)
 msgsRef.push ({ 
useremail: useremail.toString(), 
htmlmessage: htmlmessage.toString(), 
textmessage: textmessage.toString(), 
postId:movieId.toString(),
postType:"series",
extra1:"",
extra2:"",
commentId:Date.now() + '-' + useremail.toString() + '-series'+ movieId.toString() +'-' +randomItem.toString(),
date:date_string.toString(),
time:time_string.toString()
  
  }).then(function(){
  document.getElementById("review_text").innerHTML = ""
  }).catch(function(error) { 
  failure_alert(error.message)
});

}
  
     }
     // end of function 
     
     $("#review_sendbtn").click(function(){
    send_a_comment() 
  })
      
      
    })
    //  comment    
    
    
    
    
//     alert('')
    
      
    //  $(function(){})
        
    })
    // end of movieDetailsUrl    
    
    
      
 }  
// end of function open_seriesoverall  



} 
// end of overall  function   overall            open_          

//  alert("you need to add a function to get the text of the btn clicked in those view latest buttons so as to cast a condition ")
// start of function  open_latestfunc     latest       
function open_latestfunc(a,b, itemy, link){
  $("#biglatest_exitbtn").click(function(){
    
   if(typeof clear_latesturl != 'function'){
   window.clear_latesturl = function(){
    return false;
   };
}
     clear_latesturl()
  document.getElementById("biglatest_bg").classList.remove("drop");
  
     history.back();     
    CURRENT_TAB = visitedPages[visitedPages.length - 1];
  history_back()
  })
     $("#latest_movbtn").click(function(){
       $("#latest_serdiv").hide()
       $("#latest_movdiv").show()
       //  $(".tag_controlbtns").css({"background-color":"#4444"})
    //  $(this).css({"background-color":"#e67e22"})
      $(".latest_controlbtns").removeClass("week_controlclass")
      $(this).addClass("week_controlclass")
     })
     $("#latest_serbtn").click(function(){
       $("#latest_serdiv").show()
       $("#latest_movdiv").hide()
       //  $(".tag_controlbtns").css({"background-color":"#4444"})
    //  $(this).css({"background-color":"#e67e22"})
      $(".latest_controlbtns").removeClass("week_controlclass")
      $(this).addClass("week_controlclass")
     })
     
     if(b.toString().toLowerCase() =="movies"){
       $("#latest_movbtn").click()
     }
     if(b.toString().toLowerCase() =="series"){
       $("#latest_serbtn").click()
     }
     
var ty_pe = $("#radio"+a).val()
  document.getElementById("biglatest_bg").classList.add("drop");
   PREVIOUS_TAB = CURRENT_TAB

  CURRENT_TAB = "biglatest_bg"

   
  history.pushState(null, null, null);
   visitedPages.push("biglatest_bg");
$("#latest_bgtop").text(ty_pe)
/*
$(function(){
  var sor = $(".selected_sort").text()  
  var sort = sor.toString().toLowerCase().trim()
  var url ;
  if(sort = "popularity"){
    url =`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_original_language=${language}&include_adult=false&sort_by=popularity.desc`
  }
  else if(sort = "revenue"){
    url =`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_original_language=${language}&include_adult=false&sort_by=revenue.desc`
  }
  else if(sort = "release date"){
    url =`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_original_language=${language}&include_adult=false&sort_by=revenue.desc`
  }
  
  fetch(url)
    .then(response => response.json())
    .then(data => {
 console.log(data)
      data.results.forEach(movie => {
    var a = document.createElement("section")
   
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
  //   $(a).addClass("late_kids")
     $(a).click(function(){
       open_opera (movie.title, movie.id, url)
     })
     $("#latest_movdiv").append(a)
      });
      
      // Increment the current page counter
    //  currentPage++;
    })
    .catch(error => {
     // console.error('Error fetching movies:', error);
    });
    
 
 
 
})
//  end of movies 
*/

let currentPage = 1;
let moviesPerPage = 15;
let totalMovies = 0;
//  let itemy = item 
 
  window.latest_contentfunc = function(){
   // alert("")
//  alert(itemy)
    document.getElementById("latest_movdiv").innerHTML =""
       $(function(){
    


// Function to fetch more images (movies) from TMDB API
function fetchLanguageImages() {
  // Calculate the total number of pages needed to fetch the desired number of movies
  var totalPages = Math.ceil(totalMovies / moviesPerPage);
  
  // Check if all movies have been fetched already
  if (currentPage > totalPages) {
 //   console.log('All movies have been fetched!');
    return;
  }
  
  // Fetch popular movies from TMDB API
   var sor = $(".selected_sort").text()  
  let sort = sor.toString().toLowerCase().trim()
  let url =`${link}?api_key=${API_KEY}&with_original_language=${itemy}&include_adult=false&sort_by=popularity.desc&page=${currentPage}`
    /*
  if(sort = "popularity"){
    url =`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_original_language=${itemy}&include_adult=false&sort_by=popularity.desc&page=${currentPage}`
  }
  else if(sort = "revenue"){
    url =`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_original_language=${itemy}&include_adult=false&sort_by=revenue.desc&page=${currentPage}`
  }
  else if(sort = "release date"){
    url =`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_original_language=${itemy}&include_adult=false&sort_by=revenue.desc&page=${currentPage}`
  }
  */
 // var url = `https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US&include_adult=false`
// alert(url)
 window.clear_latesturl = function(){
  url = ""
  itemy = "undefined"
  currentPage = ""
} 
  fetch(url)
    .then(response => response.json())
    .then(data => {
console.log(data)   
      data.results.forEach(movie => {
   var a = document.createElement("section")
   
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
  //   $(a).addClass("late_kids")
   
     $("#latest_movdiv").append(a)
     $(a).click(function(){
       open_opera (movie.title, movie.id, url)
     })
      });
      
      // Increment the current page counter
      currentPage++;
    })
    .catch(error => {
     // console.error('Error fetching movies:', error);
    });
    
}

// Wrap the code inside DOMContentLoaded event listener
$(function(){
  // Fetch the total number of movies from TMDB API to calculate the total number of pages
  fetch(`${link}?api_key=${API_KEY}&with_original_language=${itemy}&include_adult=false&sort_by=popularity.desc`)
    .then(response => response.json())
    .then(data => {
      totalMovies = data.total_results;
      
      fetchLanguageImages();
    })
    .catch(error => {
    //  console.error('Error fetching total number of movies:', error);
    });

  // Add scroll event listener to "popular_late" div
 var action = document.getElementById("latest_movdiv")
action.addEventListener('scroll', function() {
  if (isDivScrolledToBottom(action)) {
    fetchLanguageImages()
  }
});

});

})

  
    }
    
   
 latest_contentfunc()
 
}
// end of function  open_latestfunc     

//  son       
function son_content(){
  
  var database = firebase.database();
var ref = database.ref("my_collection/poprizon");

ref.once("value")
  .then(function(snapshot) {
    // Get all snapshots under "my_collection/poprizon"
    var snapshots = snapshot.val();
//console.log(snapshots)
    // Filter snapshots with type "movies"
    var movies = Object.values(snapshots).filter(function(s) {
      return s.category === "movies";
    });

    // Select a random movie snapshot
    var randomMovie = movies[Math.floor(Math.random() * movies.length)];

    if (randomMovie) {
     
      var movieId = randomMovie.idy
         $(function(){

fetch(`https://api.themoviedb.org/3/movie/${movieId}/images?api_key=${API_KEY}`)

  .then(response => response.json())
  .then(data => {   
    var posterPath = data.backdrops[0].file_path; // get the poster image URL from the API response
    var posterUrl = `https://image.tmdb.org/t/p/w500/${posterPath}`; // construct the full poster image URL
      $("#movies_son").css({"background": "-webkit-linear-gradient(90deg,rgba(0,0,0,1),  transparent,transparent ),url("+posterUrl.toString()+")"})
     
     $("#movies_son").click(function(){
       open_opera(randomMovie.name, randomMovie.idy, 'movies')
     })
     
     
     
     
      function color_thief() {
    var colorThief = new ColorThief();

    var img = new Image();
    
        
        img.onload = function() {
        // Display main color e.g [125, 189, 193]
        var mainRGB = colorThief.getColor(img);
        // console.log(mainRGB.join(','));
        
   //     var mainColor = document.querySelector('.colors .main .color')
        var a = `rgb(${mainRGB[0]}, ${mainRGB[1]}, ${mainRGB[2]})`;
      //alert(a)
        $("#home_movies").css({"background-image":"linear-gradient(to bottom, "+a+", #000000) "})
        $("#latest_movdiv").css({"background-image":"linear-gradient(to bottom, "+a+", #000000) "})
        var myDiv = document.getElementById('home_movies');
var myElements = myDiv.querySelectorAll('.lit_txt');
var myElements2 = myDiv.querySelectorAll('.one_chev');

// Loop through the selected elements and do something with them  
myElements.forEach(element => {
  element.style.borderColor = a;
});
myElements2.forEach(element => {
  element.style.color = a;
});

    }
    
    img.crossOrigin = "Anonymous";
    img.src = posterUrl.toString(); 
    
}
color_thief()



  })
  .catch(error => {
  //  son_content()
  //  console.error(error);
  });

})
      
    } else {
   //   console.log("No movie snapshots found.");
    }
  })
  .catch(function(error) {
 son_content()
  });
  
ref.once("value")
  .then(function(snapshot) {
    // Get all snapshots under "my_collection/poprizon"
    var snapshots = snapshot.val();
//console.log(snapshots)
    // Filter snapshots with type "movies"
    var movies = Object.values(snapshots).filter(function(s) {
      return s.category === "series";
    });

    // Select a random movie snapshot
    var randomMovie = movies[Math.floor(Math.random() * movies.length)];

    if (randomMovie) {
     
      var movieId = randomMovie.idy
         $(function(){

fetch(`https://api.themoviedb.org/3/tv/${movieId}/images?api_key=${API_KEY}`)

  .then(response => response.json())
  .then(data => {   
    var posterPath = data.backdrops[0].file_path; // get the poster image URL from the API response
    var posterUrl = `https://image.tmdb.org/t/p/w500/${posterPath}`; // construct the full poster image URL
      $("#series_son").css({"background": "-webkit-linear-gradient(90deg,rgba(0,0,0,1),  transparent,transparent ),url("+posterUrl.toString()+")"})
     
     $("#series_son").click(function(){
       open_opera(randomMovie.name, randomMovie.idy, 'series')
     })
     
     
     
     
      function color_thief() {
    var colorThief = new ColorThief();

    var img = new Image();
    
        
        img.onload = function() {
        // Display main color e.g [125, 189, 193]
        var mainRGB = colorThief.getColor(img);
        // console.log(mainRGB.join(','));
        
   //     var mainColor = document.querySelector('.colors .main .color')
        var a = `rgb(${mainRGB[0]}, ${mainRGB[1]}, ${mainRGB[2]})`;
      //alert(a)
        $("#home_movies").css({"background-image":"linear-gradient(to bottom, "+a+", #000000) "})
        $("#latest_movdiv").css({"background-image":"linear-gradient(to bottom, "+a+", #000000) "})
        var myDiv = document.getElementById('home_movies');
var myElements = myDiv.querySelectorAll('.lit_txt');
var myElements2 = myDiv.querySelectorAll('.one_chev');

// Loop through the selected elements and do something with them  
myElements.forEach(element => {
  element.style.borderColor = a;
});
myElements2.forEach(element => {
  element.style.color = a;
});

    }
    
    img.crossOrigin = "Anonymous";
    img.src = posterUrl.toString(); 
    
}
color_thief()



  })
  .catch(error => {
  //  son_content()
  //  console.error(error);
  });

})
      
    } else {
   //   console.log("No movie snapshots found.");
    }
  })
  .catch(function(error) {
 //   console.error("Error retrieving snapshots:", error);
  });

  
  
}
$(function(){
 son_content()
  
})
 
var myButton = document.querySelector(".home_son");

/*
myButton.addEventListener("dblclick", function() {
 son_content()

});
*/
// end of son_content      
$(function(){
  
  var box = document.getElementById('post_colorcomment');
box.addEventListener('click', function(event) {
 var val = $(box).text()
 // alert(val)
 if(val.toString().toLowerCase().trim() == "type something..."){
   $(box).text("")
 }
//$(".week_messagediv").addClass("wk_inputclass")
});
  var boxy = document.getElementById('content_editable');
boxy.addEventListener('click', function(event) {
 var val = $(boxy).text()
 // alert(val)
 if(val.toString().toLowerCase().trim() == "type something"){
   $(boxy).text("")
 }
//$(".week_messagediv").addClass("wk_inputclass")
});
$("#post_colorcomment").click(function(){
  // alert("")
})

  
  
     $(".custom_alertexit").click(function(){
   //  document.querySelectorAll(".custom_alert").style.bottom = "-50%";
     $(".custom_alert").css({"bottom":"-50%"})
  })
  
  /*
   $(document).mouseup(function(e) 
{
    var container = $("#nel_setdiv");

    // if the target of the click isn't the container nor a descendant of the container
    if (!container.is(e.target) && container.has(e.target).length === 0) 
    {
document.getElementById("nel_setdiv").style.bottom = "-50%";
    }
});
*/


})
// end of jquery Findon function  


//    start of channel      function   
  
  
  
  function create_channel(){
  
    var joke = firebase.auth().currentUser
     var jokey = firebase.auth().currentUser.email
     
    start_load_no_node()
  if(joke.emailVerified){ //This will return true or false

//  group        
  firebase.database().ref("my_channels_root/"+useremail+"/snapshot").once("value", (snapshot) => {
 if (snapshot.exists()){
  var tee=  [snapshot.val().exists]
  if(tee == "true"){
  document.getElementById("mygroup_list").classList.add ("drop");
  var container = document.getElementById("grouplist_val");
  container.innerHTML = ""
  
   PREVIOUS_TAB = CURRENT_TAB

  CURRENT_TAB = "mygroup_list"

  history.pushState(null, null, null);
   visitedPages.push("mygroup_list");
   
 //  alert(useremail )
    firebase.database().ref("group_byuser/"+useremail.toString()).on("child_added", (snapshot) => {
  
    var id  =[snapshot.val().group_id];
 // alert(id)
      for(let i=0; i<id.length; i++){
    firebase.database().ref("group_byid/"+id.toString()).on("value", (snapshot) => {
     
    var idy  =[snapshot.val().group_id];
    var name  =[snapshot.val().group_name];
    var poster  =[snapshot.val().group_poster];
      for(let i=0; i<idy.length; i++){
        var a = document.createElement("section")
        var b = document.createElement("nav")
        var c = document.createElement("div")
        var d = document.createElement("aside")
        var e = document.createElement("header")
  $(e).text(name)
  $(b).css({"background":poster})
// console.log(snapshot.val())
// alert(name + "" +poster  )
$(c).text("30K Subscribers")
        $(d).append(e,c)
        $(a).append(b,d)
        
$(a).click(function(){
  
  document.getElementById("mygroup_list").classList.remove ("drop");
  open_phoenix(idy) 
  // The above function uses a replaceState so be careful 
  
})
        
        $("#grouplist_val").prepend(a)
         stop_load_no_node()
      }
    })
      }
    ///   end of for each 
    })
   
  }
  else{
     $("#no_channelbg").show()
  }
 }
  else{
    $("#no_channelbg").show()
  }
})
}
else{
    stop_load_no_node()
 
 var a = document.createElement('span');
  
   a.id = "link_text"
  $(a).text("here")
  
    $("#custom_messagefail").text("Verify your Email ")
    $("#custom_messagefail").append(a)
    document.getElementById("custom_alertfailure").style.bottom = "4px";
    
    $(a).click(function(){
    document.getElementById("custom_alertfailure").style.bottom = "-50%";
    
      firebase.auth().onAuthStateChanged(function(user) {
    // alert("dd")
    if(user){
     var joke = firebase.auth().currentUser
     var jokey = firebase.auth().currentUser.email
     
      if(joke.emailVerified){ //This will return true or false
       // console.log('email is verified')
       }else{
         //  console.log('email not verified')
 
window.sendverify = function() {
  // .... code .... }
            // alert("first ")
           
joke.sendEmailVerification()
      .then(() => {
        // Email verification sent!
        let msg = 'Sent to ' + jokey+". You may want to check your spam folders. EXPLORE..";
        
        $("#custom_messagesus").text(msg)
       document.getElementById("custom_alertsuccess").style.bottom = "4px";
      }).catch(function(error) {
        $("#custom_messagefail").text(error.message)
       document.getElementById("custom_alertfailure").style.bottom = "4px";
     
        });
        
      
       }
       sendverify()
       }
    }
    })
       
       
       
       
    })
    // emd of link click 
    
    
}

}
//    end of channel     create_channel  function   

function create_channelfunc(type){
   $("#no_channelbg").hide()
  if(type.toString().toLowerCase().trim() == "channel"){
    document.getElementById("channel_formbg").classList.add("drop");

  }
  // end of type function = channel 
  
  
  
}
//    end of create channel   create_channelfunc   function   

$(function(){
  
    $(document).mouseup(function(e) 
{
    var container = $("#no_channelbg");

    // if the target of the click isn't the container nor a descendant of the container
    if (!container.is(e.target) && container.has(e.target).length === 0) 
    {
container.hide()      
    }
});
  
  
  // Get the input element and image preview div
var imageInput = document.getElementById('imageInput');
var imagePreview = document.getElementById('nnelform_img');

// Add event listener for file input change
imageInput.addEventListener('change', function(event) {
  var file = event.target.files[0]; // Get the selected file

  // Check if the selected file is an image
  if (file && file.type.match('image.*')) {
    var reader = new FileReader();

    // Read the image file as a data URL
    reader.readAsDataURL(file);

    // Set the image source to the data URL when it's loaded
    reader.onload = function(event) {
      var imageUrl = event.target.result;
    //  imagePreview.innerHTML = '<img src="' + imageUrl + '">';
       imagePreview.style.backgroundImage = "url("+imageUrl+")";
    };
  } else {
    // Clear the image preview if the selected file is not an image
   // imagePreview.innerHTML = '';
  }
});




 
  
  $("#channel_formbtn").click(function(){
     
    var name = $("#nnelform_name").val()
    var desc = $("#nnelform_text").val()
    var tag = $("#nnelform_tag").val()
     var d = new Date();

       var time_string = d.toLocaleTimeString();

     var date = d.getDate();
    var fullyear = d.getFullYear();
    var month = d.getMonth();
   month= month+1;
var date_string=(fullyear+"|"+month+"|"+date);

    // channels     Channel's    
    
     var storage = firebase.storage();

      // Get references to the HTML elements
      var imageFileInput = document.getElementById("imageInput");
      var uploadButton = document.getElementById("channel_formbtn");
   //   var downloadUrlDiv = document.getElementById("download-url");
 if(name =="" ||  desc =="" || tag ==""){
   
   return false 
 }
 else{
      // Handle the "Upload Image" button click event
      
        // Get a reference to the image file that the user uploaded
        var file = imageFileInput.files[0];
var fileName = Date.now() + '-' + file.name;

        // Create a storage reference to the file
        var storageRef = storage.ref().child("channel_images/"+useremail.toString()+"/"+ fileName);   

        // Upload the file to Firebase Storage
        storageRef.put(file).then(function(snapshot) {
        //  console.log("File uploaded successfully!");

          // Get the download URL of the uploaded file
          storageRef.getDownloadURL().then(function(url) {
        
           // console.log("Download URL: " + url);
  /*
  function copyToClipboard(str) {
  const el = document.createElement('textarea');
  el.value = str;
  document.body.appendChild(el);
  el.select();
  document.execCommand('copy');
  document.body.removeChild(el);
}
copyToClipboard(url);

     */

var threez = firebase.database().ref("my_channels_root/"+useremail.toString()+"/info");
var fourz = firebase.database().ref("my_channels_root/"+useremail.toString()+"/snapshot");
 

threez.set ({ 
name: name.toString(), 
idy: useremail.toString(),   
country: user_nation.toString(), 
describe: desc.toString(), 
tag: tag.toString(), 
extra_one: "extra_one", 
extra_two: "extra_two", 
image: url.toString(), 
time: time_string.toString(),   
date: date_string.toString(), 
email: useremail.toString().trim()
  
});
fourz.update ({ 
exists:"true"
  });
  
document.getElementById("custom_alertsuccess").style.bottom = "4px";
$("#custom_messagesus").text("You have successfully created your channel @"+name.toString())
  document.getElementById("channel_formbg").classList.remove("drop");    


            // Display the download URL on the page
       //     downloadUrlDiv.innerHTML = "<a href='" + url + "'>" + url + "</a>";
          });
        }).catch(function(error) {
          failure_alert(error)
     //     console.error("File upload failed: ", error);
        });
        
        
        
  }
  // end of else function 
        
    //  }); 
    
  })
  //   end of click  channel_formbtn     
})

    
function changeBackgroundColor(div) {
    //  var letters = '0123456789ABCDEF';
  // Array of available color stops
  var colorStops = [
    "red", "green", "blue", "yellow", "purple", "cyan", "magenta", "orange","brown","black","grey","pink","gold","violet","indigo"
  ];

  // Randomly select two color stops from the array
  var colorStop1 = colorStops[Math.floor(Math.random() * colorStops.length)];
  var colorStop2 = colorStops[Math.floor(Math.random() * colorStops.length)];

  // Generate a random angle for the gradient (0 to 360 degrees)
  var angle = Math.floor(Math.random() * 360);

  // Assemble the gradient CSS property
  var gradient = "linear-gradient(" + angle + "deg, " + colorStop1 + ", " + colorStop2 + ")";

  // Set the background of the provided div to the generated gradient color
  document.getElementById(div).style.background = gradient;
 
}

    function clear_content(div1,div2,div3){
 //  $("#"+div1).text("")
    document.getElementById(div1).innerHTML = '';
    document.getElementById(div2).innerHTML = '';
    document.getElementById(div3).innerHTML = '';
  
}
$(function(){
   // Get the input element and image preview div
 var imageInput = document.getElementById('blank_input');

 var smsInput = document.getElementById('blank_sms');
 var smsbg = document.getElementById('club_coverinput');
 var smsbgPreview = document.getElementById('club_coverimg');
 var tmsbg = document.getElementById('club_posterinput');
 var tmsbgPreview = document.getElementById('club_posterimg');
 var one_bg = document.getElementById('sms_bginput');
   var one_bgPreview = document.getElementById('back_subdiv');
 
 var videoInput = document.getElementById('blank_video');
    var imagePreview = document.getElementById('blank_imgparent');
    var smsPreview = document.getElementById('blank_smsparent');
  
  //  var comPreview = document.getElementById('comment_foot');
   // var comInput = document.getElementById('commentInput');

    // Add event listener for file input change

    imageInput.addEventListener('change', function(event) {
      var files = event.target.files; // Get the selected files as a FileList

      // Clear the image preview
   //   imagePreview.innerHTML = '';

      // Loop through the selected files
      for (var i = 0; i < files.length; i++) {
        var file = files[i];

        // Check if the selected file is an image
        if (file && file.type.match('image.*')) {
          var reader = new FileReader();

          // Read the image file as a data URL
          reader.readAsDataURL(file);

          // Set the image source to the data URL when it's loaded
          reader.onload = function(event) {
            var imageUrl = event.target.result;
            var imgElement = document.createElement("img");
            imgElement.src = imageUrl;
           
            imagePreview.appendChild(imgElement);
          };
        }
        if (file && file.type.match('video.*')) {
          var reader = new FileReader();

          // Read the image file as a data URL
          reader.readAsDataURL(file);

          // Set the image source to the data URL when it's loaded
          reader.onload = function(event) {
            var imageUrl = event.target.result;
            var imgElement = document.createElement("video");
            imgElement.src = imageUrl;
           
            imagePreview.appendChild(imgElement);
          };
        }
      }
    });
    
    smsInput.addEventListener('change', function(event) {
      var files = event.target.files; // Get the selected files as a FileList

      // Clear the image preview
   //   imagePreview.innerHTML = '';

      // Loop through the selected files
      $("#blank_smscover").slideDown()
      for (var i = 0; i < files.length; i++) {
        var file = files[i];

        // Check if the selected file is an image
        if (file && file.type.match('image.*')) {
          var reader = new FileReader();

          // Read the image file as a data URL
          reader.readAsDataURL(file);

          // Set the image source to the data URL when it's loaded
          reader.onload = function(event) {
            var imageUrl = event.target.result;
            var imgElement = document.createElement("img");
         //   var btn = document.createElement("aside");
       //     var len = files.length + 1
        //    $(btn).text(`${[i]} / ${len}`)
            imgElement.src = imageUrl;
            /*
             $(imgElement).click(function(){
              check_enlarge(imageUrl, 'img')
            })
            */
        //    $(imgElement).append(btn)  
            smsPreview.appendChild(imgElement);
          };
        }
        if (file && file.type.match('video.*')) {
          var reader = new FileReader();

          // Read the image file as a data URL
          reader.readAsDataURL(file);

          // Set the image source to the data URL when it's loaded
          reader.onload = function(event) {
            var imageUrl = event.target.result;
            var imgElement = document.createElement("video");
            imgElement.currentTime  = 0.5;
            imgElement.src = imageUrl;
             $(imgElement).click(function(){
              check_enlarge(imageUrl, 'video')
            })
            smsPreview.appendChild(imgElement);
          };
        }
      }
    });
    /*
    comInput.addEventListener('change', function(event) {
      var files = event.target.files; // Get the selected files as a FileList

      // Clear the image preview
   //   imagePreview.innerHTML = '';

      // Loop through the selected files
      for (var i = 0; i < files.length; i++) {
        var file = files[i];

        // Check if the selected file is an image
        if (file && file.type.match('image.*')) {
          var reader = new FileReader();

          // Read the image file as a data URL
          reader.readAsDataURL(file);

          // Set the image source to the data URL when it's loaded
          reader.onload = function(event) {
            var imageUrl = event.target.result;
            var imgElement = document.createElement("img");
            imgElement.src = imageUrl;
             $(imgElement).click(function(){
              check_enlarge(imageUrl, 'img')
            })
            comPreview.appendChild(imgElement);
          };
        }
        if (file && file.type.match('video.*')) {
          var reader = new FileReader();

          // Read the image file as a data URL
          reader.readAsDataURL(file);

          // Set the image source to the data URL when it's loaded
          reader.onload = function(event) {
            var imageUrl = event.target.result;
            var imgElement = document.createElement("video");
            imgElement.currentTime  = 0.5;
            imgElement.src = imageUrl;
             $(imgElement).click(function(){
              check_enlarge(imageUrl, 'video')
            })
            comPreview.appendChild(imgElement);
          };
        }
      }
    });
    */
  
    smsbg.addEventListener('change', function(event) {
      var files = event.target.files; // Get the selected files as a FileList

      // Clear the image preview
   //   imagePreview.innerHTML = '';

      // Loop through the selected files
      for (var i = 0; i < files.length; i++) {
        var file = files[i];

        // Check if the selected file is an image
        if (file && file.type.match('image.*')) {
          var reader = new FileReader();

          // Read the image file as a data URL
          reader.readAsDataURL(file);

          // Set the image source to the data URL when it's loaded
          reader.onload = function(event) {
            var imageUrl = event.target.result;
        //   $(smsbgPreview).css({"background":""})
              smsbgPreview.style.backgroundImage = "url("+imageUrl+")";
          };
        }
      }
    });
    
    
    tmsbg.addEventListener('change', function(event) {
      var files = event.target.files; // Get the selected files as a FileList

      // Clear the image preview
   //   imagePreview.innerHTML = '';

      // Loop through the selected files
      for (var i = 0; i < files.length; i++) {
        var file = files[i];

        // Check if the selected file is an image
        if (file && file.type.match('image.*')) {
          var reader = new FileReader();

          // Read the image file as a data URL
          reader.readAsDataURL(file);

          // Set the image source to the data URL when it's loaded
          reader.onload = function(event) {
            var imageUrl = event.target.result;
     //      $(tmsbgPreview).css({"background":""})
              tmsbgPreview.style.backgroundImage = "url("+imageUrl+")";
          };
        }
      }
    });
    
    
    one_bg.addEventListener('change', function(event) {
      var files = event.target.files; // Get the selected files as a FileList

      // Clear the image preview
   //   imagePreview.innerHTML = '';

      // Loop through the selected files
      for (var i = 0; i < files.length; i++) {
        var file = files[i];

        // Check if the selected file is an image
        if (file && file.type.match('image.*')) {
          var reader = new FileReader();

          // Read the image file as a data URL
          reader.readAsDataURL(file);

          // Set the image source to the data URL when it's loaded
          reader.onload = function(event) {
            var imageUrl = event.target.result;
           $(one_bgPreview).css({"background":""})
              one_bgPreview.style.backgroundImage = "url("+imageUrl+")";
          };
        }
      }
    });
    // Add event listener for file input change
    videoInput.addEventListener('change', function(event) {
      var files = event.target.files; // Get the selected files as a FileList

      // Clear the image preview
   //   imagePreview.innerHTML = '';

      // Loop through the selected files
      for (var i = 0; i < files.length; i++) {
        var file = files[i];

        // Check if the selected file is an image
        if (file && file.type.match('video.*')) {
          var reader = new FileReader();

          // Read the image file as a data URL
          reader.readAsDataURL(file);

          // Set the image source to the data URL when it's loaded
          reader.onload = function(event) {
            var imageUrl = event.target.result;
            var imgElement = document.createElement("video");
            imgElement.src = imageUrl;
            imagePreview.appendChild(imgElement);
          };
        }
      }
    });

  
  
})
// end of function 

 function open_drivefunc(ref_name){
       document.getElementById('viewtab').style.marginRight = '100%';
   //    $("#viewtab").css({"opacity":"0.5"})
     document.getElementById('drive_bg').style.width = '100%';
     
      PREVIOUS_TAB = CURRENT_TAB
  CURRENT_TAB = "drive_bg"
  history.pushState(null, null, null);
   visitedPages.push("drive_bg");
   
   
      var a = this.src
  
  var popular = document.getElementById("popular_div")
  var upcoming = document.getElementById("upcome_div")
  var theaters = document.getElementById("theater_div")
  
     //  ref_name = ref_name.toString()
       if(ref_name == "popular"){
  $(popular).show()  
  $("#drive_name").text("Popular Movies & Series")  
  $(upcoming).hide()
  $(theaters).hide()
  }
  else if(ref_name == "upcoming"){
  $(upcoming).show()
  $("#drive_name").text("Upcoming Movies")  
  $(popular).hide()
  $(theaters).hide()
  }
  else if(ref_name == "theaters"){
   // alert("fg")
  $(theaters).show()
  }
  
 }
 //  end of function open_drivefunc  
 $(function() {
   
  var currentPage = 1;
  var pop_movpage = 1;
  var moviesPerPage = 15;
  var pop_serpage = 1;
  var totalPages = 0; // Initialize totalPages as 0

  var popular = document.getElementById("popular_div")
  var upcoming = document.getElementById("upcome_div")
  var theaters = document.getElementById("theater_div")
  
  popular.innerHTML = ""
  upcoming.innerHTML = ""
  theaters.innerHTML = ""
  
  $(popular).hide() 
  $(upcoming).hide()  
  $(theaters).hide()
     
// Function to fetch more images (movies) from TMDB API
  
function fetchPopularMovies() {
   
    console.log()
  // Calculate the total number of pages needed to fetch the desired number of movies
  var totalPages = Math.ceil(totalMovies / moviesPerPage);
  
  // Check if all movies have been fetched already
  if (pop_movpage > totalPages) {
 //   console.log('All movies have been fetched!');
    return;
  }
  
  
  var bedy = `https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&page=${pop_movpage}`
  //  var bedy = `https://api.themoviedb.org/3/movie/upcoming?api_key=${API_KEY}&language=en-US&page=${currentPage}`
//  alert(bedy)
  fetch(bedy)
    .then(response => response.json())
    .then(data => {
      
      data.results.forEach(movie => {
    var a = document.createElement("section")
   
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
   //  $(a).addClass("late_kids")
     $(a).appendTo(popular)
     $(a).click(function(){
       open_opera (movie.title, movie.id, bedy)
     })
      });
     
      
      // Increment the current page counter
      pop_movpage++;
    })
    .catch(error => {
     // console.error('Error fetching movies:', error);
    });
    
}
function fetchPopularSeries() {  
  // Calculate the total number of pages needed to fetch the desired number of movies
  var totalPages = Math.ceil(totalSeries / moviesPerPage);
  
  // Check if all movies have been fetched already
  if (pop_serpage > totalPages) {
 //   console.log('All movies have been fetched!');
    return;
  }
  
  
   var bedy = `https://api.themoviedb.org/3/tv/popular?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&page=${pop_serpage}`
   //  var bedy = `https://api.themoviedb.org/3/movie/upcoming?api_key=${API_KEY}&language=en-US&page=${currentPage}`
 //   alert(bedy)
  fetch(bedy)
    .then(response => response.json())
    .then(data => {
      
      data.results.forEach(movie => {
    var a = document.createElement("section")
   
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
   //  $(a).addClass("late_kids")
     $(a).appendTo(popular)
     $(a).click(function(){
       open_opera (movie.name, movie.id, bedy)
     })
      });
     
      
      // Increment the current page counter
      pop_serpage++;
    })
    .catch(error => {
     // console.error('Error fetching movies:', error);
    });
    
}
$(function() {
  // Fetch the total number of movies from TMDB API to calculate the total number of pages
   
  fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false`)
    .then(response => response.json())
    .then(data => {
      
        console.log(data )
      totalMovies = data.total_results;
      fetchPopularMovies();
     
   // alert(totalMovies)
    })
    .catch(error => {
    //  console.error('Error fetching total number of movies:', error);
    });
    
  fetch(`https://api.themoviedb.org/3/tv/popular?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false`)
    .then(response => response.json())
    .then(data => {
      totalSeries = data.total_results;
     fetchPopularSeries();
     //alert(totalSeries)
    })
    .catch(error => {
    //  console.error('Error fetching total number of movies:', error);
    });
  
popular.addEventListener('scroll', function() {
  if (isDivScrolledToBottom(popular)) {
 
        fetchPopularMovies();
       fetchPopularSeries();
  }
});

});

  var currentDate = new Date();
  var currentYear = currentDate.getFullYear();
  var currentMonth = currentDate.getMonth();
  
  // Calculate the date for the first format: currentyear - fourth month after current month - first day of the month
  var fourthMonthAfterCurrent = (currentMonth + 4) % 12; // Ensure the month stays within the range of 0-11
  var formattedFirstDate = `${currentYear}-${('0' + (fourthMonthAfterCurrent + 1)).slice(-2)}-01`;

  // Calculate the date for the second format: next year - first month - first day of the month
  var nextYear = currentYear + 1;
  var formattedSecondDate = `${nextYear}-01-01`;

function fetchUpcomeMovies() {
  // Calculate the total number of pages needed to fetch the desired number of movies
  var totalPages = Math.ceil(totalMovies / moviesPerPage);
  
  // Check if all movies have been fetched already
  if (currentPage > totalPages) {
 //   console.log('All movies have been fetched!');
    return;
  }
  
  
  


  var bedy = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&release_date.gte=${formattedFirstDate}&release_date.lte=${formattedSecondDate}&page=${currentPage}`
  //  var bedy = `https://api.themoviedb.org/3/movie/upcoming?api_key=${API_KEY}&language=en-US&page=${currentPage}`
//  alert(bedy)
  fetch(bedy)
    .then(response => response.json())
    .then(data => {
      
      data.results.forEach(movie => {
    var a = document.createElement("section")
   
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
   //  $(a).addClass("late_kids")
     $(a).appendTo(upcoming)
     $(a).click(function(){
       open_opera (movie.title, movie.id, bedy)
     })
      });
     
      
      // Increment the current page counter
      currentPage++;
    })
    .catch(error => {
     // console.error('Error fetching movies:', error);
    });
    
}
$(function() {
  // Fetch the total number of movies from TMDB API to calculate the total number of pages
  fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&release_date.gte=${formattedFirstDate}&release_date.lte=${formattedSecondDate}`)
    .then(response => response.json())
    .then(data => {
      totalMovies = data.total_results;
      fetchUpcomeMovies();
     
   //  alert(totalMovies)
    })
    .catch(error => {
    //  console.error('Error fetching total number of movies:', error);
    });
    /*
  fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&release_date.gte=${formattedFirstDate}&release_date.lte=${formattedSecondDate}`)
    .then(response => response.json())
    .then(data => {
      totalSeries = data.total_results;
      fetchUpcomeSeries();
     //alert(totalSeries)
    })
    .catch(error => {
    //  console.error('Error fetching total number of movies:', error);
    });
*/
upcoming.addEventListener('scroll', function() {
  if (isDivScrolledToBottom(upcoming)) {
  
        fetchUpcomeMovies();
      //  fetchUpcomeSeries();
  }
});

});
  
   
  

  
  
});
//  end of function cover 
 
 
    $(function(){
      
    document.getElementById("blank_postsubmit").addEventListener('click', function() {
      
      
      
  var mode = document.getElementById("content_editable")
var message = mode.textContent || mode.innerText;
      /*
       var mode = document.getElementById("playingmoviename")
var pextty = mode.textContent || mode.innerText;
      */
      
      
      
       var d = new Date(); 

// var downloadURLsString;
       var time = d.toLocaleTimeString();
      var date = d.getDate();
    var fullyear = d.getFullYear();
    var month = d.getMonth();
   month= month+1;
var date=(fullyear+"|"+month+"|"+date);
      
      
      var myDiv = document.getElementById('blank_div');
      var addNomisceneDiv = document.getElementById('blank_imgparent');
    // Get the background-color of the div
    var bgcolor = window.getComputedStyle(myDiv).background;
   // alert(bgcolor)
var images = addNomisceneDiv.getElementsByTagName("img");

// Create an array to store unique src values
var uniqueSrcValues = [];

// Loop through the images and retrieve their src attribute values
for (let i = 0; i < images.length; i++) {
  var src = images[i].src;

  // Check if src value is not already in the uniqueSrcValues array
  if (!uniqueSrcValues.includes(src)) {
    uniqueSrcValues.push(src); // Store unique src value in the array
  }
//  alert(src)
}

// Concatenate unique src values into a string separated by underscores
 srcString = uniqueSrcValues.join("{_}");
 
     var storage = firebase.storage();
var imageFileInput = document.getElementById("blank_input");
var files = imageFileInput.files;
//  console.log(files)
// Array to store Promises for each upload
var uploadPromises = [];

// Loop through each file selected
for (var i = 0; i < files.length; i++) {
  var file = files[i];
var fileName = Date.now() + '-' + file.name;
  // Create a storage reference to the file
  var storageRef = storage.ref().child("channel_images/"+useremail.toString()+"/"+ fileName);

  // Push the upload task promise to the array
  var uploadTask = storageRef.put(file);
  uploadPromises.push(uploadTask);
}

// Wait for all uploads to complete
Promise.all(uploadPromises).then(function(snapshots) {
  // Array to store download URLs
  var downloadURLs = [];

  // Loop through the snapshots and get the download URLs
  snapshots.forEach(function(snapshot) {
    snapshot.ref.getDownloadURL().then(function(url) {
      downloadURLs.push(url);

      // Check if all download URLs are retrieved
      if (downloadURLs.length === files.length) {
        // Concatenate the download URLs separated by "{_}"
        downloadURLsString = downloadURLs.join("{_}");
     //  console.log("Download URLs separated by '{_}':", downloadURLsString);
   //  alert(downloadURLsString);
        // You can use the download URLs string here or store it in a database for later use
        firebase.database().ref("global_posts").push({

 "useremail":useremail.toString(),
 "channelId":useremail.toString(),
 "image_string":downloadURLsString.toString(),
 "message":message.toString(),
 "bgcolor":bgcolor.toString(),
 "post_type":"color_post",
 "nation":user_nation.toString(),
 "date":date.toString(),
 "time":time.toString(),
 "extra1":"extra_one",
 "extra2":"extra_two"
 });
        
 success_alert("Posted successfully ")
 $("#post_stuffexit").click()
      }
    }).catch(function(error) {
     // console.error("Error getting download URL for file:", error);
 failure_alert(error)
        
    });
  });
}).catch(function(error) {
 // console.error("Error uploading files:", error);
 failure_alert(error)
});


 //     alert(downloadURLsString)
      
    
    });
    // end of blank_postsubmit click function 
      
      
      
    })
    // end of overall function 
    //  failure_alert     success_alert    
  function failure_asake(message){
     $("#asake_messagefail").text(message)
       document.getElementById("asake_alertfailure").style.bottom = "4px";
  }
  function failure_alert(message){
     $("#custom_messagefail").text(message)
       document.getElementById("custom_alertfailure").style.bottom = "4px";
  }
  function success_alert(message){
     $("#custom_messagesus").text(message)
       document.getElementById("custom_alertsuccess").style.bottom = "4px";
  }
    
  $(function(){
    // global         global_posts          channel    
     window.retrieve_follow = function(){
      
     
    var ref = firebase.database().ref("global_posts");
var idArray = ["boy", "girl", "poprizon", "edurumaraihexavier"];
// $("#follow_tabinner").text("")
ref.once("value").then(function(snapshot) {
  
  // Loop through each child snapshot
  snapshot.forEach(function(childSnapshot) {
    // Get the value of the 'id' property for the current child
    var id = childSnapshot.val().useremail;
 //   console.log (id)
    // Check if the 'id' value matches any item in the array
    if (idArray.includes(id)) {
      // Display the child data, e.g., by appending it to a list or rendering it in the UI
      var childData = childSnapshot.val();
      
      var date = childData.date
      var time = childData.time
      var image_string = childData.image_string
      var message = childData.message
      var textmessage = childData.textmessage
      var htmlmessage = childData.htmlmessage
      var bgcolor= childData.bgcolor
      var backgroundImage= childData.backgroundImage
      var fontFamily= childData.fontFamily
      var color= childData.color
      var channelId = childData.channelId
      var nation = childData.nation
      var post_type = childData.post_type
      
        if(post_type.toString().toLowerCase().trim() == "color_post"){
       //   alert(image_string)
   //   for(let i=0; i<channelId.length; i++){
  var a = document.createElement("div")
  var b = document.createElement("div")
  var c = document.createElement("div")
  var d = document.createElement("div")
  var e = document.createElement("div")
  var f = document.createElement("div")
  var g = document.createElement("section")
  var h = document.createElement("div")
  var i = document.createElement("div")
  var j = document.createElement("div")
  var k = document.createElement("div")
  var l = document.createElement("div")
  var m = document.createElement("span")
  var n = document.createElement("span")
  var o = document.createElement("span")
  var p = document.createElement("span")
  var q = document.createElement("div")
  var r = document.createElement("div")
  var s = document.createElement("div")
  
  
  $(a).addClass("post_cover")
  $(b).addClass("post_profile")
  $(c).addClass("post_valdiv")
  $(d).addClass("post_foot")
  $(e).addClass("post_profimg")
  $(f).addClass("post_profmore")
  $(h).addClass("first_foot")
  //$(i).addClass("second_foot")
  $(j).addClass("like_foot")
  $(j).addClass("display_flex")
  $(k).addClass("display_flex")
  $(l).addClass("linked_films")
  $(p).addClass("like_no")
  $(q).addClass("center_text")
  $(r).addClass("post_profcont")
  $(s).addClass("post_profname")
  
  $(f).append('<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-three-dots-vertical" viewBox="0 0 16 16"><path d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/></svg>')
  $(n).append('<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-chat-left-dots" viewBox="0 0 16 16"><path d="M14 1a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H4.414A2 2 0 0 0 3 11.586l-2 2V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12.793a.5.5 0 0 0 .854.353l2.853-2.853A1 1 0 0 1 4.414 12H14a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z"/><path d="M5 6a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/></svg>')
  $(o).append('<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-heart" viewBox="0 0 16 16"><path d="m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z"/></svg>')
  
  
  
  firebase.database().ref("my_channels_root/"+channelId.toString()+"/info").on("value", (snapshot) => {
  
    var imge  =[snapshot.val().image];
    var nam  =[snapshot.val().name];
     $(e).css('background-image', 'url(' + imge + ')');
     $(s).text(nam)
})
  $(g).css({"background":bgcolor.toString()})
//  $(c).css({"background":bgcolor.toString()})
  $(q).text(message.toString())
  $(p).text("12")
  
  
  
  $(function(){
var delimiter = "{_}";
if(image_string.toString().includes(delimiter.toString())){
// Split the inputString by the delimiter
var substrings = image_string.toString().split(delimiter);

// Define a function to be applied on each substring
function myFunction(substring) {
 var e = document.createElement("section")
   e.style.backgroundImage = "url("+substring+")";
  $(e).click(function(){

   alert(image_string+"😔😔😔😜😜")
 })
     var img = new Image();
img.src = substring.toString();
img.onload = function() {
  const aspectRatio = img.naturalWidth / img.naturalHeight;
 $(e).css({"padding-bottom": "calc(100% /"+ aspectRatio+")"})
}
  
 $(e).appendTo(c)
  // Your custom logic here
}

// Loop through the substrings and apply the function on each substring
substrings.forEach(myFunction);
}
else{
  var e = document.createElement("section")
   e.style.backgroundImage = "url("+image_string.toString()+")";
 $(e).click(function(){
   alert(image_string)
 })
  var img = new Image();
img.src = image_string.toString();
img.onload = function() {
  const aspectRatio = img.naturalWidth / img.naturalHeight;
 $(e).css({"padding-bottom": "calc(100% /"+ aspectRatio+")"})
}
 $(e).appendTo(c)
}
  })
  // end of function for image / video string image_string  
  
  
  
  
    
  $(m).append(o, p)
  $(j).append(m, n)
  $(k).append(l)
  $(g).append(q)
  $(h).append(j, k)
  $(d).append(h, i)
  $(c).append(g)
  $(r).append(e,s)
  $(b).append(r,f)
  $(a).append(b,c,d)
  $("#follow_tabinner").prepend(a)
  
  
      
        }  
       else if(post_type.toString().toLowerCase().trim() == "post_1"){
       //   alert(image_string)
   //   for(let i=0; i<channelId.length; i++){
  var a = document.createElement("div")
  var b = document.createElement("div")
  var c = document.createElement("div")
  var d = document.createElement("div")
  var e = document.createElement("div")
  var f = document.createElement("div")
  var g = document.createElement("aside")
  var h = document.createElement("div")
  var i = document.createElement("div")
  var j = document.createElement("div")
  var k = document.createElement("div")
  var l = document.createElement("div")
  var m = document.createElement("span")
  var n = document.createElement("span")
  var o = document.createElement("span")
  var p = document.createElement("span")
  var q = document.createElement("div")
  var r = document.createElement("div")
  var s = document.createElement("div")
  var text = document.createElement("span")
  
  
  $(a).addClass("post_cover")
  $(b).addClass("post_profile")
  $(c).addClass("post_valdiv")
  $(d).addClass("post_foot")
  $(e).addClass("post_profimg")
  $(f).addClass("post_profmore")
  $(h).addClass("first_foot")
 // $(i).addClass("second_foot")
  $(j).addClass("like_foot")
  $(j).addClass("display_flex")
  $(k).addClass("display_flex")
  $(l).addClass("linked_films")  
  $(p).addClass("like_no")
  $(q).addClass("center_text")
  $(r).addClass("post_profcont")
  $(s).addClass("post_profname")
  
  $(f).append('<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-three-dots-vertical" viewBox="0 0 16 16"><path d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/></svg>')
  $(n).append('<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-chat-left-dots" viewBox="0 0 16 16"><path d="M14 1a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H4.414A2 2 0 0 0 3 11.586l-2 2V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12.793a.5.5 0 0 0 .854.353l2.853-2.853A1 1 0 0 1 4.414 12H14a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z"/><path d="M5 6a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/></svg>')
  $(o).append('<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-heart" viewBox="0 0 16 16"><path d="m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z"/></svg>')
  
  
  
  firebase.database().ref("my_channels_root/"+channelId.toString()+"/info").on("value", (snapshot) => {
  
    var imge  =[snapshot.val().image];
    var nam  =[snapshot.val().name];
     $(e).css('background-image', 'url(' + imge + ')');
     $(s).text(nam)
})   
  $(g).css({"background-image":backgroundImage.toString()})
 // $(c).css({"background":backgroundImage.toString()})
//  alert(textmessage)
 var elf = backgroundImage.toString().replace('url("','')
 var elfy = elf.toString().replace('")','')

  var img = new Image();
 //alert(elfy)
// console.log(img)
img.src = elfy.toString();
img.onload = function() {
  const aspectRatio = img.naturalWidth / img.naturalHeight;
  var bed = "calc(100% /"+ aspectRatio+")" 
//alert(bed)
 $(g).css({"padding-top": bed})  
}
 /*
var img = new Image();
img.onload = function() {
  c.style.height = this.height + "px";
}
img.src = elfy.toString()
*/
  
  $(function(){
      
console.log(htmlmessage)
//const htmlmessage = "This is a #1234 and *5678 string with multiple #5678 and *1234 encased words";

// Create a regular expression to match the pattern '#[some_numbers]' or '*[some_numbers]'
const regex = /[#*]\d+/g;

// Use the `match()` method to get an array of all matches of the regular expression in the string
const matches = textmessage.toString().match(regex);

// Check if `matches` is not null or undefined before calling `forEach`
if (matches) {
  // Loop through the matches array and call the appropriate function for each match
  matches.forEach(match => {
    if (match[0] === '#') {
      handleHashNumber(match.substr(1));
    } else if (match[0] === '*') {
      handleAsteriskNumber(match.substr(1));
    }
  });
} else {
  console.log("No matches found");
}

// Function to handle numbers encased in '#' symbols
function handleHashNumber(number) {
  console.log(`Handling hash number: ${number}`);
  // Do something with the number...
}

// Function to handle numbers encased in '*' symbols
function handleAsteriskNumber(number) {
  console.log(`Handling asterisk number: ${number}`);
  // Do something with the number...
}


  })
  // end of function 
  
  
  
  $(text).html(textmessage.toString()) 
  //$(q).html(textmessage.toString()) 
 // $(q).css({"color":color.toString()})
//  $(q).css({"font-family":fontFamily.toString()})
  $(g).css({"color":color.toString()})
  $(g).css({"font-family":fontFamily.toString()})
  
  $(p).text("12")
  
  
    
  $(m).append(o, p)
  $(j).append(m, n)
  $(k).append(l)
 $(g).append(text)
  $(h).append(j, k)
  $(d).append(h, i)
  $(c).append(g)
  $(r).append(e,s)
  $(b).append(r,f)
  $(a).append(b,c,d)
  $("#follow_tabinner").prepend(a)
  
  
      
        }  
        // if for color_post
        else if(post_type.toString().toLowerCase().trim() == "post_2"){
       //   alert(image_string)
   //   for(let i=0; i<channelId.length; i++){
  var a = document.createElement("div")
  var b = document.createElement("div")
  var c = document.createElement("div")
  var d = document.createElement("div")
  var e = document.createElement("div")
  var f = document.createElement("div")
  var g = document.createElement("section")
  var h = document.createElement("div")
  var i = document.createElement("div")
  var j = document.createElement("div")
  var k = document.createElement("div")
  var l = document.createElement("div")
  var m = document.createElement("span")
  var n = document.createElement("span")
  var o = document.createElement("span")
  var p = document.createElement("span")
  var q = document.createElement("div")
  var r = document.createElement("div")
  var s = document.createElement("div")
  
  
  $(a).addClass("post_cover")
  $(b).addClass("post_profile")
  $(c).addClass("post_valdiv")
  $(d).addClass("post_foot")
  $(e).addClass("post_profimg")
  $(f).addClass("post_profmore")
  $(h).addClass("first_foot")
  //$(i).addClass("second_foot")
  $(j).addClass("like_foot")
  $(j).addClass("display_flex")
  $(k).addClass("display_flex")
  $(l).addClass("linked_films")  
  $(p).addClass("like_no")
  $(q).addClass("center_text")
  $(r).addClass("post_profcont")
  $(s).addClass("post_profname")
  
  $(f).append('<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-three-dots-vertical" viewBox="0 0 16 16"><path d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/></svg>')
  $(n).append('<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-chat-left-dots" viewBox="0 0 16 16"><path d="M14 1a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H4.414A2 2 0 0 0 3 11.586l-2 2V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12.793a.5.5 0 0 0 .854.353l2.853-2.853A1 1 0 0 1 4.414 12H14a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z"/><path d="M5 6a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/></svg>')
  $(o).append('<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-heart" viewBox="0 0 16 16"><path d="m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z"/></svg>')
  
  
  
  firebase.database().ref("my_channels_root/"+channelId.toString()+"/info").on("value", (snapshot) => {
  
    var imge  =[snapshot.val().image];
    var nam  =[snapshot.val().name];
     $(e).css('background-image', 'url(' + imge + ')');
     $(s).text(nam)
})   
  $(c).css({"background-image":backgroundImage.toString()})
  $(g).css({"background-image":backgroundImage.toString()})   
  /*
  function color_thief() {
    var colorThief = new ColorThief();

    var img = new Image();
    
        
        img.onload = function() {
        // Display main color e.g [125, 189, 193]
        var mainRGB = colorThief.getColor(img);
        // console.log(mainRGB.join(','));
        
   //     var mainColor = document.querySelector('.colors .main .color')
        var a = `rgb(${mainRGB[0]}, ${mainRGB[1]}, ${mainRGB[2]})`;
        $(c).css({"background-image":"linear-gradient(to bottom, "+a+", #000000) "})
      //  $("#opera_inner").css({"background":a})
    
    }
    
    img.crossOrigin = "Anonymous";
    img.src = backgroundImage.toString(); 
    
}
color_thief()
*/
  var img = new Image();
 var elf = backgroundImage.toString().replace('url("','')
 var elfy = elf.toString().replace('")','')
 
img.src = elfy.toString();
img.onload = function() {
  const aspectRatio = img.naturalWidth / img.naturalHeight;
  var bed = "calc(100% /"+ aspectRatio+")" 
//alert(bed)
 $(g).css({"padding-top": bed})
}
  $(g).css({"color":color.toString()})
  $(g).css({"font-family":fontFamily.toString()})
   $(c).prepend(g)
   
   
   $(function(){
var delimiter = "{_}";
//  console.log(image_string)
if(image_string.toString().includes(delimiter.toString())){
// Split the inputString by the delimiter
var substrings = image_string.toString().split(delimiter);

// Define a function to be applied on each substring
function myFunction(substring) {
  var type = checkMediaType(substring.toString())
  if(type === 'image'){
 var eat = document.createElement("section")
    var bed = "url('"+substring.toString()+"')"
   eat.style.backgroundImage = bed;

     var img = new Image();
img.src = substring.toString();
img.onload = function() {
  const aspectRatio = img.naturalWidth / img.naturalHeight;
 $(eat).css({"padding-bottom": "calc(100% /"+ aspectRatio+")"})
}  
//  console.log(eat)
 $(eat).appendTo(c)
  // Your custom logic here
    
  }
 // this link is an image 
  else if(type === 'video'){
 var eat = document.createElement("video")
 eat.src = substring.toString()
 eat.currentTime = 0.5 
// $(eat).css({"background-image":backgroundImage.toString()})

eat.width = eat.videoWidth;
eat.height = eat.videoHeight;

 $(eat).appendTo(c)
  // Your custom logic here
    
  }
 // this link is a video 
}

// Loop through the substrings and apply the function on each substring
substrings.forEach(myFunction);
}
else{
  
var type = checkMediaType(image_string.toString())
  if(type === 'image'){
 var eat = document.createElement("section")
    var bed = "url('"+image_string.toString()+"')"
   eat.style.backgroundImage = bed;

     var img = new Image();
img.src = image_string.toString();
img.onload = function() {
  const aspectRatio = img.naturalWidth / img.naturalHeight;
 $(eat).css({"padding-bottom": "calc(100% /"+ aspectRatio+")"})
}  
//  console.log(eat)
 $(eat).appendTo(c)
  // Your custom logic here
    
  }
 // this link is an image 
  else if(type === 'video'){
 var eat = document.createElement("video")
 eat.src = image_string.toString()
 eat.currentTime = 0.5 
 //$(eat).css({"background-image":backgroundImage.toString()})

eat.width = eat.videoWidth;
eat.height = eat.videoHeight;

 $(eat).appendTo(c)
  // Your custom logic here
    
  }

}
  })
  // end of function for image / video string image_string  
  
  
  $(g).html(textmessage.toString()) 
  //$(q).html(textmessage.toString()) 
 // $(q).css({"color":color.toString()})
//  $(q).css({"font-family":fontFamily.toString()})
  
  $(p).text("12")
  
  
    
  $(m).append(o, p)
  $(j).append(m, n)
  $(k).append(l)
//  $(g).append(q)
  $(h).append(j, k)
  $(d).append(h, i)
 
  $(r).append(e,s)
  $(b).append(r,f)
  $(a).append(b,c,d)
  $("#follow_tabinner").prepend(a)
  
  
      
        }  
        // if for only image oost
        
        
        
        
   //   }
      // end of for each 
      
      
      
      console.log(childData);
      
      
      
      
      
      
      
    }
  });
}).catch(function(error) {
  // Handle any errors that may occur while retrieving the snapshot
//  console.error("Error retrieving snapshot:", error);
  failure_alert(error)
});

    
    }
    //  end of retrieve_follow    
    
    
     window.retrieve_tweets = function(){
      
var ref = firebase.database().ref("global_posts");
var idArray = ["boy", "girl", "poprizon", "edurumaraihexavier"];
var batchSize = 15;
var startKey = null;
var isFetching = false;

function retrieveNextBatch() {
  if (isFetching) return; // Prevent multiple simultaneous requests

  isFetching = true;
  var query = ref.orderByKey();

  if (startKey) {
    query = query.endAt(startKey).limitToLast(batchSize + 1);
  } else {
    query = query.limitToLast(batchSize);
  }

  query.once("value")
    .then(function(snapshot) {
      var snapshotCount = 0;
      var snapshots = [];

      snapshot.forEach(function(childSnapshot) {
        var id = childSnapshot.val().channelId;

        if (idArray.includes(id)) {
          snapshots.push(childSnapshot);
          snapshotCount++;
        }
      });

      if (snapshotCount > 0) {
        if (snapshotCount === batchSize + 1) {
          snapshots.shift(); // Remove the extra snapshot used for duplication check
        }

        snapshots.reverse(); // Reverse the order of snapshots

        var lastSnapshot = snapshots[snapshotCount - 1];
        startKey = lastSnapshot.key;

        // Process the snapshots and append them to the UI container
        snapshots.forEach(function(snapshotData) {
          // Process the retrieved snapshot data and append it to the UI container
        //  console.log(snapshotData.val());
              var childData = snapshotData.val();
 
          var date = childData.date

      var time = childData.time
      var image_string = childData.image_string
      var message = childData.message
      var textmessage = childData.textmessage
      var htmlmessage = childData.htmlmessage
      var bgcolor= childData.bgcolor
      var backgroundImage= childData.backgroundImage
      var fontFamily= childData.fontFamily
      var color= childData.color
      var channelId = childData.channelId
      var nation = childData.nation
      var post_type = childData.post_type
      var post_id = childData.post_id
      var image_string = childData.image_string 
      var email = childData.useremail
      var opt_1_val = childData.option_1_val
      var opt_2_val = childData.option_2_val
      var opt_3_val = childData.option_3_val
      var opt_4_val = childData.option_4_val
      var opt_1_id = childData.option_1_id
      var opt_2_id = childData.option_2_id
      var opt_3_id = childData.option_3_id
      var opt_4_id = childData.option_4_id
      var expiryTimestamp= childData.expiry_date
      var filmId = childData.filmId
      var filmType = childData.filmType
          
          if(post_type.toString().toLowerCase().trim() == "post_1"){ 

  //   console.log(childData)    

          var cover = document.createElement("div")
          var image = document.createElement("div")
          var post = document.createElement("div")
          var head = document.createElement("div")
          var hold = document.createElement("div")
          var section = document.createElement("nav")
          var text = document.createElement("div")
          var btns = document.createElement("div")
          var span1 = document.createElement("span")
          var span2 = document.createElement("span")
          var span3 = document.createElement("span")
          var spannumber = document.createElement("span")
          var span5 = document.createElement("span")
          var span_name = document.createElement("span")
          var span_date = document.createElement("span")
          
          
          
          $(cover).addClass("twit_cover")
          $(image).addClass("twit_profileimg")
          $(post).addClass("twit_post") 
          $(head).addClass("twit_head") 
          $(hold).addClass("twit_content")
          hold.style.display = "flex"
          $(text).addClass("twit_text")
  
          $(btns).addClass("twit_btns")
          $(span5).addClass("display_flex align_center")
          $(span_name).addClass("twit_username")
          $(span_date).addClass("twit_userdate")
            
          $(span1).append('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-heart" viewBox="0 0 16 16"><path d="m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z"/></svg>')
          $(span2).append('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-chat-left-dots" viewBox="0 0 16 16"><path d="M14 1a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H4.414A2 2 0 0 0 3 11.586l-2 2V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12.793a.5.5 0 0 0 .854.353l2.853-2.853A1 1 0 0 1 4.414 12H14a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z"/><path d="M5 6a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/></svg>')
          $(span3).append('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-three-dots-vertical" viewBox="0 0 16 16"><path d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/></svg>')
          
          
         
getUsernameFromFirebase(email)
  .then((username) => {
    if (username) {
   //   console.log("Username:", username);
   $(span_name).text(username)
    }
  }) 
         
          
          updateFormattedDate(date, time, span_date)
           setInterval(() => {
  updateFormattedDate(date, time, span_date);
}, 60000); // 60000 milliseconds = 1 minute
  //          var formattedDate = getFormattedDate(date, time);
   //      $(span_date).text(formattedDate)
          
           $(section).css({"background-image":backgroundImage.toString()})
//  $(cover).css({"color":color.toString()})
  
 // $(c).css({"background":backgroundImage.toString()})
//  alert(textmessage)
 
 $(function(){
 var database = firebase.database();
 var postId = post_id ;
 var userId = useremail; 
  var userRef = database.ref('global_likes/' + postId + '/' + userId);
span1.addEventListener('click', function() {
  
  // Check if the user has already liked the post
     
  userRef.once('value', function(snapshot) {
    var hasLiked = snapshot.val();

    if (hasLiked) {
      // User has already liked the post, so remove the like
      userRef.remove();
     
    } else {
      // User has not liked the post, so add the like
      userRef.set(true);
   
    }
  });
});
userRef.on('value', function(snapshot) {
    var hasLiked = snapshot.val();
    if (hasLiked) {
      $(span1).addClass('like_effect')
      $(span1).css({"color":"red", "transition" : "color 0.5s"})
    }
    else{
      $(span1).removeClass('like_effect')
      $(span1).css({"color":"#fff"})
    }
  })
function getTotalLikes(postId) {
  var likesRef = database.ref('global_likes/' + postId);
  likesRef.on('value', function(snapshot) {
    var likes = snapshot.val(); 
    //console.log(likes)
    var totalLikes = Object.keys(likes || {}).length;
  
var formattedLikes = formatNumber(totalLikes);
$(spannumber).text(formattedLikes);
  });
}
getTotalLikes(postId);               
               
  
  $(span2).click(function(){
    open_commenttab(postId, 'post')
  })

   var elf = backgroundImage.toString().replace('url("','')
 var elfy = elf.toString().replace('")','')

  var img = new Image();
 //alert(elfy)
// console.log(img)
img.src = elfy.toString();
img.onload = function() {
 // section.style.width = img.width + 'px';
 //section.style.minHeight = img.height + 'px';

  var aspectRatio = img.naturalWidth / img.naturalHeight;
var maxHeight = 500 ; // Maximum height in pixels

var container = $(section);
var containerWidth = container.width();
var containerHeight = containerWidth / aspectRatio;

if (containerHeight > maxHeight) {
  containerHeight = maxHeight;
  // container.css("overflow-y", "scroll");
}
container.css({
  "box-sizing": "border-box",
  "min-height": `${containerHeight}px`,
  "max-height": `${maxHeight}px`
});
$(section).click(function(){
//   alert(maxHeight+"🎶🎶🎶🎶"+containerHeight)
  
})
// $(text).css({"font-family":fontFamily.toString()})
 $(text).html(htmlmessage)
}
img.onerror = function() {
 $(text).text("")
 $(section).html(textmessage)
  $(section).css({"font-family":fontFamily.toString()})
  
}
          })
          
        
          firebase.database().ref("my_channels_root/"+channelId.toString()+"/info").on("value", (snapshot) => {
  
    var imge  =[snapshot.val().image];
    var nam  =[snapshot.val().name];
     $(image).css('background-image', 'url(' + imge + ')');
     //$(s).text(nam)
})
          
          
          $(span5).append(span1, spannumber)
          $(btns).append(span5, span2, span3)
          $(hold).append(section)
          $(head).append(span_name, span_date)
          $(post).append(head,text, hold, btns)
          $(cover).append(image, post)
          $("#follow_tabinner").append(cover)
           
        } // post_1   
          else if(post_type.toString().toLowerCase().trim() == "post_2"){ 

  //   console.log(childData)    

          var cover = document.createElement("div")
          var image = document.createElement("div")
          var post = document.createElement("div")
          var hold = document.createElement("div")
          var head = document.createElement("div")
          var section = document.createElement("section")
          var text = document.createElement("div")
          var btns = document.createElement("div")
          var span1 = document.createElement("span")
          var span2 = document.createElement("span")
          var span3 = document.createElement("span")
          var spannumber = document.createElement("span")
          var span5 = document.createElement("span")
           var span_name = document.createElement("span")

          var span_date = document.createElement("span")
          
          
          $(cover).addClass("twit_cover")
          $(image).addClass("twit_profileimg")
          $(post).addClass("twit_post")
          $(hold).addClass("twit_content")
          $(head).addClass("twit_head") 
          $(text).addClass("twit_text")
          $(btns).addClass("twit_btns")
          $(span5).addClass("display_flex align_center")
             $(span_name).addClass("twit_username")

          $(span_date).addClass("twit_userdate")
          
          $(span1).append('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-heart" viewBox="0 0 16 16"><path d="m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z"/></svg>')
          $(span2).append('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-chat-left-dots" viewBox="0 0 16 16"><path d="M14 1a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H4.414A2 2 0 0 0 3 11.586l-2 2V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12.793a.5.5 0 0 0 .854.353l2.853-2.853A1 1 0 0 1 4.414 12H14a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z"/><path d="M5 6a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/></svg>')
          $(span3).append('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-three-dots-vertical" viewBox="0 0 16 16"><path d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/></svg>')
          
          
          
        updateFormattedDate(date, time, span_date) 
         setInterval(() => {
  updateFormattedDate(date, time, span_date);
}, 60000); // 60000 milliseconds = 1 minute
            
getUsernameFromFirebase(email)
  .then((username) => {
    if (username) {
   //   console.log("Username:", username);
   $(span_name).text(username)
    }
  }) 
         
         
          
           $(section).css({"background-image":backgroundImage.toString()})
  $(cover).css({"color":color.toString()})
  $(cover).css({"font-family":fontFamily.toString()})
  
 // $(c).css({"background":backgroundImage.toString()})
//  alert(textmessage)
 
 $(function(){
 var database = firebase.database();
 var postId = post_id ;
 var userId = useremail; 
  var userRef = database.ref('global_likes/' + postId + '/' + userId);
span1.addEventListener('click', function() {
  
  // Check if the user has already liked the post

  userRef.once('value', function(snapshot) {
    var hasLiked = snapshot.val();

    if (hasLiked) {
      // User has already liked the post, so remove the like
      userRef.remove();
     
    } else {
      // User has not liked the post, so add the like
      userRef.set(true);
   
    }
  });
});
userRef.on('value', function(snapshot) {
    var hasLiked = snapshot.val();
    if (hasLiked) {
      $(span1).addClass('like_effect')
      $(span1).css({"color":"red", "transition" : "color 0.5s"})
    }
    else{
      $(span1).removeClass('like_effect')
      $(span1).css({"color":"#fff"})
    }
  })
function getTotalLikes(postId) {
  var likesRef = database.ref('global_likes/' + postId);
  likesRef.on('value', function(snapshot) {
    var likes = snapshot.val(); 
    //console.log(likes)
    var totalLikes = Object.keys(likes || {}).length;
  
var formattedLikes = formatNumber(totalLikes);
$(spannumber).text(formattedLikes);
  });
}
getTotalLikes(postId);               
               
  
  $(span2).click(function(){
     open_commenttab(postId, 'post')
  })
  
               
         //   console.log(textmessage)

// Regular expression pattern to match the values within the brackets
const pattern = /#\[([\d]+)\]/g;

// Array to store the extracted values
const values = [];

// Match the pattern and extract the values
let match;
while ((match = pattern.exec(textmessage)) !== null) {
  values.push(match[1]);
}

// Function to fetch movie details from TMDB API and replace the values in the text
function fetchMovieDetailsAndReplace() {
  const promises = values.map(value => {
    const movieDetailsUrl = `https://api.themoviedb.org/3/movie/${value}?api_key=${API_KEY}`;
    return fetch(movieDetailsUrl)
      .then(response => response.json())
      .then(data => {
        return { id: value, title: data.title };
      });
  });

  Promise.all(promises)
    .then(movieDetails => {
      let newText = textmessage;
      movieDetails.forEach(movie => {
        const pattern = new RegExp(`#\\[${movie.id}]`, 'g');
     //  newText = newText.replace(pattern, `<span class="twit_tag">${movie.title}</span>`);
 newText = newText.replace(pattern, movie.title);
      });
    //  console.log(newText);
      // Replace the text in the section element
      var elf = backgroundImage.toString().replace('url("','')
 var elfy = elf.toString().replace('")','')

  var img = new Image();
 //alert(elfy)
// console.log(img)
img.src = elfy.toString();
img.onload = function() {
 // section.style.width = img.width + 'px';
 // section.style.height = img.height + 'px';

  const aspectRatio = img.naturalWidth / img.naturalHeight;
  var bed = "calc(100% /"+ aspectRatio+")" 
//alert(bed)
 $(section).css({"padding-top": bed})    
 $(text).css({"font-family":fontFamily.toString()})
}
img.onerror = function() {
 $(text).text("")
 $(text).html(newText)
 //$(section).html(newText)
  
}
      
      
     // $(section).html(newText);
    });
}

// Call the function to fetch movie details and replace the values
fetchMovieDetailsAndReplace();


          })
  // end of function for likes, and many others  
 $(function(){
var delimiter = "{_}";
//  console.log(image_string)
if(image_string.toString().includes(delimiter.toString())){
// Split the inputString by the delimiter
var substrings = image_string.toString().split(delimiter);
var numberOfSubstrings = substrings.length;


// Define a function to be applied on each substring
function myFunction(substring, index) {
  var numbre = document.createElement("span")
  numbre.id = "post_count"
  $(numbre).text((index + 1) +'/ ' +numberOfSubstrings)
//  console.log("Substring " + (index + 1) + ": " + substring);
  var type = checkMediaType(substring.toString())
  if(type === 'image'){
 var eat = document.createElement("section")
    var bed = "url('"+substring.toString()+"')"
   eat.style.backgroundImage = bed;

     var img = new Image();
img.src = substring.toString();
img.onload = function() {
  const aspectRatio = img.naturalWidth / img.naturalHeight;
 $(eat).css({"padding-bottom": "calc(100% /"+ aspectRatio+")"})
}  
//  console.log(eat)
 $(eat).append(numbre)
 $(eat).appendTo(hold)
  // Your custom logic here
    
  }
 // this link is an image 
  else if(type === 'video'){
 var eat = document.createElement("video")
 eat.src = substring.toString()
 eat.currentTime = 0.5 
// $(eat).css({"background-image":backgroundImage.toString()})

eat.width = eat.videoWidth;
eat.height = eat.videoHeight;

 $(eat).append(numbre)
 $(eat).appendTo(hold)
  // Your custom logic here
    
  }
 // this link is a video 
}

// Loop through the substrings and apply the function on each substring
substrings.forEach(myFunction);
}
else{
   hold.style.display = "flex"
var type = checkMediaType(image_string.toString())
  if(type === 'image'){
 var eat = document.createElement("section")
    var bed = "url('"+image_string.toString()+"')"
   eat.style.backgroundImage = bed;

     var img = new Image();
img.src = image_string.toString();
img.onload = function() {
  const aspectRatio = img.naturalWidth / img.naturalHeight;
 $(eat).css({"padding-bottom": "calc(100% /"+ aspectRatio+")"})
}  
//  console.log(eat)
 $(eat).appendTo(hold)
  // Your custom logic here
    
  }
 // this link is an image 
  else if(type === 'video'){
 var eat = document.createElement("video")
 eat.src = image_string.toString()
 eat.currentTime = 0.5 
 //$(eat).css({"background-image":backgroundImage.toString()})

eat.width = eat.videoWidth;
eat.height = eat.videoHeight;

 $(eat).appendTo(hold)
  // Your custom logic here
    
  }

}
  })
  // end of function for image / video string image_string  
        
 firebase.database().ref("my_channels_root/"+channelId.toString()+"/info").on("value", (snapshot) => {
  
    var imge  =[snapshot.val().image];
    var nam  =[snapshot.val().name];
     $(image).css('background-image', 'url(' + imge + ')');
     //$(s).text(nam)
})
          
          
          $(span5).append(span1, spannumber)
          $(btns).append(span5, span2, span3)
         // $(hold).append(section)
            $(head).append(span_name, span_date)
          $(post).append(head ,text, hold,  btns)
          $(cover).append(image, post)
          $("#follow_tabinner").append(cover)
           
        } // post_2   
          else if(post_type.toString().toLowerCase().trim() == "post_3"){ 
  
  //   console.log(childData)      

          var cover = document.createElement("div")
          var image = document.createElement("div")
          var post = document.createElement("div")
           var head = document.createElement("div")
          var hold = document.createElement("div")
          var section = document.createElement("header")
          var text = document.createElement("div")
          var btns = document.createElement("div")
          var span1 = document.createElement("span")
          var span2 = document.createElement("span")
          var span3 = document.createElement("span")
          var spannumber = document.createElement("span")
          var span5 = document.createElement("span")
           var span_name = document.createElement("span")

          var span_date = document.createElement("span")
            
          
          $(cover).addClass("twit_cover")
          $(image).addClass("twit_profileimg")
          $(post).addClass("twit_post")
           $(head).addClass("twit_head") 
          $(hold).addClass("twit_content")
          hold.style.display = "flex"
          $(text).addClass("twit_text")
          $(btns).addClass("twit_btns")
          $(span5).addClass("display_flex align_center")
           $(span_name).addClass("twit_username")

          $(span_date).addClass("twit_userdate")
            
          $(span1).append('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-heart" viewBox="0 0 16 16"><path d="m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z"/></svg>')
          $(span2).append('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-chat-left-dots" viewBox="0 0 16 16"><path d="M14 1a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H4.414A2 2 0 0 0 3 11.586l-2 2V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12.793a.5.5 0 0 0 .854.353l2.853-2.853A1 1 0 0 1 4.414 12H14a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z"/><path d="M5 6a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/></svg>')
          $(span3).append('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-three-dots-vertical" viewBox="0 0 16 16"><path d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/></svg>')
          
          
      updateFormattedDate(date, time, span_date) 
      setInterval(() => {
  updateFormattedDate(date, time, span_date);
}, 60000); // 60000 milliseconds = 1 minute
getUsernameFromFirebase(email)
  .then((username) => {
    if (username) {
   //   console.log("Username:", username);
   $(span_name).text(username)
    }
  }) 
         
          
         var art = detectLinks(htmlmessage)
    //     console.log(art)
    const urlRegex = /(https?:\/\/[^\s'"<>]+)/g;


const replacedText = htmlmessage.replace(urlRegex, '<a href="$&">$&</a>');

//  console.log(replacedText)
    //     const replacedMessage = htmlmessage.replace( /(https?:\/\/[^\s]+)/g,'<a href="$1" target="_blank">$1</a>'  );
//console.log(replacedMessage )
           $(section).html(replacedText)
            
         
          
           $(section).css({"background-image":backgroundImage.toString()})
  $(cover).css({"color":color.toString()})
  $(cover).css({"font-family":fontFamily.toString()})
  
 // $(c).css({"background":backgroundImage.toString()})
//  alert(textmessage)
 
 $(function(){
 var database = firebase.database();
 var postId = post_id ;
 var userId = useremail; 
  var userRef = database.ref('global_likes/' + postId + '/' + userId);
span1.addEventListener('click', function() {
  
  // Check if the user has already liked the post

  userRef.once('value', function(snapshot) {
    var hasLiked = snapshot.val();

    if (hasLiked) {
      // User has already liked the post, so remove the like
      userRef.remove();
     
    } else {
      // User has not liked the post, so add the like
      userRef.set(true);
   
    }
  });
});
userRef.on('value', function(snapshot) {
    var hasLiked = snapshot.val();
    if (hasLiked) {
      $(span1).addClass('like_effect')
      $(span1).css({"color":"red", "transition" : "color 0.5s"})
    }
    else{
      $(span1).removeClass('like_effect')
      $(span1).css({"color":"#fff"})
    }
  })
function getTotalLikes(postId) {
  var likesRef = database.ref('global_likes/' + postId);
  likesRef.on('value', function(snapshot) {
    var likes = snapshot.val(); 
    //console.log(likes)
    var totalLikes = Object.keys(likes || {}).length;
  
var formattedLikes = formatNumber(totalLikes);
$(spannumber).text(formattedLikes);
  });
}
getTotalLikes(postId);               
               
  
  $(span2).click(function(){
    open_commenttab(postId, 'post')
  })
  
 
          })
          
        
          firebase.database().ref("my_channels_root/"+channelId.toString()+"/info").on("value", (snapshot) => {
  
    var imge  =[snapshot.val().image];
    var nam  =[snapshot.val().name];
     $(image).css('background-image', 'url(' + imge + ')');
     //$(s).text(nam)
})
          
          
          $(span5).append(span1, spannumber)
          $(btns).append(span5, span2, span3)
          $(hold).append(section)
          $(head).append(span_name, span_date)
          $(post).append(head, text, hold,btns)
          $(cover).append(image, post)
          $("#follow_tabinner").append(cover)
           
        } // post_3   
          else if(post_type.toString().toLowerCase().trim() == "post_4"){ 
  
 //  console.log(childData)      

          var cover = document.createElement("div")
          var image = document.createElement("div")
          var post = document.createElement("div")
           var head = document.createElement("div")
          var hold = document.createElement("div")
          var section = document.createElement("header")
          var text = document.createElement("div")
          var btns = document.createElement("div")
          var poll_cover = document.createElement("div")
          var span1 = document.createElement("span")
          var span2 = document.createElement("span")
          var span3 = document.createElement("span")
          var spannumber = document.createElement("span")
          var span5 = document.createElement("span")
           var span_name = document.createElement("span")

          var span_date = document.createElement("span")
            
          
          $(cover).addClass("twit_cover")
          $(image).addClass("twit_profileimg")
          $(post).addClass("twit_post")
           $(head).addClass("twit_head") 
          $(hold).addClass("twit_content")
          hold.style.display = "flex"
          $(text).addClass("twit_text")
          $(btns).addClass("twit_btns")
          $(span5).addClass("display_flex align_center")
           $(span_name).addClass("twit_username")
           $(poll_cover).addClass("twit_pollcover")
        
poll_cover.id = post_id
          $(span_date).addClass("twit_userdate")
            
          $(span1).append('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-heart" viewBox="0 0 16 16"><path d="m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z"/></svg>')
          $(span2).append('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-chat-left-dots" viewBox="0 0 16 16"><path d="M14 1a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H4.414A2 2 0 0 0 3 11.586l-2 2V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12.793a.5.5 0 0 0 .854.353l2.853-2.853A1 1 0 0 1 4.414 12H14a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z"/><path d="M5 6a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/></svg>')
          $(span3).append('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-three-dots-vertical" viewBox="0 0 16 16"><path d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/></svg>')
          
          $(span3).click(function(){
            open_moreoptions(post_id, email)
          })
          
          
          
      updateFormattedDate(date, time, span_date) 
      setInterval(() => {
  updateFormattedDate(date, time, span_date);
}, 60000); // 60000 milliseconds = 1 minute
getUsernameFromFirebase(email)
  .then((username) => {
    if (username) {
   //   console.log("Username:", username);
   $(span_name).text(username)
    }
  }) 
         
          
         var art = detectLinks(htmlmessage)
    //     console.log(art)
    const urlRegex = /(https?:\/\/[^\s'"<>]+)/g;


const replacedText = htmlmessage.replace(urlRegex, '<a href="$&">$&</a>');

//  console.log(replacedText)
    //     const replacedMessage = htmlmessage.replace( /(https?:\/\/[^\s]+)/g,'<a href="$1" target="_blank">$1</a>'  );
//console.log(replacedMessage )
           $(section).html(replacedText)
            
         
          
           $(section).css({"background-image":backgroundImage.toString()})
  $(cover).css({"color":color.toString()})
  $(cover).css({"font-family":fontFamily.toString()})
  
 // $(c).css({"background":backgroundImage.toString()})
//  alert(textmessage)
 
 $(function(){
 var database = firebase.database();
 var postId = post_id ;
 var userId = useremail; 
  var userRef = database.ref('global_likes/' + postId + '/' + userId);
span1.addEventListener('click', function() {
  
  // Check if the user has already liked the post

  userRef.once('value', function(snapshot) {
    var hasLiked = snapshot.val();

    if (hasLiked) {
      // User has already liked the post, so remove the like
      userRef.remove();
     
    } else {
      // User has not liked the post, so add the like
      userRef.set(true);
   
    }
  });
});
userRef.on('value', function(snapshot) {
    var hasLiked = snapshot.val();
    if (hasLiked) {
      $(span1).addClass('like_effect')
      $(span1).css({"color":"red", "transition" : "color 0.5s"})
    }
    else{
      $(span1).removeClass('like_effect')
      $(span1).css({"color":"#fff"})
    }
  })
function getTotalLikes(postId) {
  var likesRef = database.ref('global_likes/' + postId);
  likesRef.on('value', function(snapshot) {
    var likes = snapshot.val(); 
    //console.log(likes)
    var totalLikes = Object.keys(likes || {}).length;
  
var formattedLikes = formatNumber(totalLikes);
$(spannumber).text(formattedLikes);
  });
}
getTotalLikes(postId);               
               
  
  $(span2).click(function(){
    open_commenttab(postId, 'post')
  })
  
 
          })
 
 $(function(){
   var poll_1;
   var poll_2;
   var poll_3;
   var poll_4;
   var cent_span1;
   var cent_span2;
   var cent_span3;
   var cent_span4;
   var range_span1;
   var range_span2;
   var range_span3;
   var range_span4;
   if(opt_1_val.toString().trim()){
     poll_1 = document.createElement("section")
     var text_span = document.createElement("span")
     cent_span1 = document.createElement("div")
     $(text_span).text(opt_1_val)
     range_span1 = document.createElement("section")
     $(range_span1).addClass("poll_range")
     $(poll_1).append(cent_span1, text_span, range_span1)
     $(poll_1).addClass("twit_polls")
     poll_1.id = opt_1_id
     cent_span1.id = opt_1_id+"count"
     $(cent_span1).addClass("poll_count")
     poll_1.addEventListener('click', () => {
  updateVote(opt_1_id);
  calculateOverallVoteCount()
});
   }
   if(opt_2_val.toString().trim()){
     poll_2 = document.createElement("section")
     var text_span = document.createElement("span")
     cent_span2 = document.createElement("div")
     $(text_span).text(opt_2_val)
     range_span2 = document.createElement("section")
     $(range_span2).addClass("poll_range")
     $(poll_2).append(cent_span2, text_span, range_span2)
     $(poll_2).addClass("twit_polls")
     poll_2.id = opt_2_id
     cent_span2.id = opt_2_id+"count"
     $(cent_span2).addClass("poll_count")
     poll_2.addEventListener('click', () => {
  updateVote(opt_2_id);
  calculateOverallVoteCount()
});
   }
   if(opt_3_val.toString().trim()){
     poll_3 = document.createElement("section")
     var text_span = document.createElement("span")
     cent_span3 = document.createElement("div")
     $(text_span).text(opt_3_val)
     range_span3 = document.createElement("section")
     $(range_span3).addClass("poll_range")
     $(poll_3).append(cent_span3, text_span, range_span3)
     $(poll_3).addClass("twit_polls")
     poll_3.id = opt_3_id
     cent_span3.id = opt_3_id+"count"
     $(cent_span3).addClass("poll_count")
     poll_3.addEventListener('click', () => {
  updateVote(opt_3_id);
  calculateOverallVoteCount()
});
   }
   if(opt_4_val.toString().trim()){
     poll_4 = document.createElement("section")
     var text_span = document.createElement("span")
     cent_span4 = document.createElement("div")
     $(text_span).text(opt_4_val)
     range_span4 = document.createElement("section")
     $(range_span4).addClass("poll_range")
     $(poll_4).append(cent_span4, text_span, range_span4)
     $(poll_4).addClass("twit_polls")
     poll_4.id = opt_4_id
     cent_span4.id = opt_4_id+"count"
     $(cent_span4).addClass("poll_count")
     poll_4.addEventListener('click', () => {
  updateVote(opt_4_id);
  calculateOverallVoteCount()
});
   }
   
   
   var poll_below = document.createElement("div")
   var total_votes = document.createElement("span")
   var poll_time = document.createElement("span")
   
   //  $(total_votes).text("60 votes")
     $(poll_below).addClass("poll_below")
     
     var has_it_expired ;
// Function to calculate and update the time remaining
function updateRemainingTime() {
  // Get the current timestamp
  const currentTimestamp = Date.now();

  // Calculate the time difference between current and expiry timestamps
  const timeDifference = expiryTimestamp - currentTimestamp;

  // Check if the poll has expired
  if (timeDifference <= 0) {
    // The poll has expired, take appropriate actions (e.g., disable voting, hide results)
    $(poll_time).text('Final Results');
    has_it_expired = true 
    return;
  }
else{
  has_it_expired = false 
  // Calculate the time remaining in hours and minutes
  const hoursRemaining = Math.floor(timeDifference / (1000 * 60 * 60));
  const minutesRemaining = Math.floor((timeDifference % (1000 * 60 * 60)) / (1000 * 60));

  // Display the time remaining
 $(poll_time).text(`Time remaining: ${hoursRemaining} hours, ${minutesRemaining} minutes`);
} // end of if poll has not expired 
} // end of function to update time 

updateRemainingTime();

setInterval(updateRemainingTime, 60000);

const database = firebase.database();
const pollRef = database.ref('my_polls/'+post_id); // 
const optionsRef = pollRef.child('options');
var userId = useremail 

// alert(has_it_expired )
// Function to handle vote updates
function updateVote(optionId) {
  if(has_it_expired){
    return false ;
  }
  else{
  // Get the reference to the user's votes
  const userVotesRef = pollRef.child('userVotes').child(userId);

  // Check if the user has already voted for any option
  userVotesRef.once('value', (snapshot) => {
    const previousVotes = snapshot.val();

    if (previousVotes) {
      // Remove the user's previous votes for all options
      for (const voteOptionId of Object.keys(previousVotes)) {
        optionsRef.child(voteOptionId).child('votes').child(userId).remove();
      }
    }

    // Set the user's vote for the selected option
    optionsRef.child(optionId).child('votes').child(userId).set(true);

    // Update the user's votes record
    userVotesRef.set({
      [optionId]: true
    });
  });
  
    
  }
  
}

// Function to update the vote count for an option
function updateVoteCount(optionId) {
  optionsRef.child(optionId).child('votes').once('value', (snapshot) => {
    const voteCount = snapshot.numChildren();
   // console.log(`Option ${optionId} has ${voteCount} votes.`);
  });
}

// Listen for changes in the votes data for each option
optionsRef.once('value', (snapshot) => {
  snapshot.forEach((optionSnapshot) => {
    const optionId = optionSnapshot.key;
    updateVoteCount(optionId);

    // Attach a listener to the votes data for each option
    optionsRef.child(optionId).child('votes').on('value', () => {
      updateVoteCount(optionId);
    });
  });
});


// Function to update the user's selected option
function updateSelectedOption(userId) {
  const userVotesRef = pollRef.child('userVotes').child(userId);
  userVotesRef.on('value', (snapshot) => {
    const userVotes = snapshot.val();
    if (userVotes) {
      const selectedOptionId = Object.keys(userVotes)[0];
    //  console.log(`User ${userId} has selected option ${selectedOptionId}.`);
    // Remove highlighting from all options within the specific poll
   
      
      // Apply highlighting to the selected option within the specific poll
      $(`#${post_id} section`).css({ border: "0" });
      $(`#${post_id} #${selectedOptionId}`).css({ "border-right": "2px solid #e67e22 " });
      
      //
    } else {
   //   console.log(`User ${userId} has not selected any option.`);
      // Update your user interface to handle the case where no option is selected
    }
  });
}

// Call the function to update the selected option for a user
updateSelectedOption(useremail);



const userVotesRef = pollRef.child('userVotes');


// Function to calculate the overall vote count
function calculateOverallVoteCount(pollId) {
  userVotesRef.on('value', (snapshot) => {
    const votesData = snapshot.val();
    if (votesData) {
      const uniqueUserIds = Object.keys(votesData);
      const overallVoteCount = uniqueUserIds.length;
      $(total_votes).text(`${overallVoteCount} Votes`);
      // Update your user interface with the overall vote count
// alert(overallVoteCount)
calculateEachVoteCounts(overallVoteCount, post_id);
    } else {
     
      $(total_votes).text(`0 Votes`);
      // Update your user interface to handle the case where no votes are recorded
    }
  });
}
// Function to calculate the vote counts for each option and update the user interface
function calculateEachVoteCounts(percent, pollId) {
  optionsRef.on('value', (snapshot) => {
    const options = snapshot.val();
    const overallVoteCounts = {};
    var  array = [];
    Object.keys(options).forEach((optionId) => {
    array.push(optionId);
      $(`#${pollId} .poll_count`).text(``);
      const votes = options[optionId].votes;
      const voteCount = votes ? Object.keys(votes).length : 0;

      for(let i=0; i<array.length; i++){
firebase.database().ref(`my_polls/${post_id}/options/${array[i]}/votes`).on('value', (snapshot) => {
    var opt = snapshot.numChildren();
      var votePercentage = ((opt / percent) * 100).toFixed(1);
      $(`#${pollId} #${array[i]} .poll_count`).text(`${votePercentage}%`);  
      $(`#${pollId} #${array[i]} .poll_range`).css({width:`${votePercentage}%`});  
   // console.log(opt)
})
   
        
      }
    });
   //   console.log(array)
      
      

    // Update your user interface with the overall vote counts if needed
    // You can use the `overallVoteCounts` object to display the overall vote counts for each option
  });
}

// Call the function to calculate and update the vote counts for each option in a specific poll



// Call the function to calculate the overall vote count
calculateOverallVoteCount();







$(poll_below).append(total_votes, poll_time)
   
   $(poll_cover).append(poll_1, poll_2, poll_3, poll_4, poll_below)
   
 })// poll  
        
          firebase.database().ref("my_channels_root/"+channelId.toString()+"/info").on("value", (snapshot) => {
  
    var imge  =[snapshot.val().image];
    var nam  =[snapshot.val().name];
     $(image).css('background-image', 'url(' + imge + ')');
     //$(s).text(nam)
})
          
          
          $(span5).append(span1, spannumber)
          $(btns).append(span5, span2, span3)
          $(hold).append(section)
          $(head).append(span_name, span_date)
          $(post).append(head, hold, poll_cover, text, btns)
          $(cover).append(image, post)
          $("#follow_tabinner").append(cover)
           
        } // post_4   
          if(post_type.toString().toLowerCase().trim() == "post_5"){ 

  //   console.log(childData)    

          var cover = document.createElement("div")
          var image = document.createElement("div")
          var post = document.createElement("div")
          var head = document.createElement("div")
          var hold = document.createElement("div")
          var section = document.createElement("nav")
          var text = document.createElement("div")
          var btns = document.createElement("div")
          var span1 = document.createElement("span")
          var span2 = document.createElement("span")
          var span3 = document.createElement("span")
          var spannumber = document.createElement("span")
          var span5 = document.createElement("span")
          var span_name = document.createElement("span")
          var span_date = document.createElement("span")
            var grape_cover = document.createElement("div")
          
          $(grape_cover).addClass("grape_cover")
          $(cover).addClass("twit_cover")
          $(image).addClass("twit_profileimg")
          $(post).addClass("twit_post") 
          $(head).addClass("twit_head") 
          $(hold).addClass("twit_content")
          hold.style.display = "flex"
          $(text).addClass("twit_text")
  
          $(btns).addClass("twit_btns")
          $(span5).addClass("display_flex align_center")
          $(span_name).addClass("twit_username")
          $(span_date).addClass("twit_userdate")
            
          $(span1).append('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-heart" viewBox="0 0 16 16"><path d="m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z"/></svg>')
          $(span2).append('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-chat-left-dots" viewBox="0 0 16 16"><path d="M14 1a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H4.414A2 2 0 0 0 3 11.586l-2 2V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12.793a.5.5 0 0 0 .854.353l2.853-2.853A1 1 0 0 1 4.414 12H14a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z"/><path d="M5 6a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/></svg>')
          $(span3).append('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-three-dots-vertical" viewBox="0 0 16 16"><path d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/></svg>')
          
          
         
getUsernameFromFirebase(email)
  .then((username) => {
    if (username) {
   //   console.log("Username:", username);
   $(span_name).text(username)
    }
  }) 
         
          
          updateFormattedDate(date, time, span_date)
           setInterval(() => {
  updateFormattedDate(date, time, span_date);
}, 60000); // 60000 milliseconds = 1 minute
  //          var formattedDate = getFormattedDate(date, time);
   //      $(span_date).text(formattedDate)
          
           
//  $(cover).css({"color":color.toString()})
  
 // $(c).css({"background":backgroundImage.toString()})
//  alert(textmessage)
 
 $(function(){
 var database = firebase.database();
 var postId = post_id ;
 var userId = useremail; 
  var userRef = database.ref('global_likes/' + postId + '/' + userId);
span1.addEventListener('click', function() {
  
  // Check if the user has already liked the post
     
  userRef.once('value', function(snapshot) {
    var hasLiked = snapshot.val();

    if (hasLiked) {
      // User has already liked the post, so remove the like
      userRef.remove();
     
    } else {
      // User has not liked the post, so add the like
      userRef.set(true);
   
    }
  });
});
userRef.on('value', function(snapshot) {
    var hasLiked = snapshot.val();
    if (hasLiked) {
      $(span1).addClass('like_effect')
      $(span1).css({"color":"red", "transition" : "color 0.5s"})
    }
    else{
      $(span1).removeClass('like_effect')
      $(span1).css({"color":"#fff"})
    }
  })
function getTotalLikes(postId) {
  var likesRef = database.ref('global_likes/' + postId);
  likesRef.on('value', function(snapshot) {
    var likes = snapshot.val(); 
    //console.log(likes)
    var totalLikes = Object.keys(likes || {}).length;
  
var formattedLikes = formatNumber(totalLikes);
$(spannumber).text(formattedLikes);
  });
}
getTotalLikes(postId);               
               
  
  $(span2).click(function(){
    open_commenttab(postId, 'post')
  })

 







          })
          // likes
        
          firebase.database().ref("my_channels_root/"+channelId.toString()+"/info").on("value", (snapshot) => {
  
    var imge  =[snapshot.val().image];
    var nam  =[snapshot.val().name];
     $(image).css('background-image', 'url(' + imge + ')');
     //$(s).text(nam)
})
          
          
       $(function(){
         if((filmType.toString().toLowerCase().trim() == "movie") || (filmType.toString().toLowerCase().trim() == "movies")){
           oh_a_movie()
         }
        else if((filmType.toString().toLowerCase().trim() == "series") || (filmType.toString().toLowerCase().trim() == "tv") || (filmType.toString().toLowerCase().trim() == "serie")){
           oh_a_serie()
         }
         
         function oh_a_movie(){
           
         
              var movieDetailsUrl = `https://api.themoviedb.org/3/movie/${filmId}?api_key=${API_KEY}`;
             
  // Fetch movie details from TMDB API
  fetch(movieDetailsUrl)
    .then(response => response.json())
    .then(data => {
      var backdrop = data.backdrop_path;
      var posterPath = data.poster_path;
      var title = data.title;
      var overview = data.overview;
      var movieId = data.id;
      var genres = data.genres;
    var productionCompanies = data.production_companies;
       var tagline = data.tagline;
  var duration = data.runtime;
    var language = data.original_language;
    var altTitle = data.title !== data.original_title ? data.original_title : null;
    var revenue = data.revenue; 
    var budget = data.budget;
    var adult = data.adult;
    var boxOffice = revenue - budget;      
    var movieYear = getMovieYear(data.release_date);     //   console.log(data.release_date )
    
    
    // grape     
    
      var grape_title = document.createElement("div")
      var grape_tlink = `<span class="movie_title" id="${filmId}" onclick="open_opera('${title}', ${filmId}, 'movies')">${title}</span>`
      var grapethreeflex = document.createElement("div")
      var grape_tline = document.createElement("div")
      var grape_oneflex = document.createElement("div")
      var grape_genre = document.createElement("div")
      var grape_pg = document.createElement("div")
      var grape_year = document.createElement("div")
      var grape_imdb = document.createElement("div")
      var grape_twoflex = document.createElement("div")
      var grape_dur = document.createElement("div")
      var grape_note = document.createElement("div")


$(grape_title).addClass("grape_title")
$(grape_tlink).addClass("grape_tlink")
$(grapethreeflex).addClass("grapethreeflex")
$(grape_tline).addClass("grape_tline")
$(grape_oneflex).addClass("grape_oneflex")
$(grape_genre).addClass("grape_genre")
$(grape_year).addClass("grape_year")
$(grape_pg).addClass("grape_pg")
$(grape_imdb).addClass("grape_imdb")
$(grape_twoflex).addClass("grape_twoflex")
$(grape_dur).addClass("grape_dur")
$(grape_note).addClass("grape_note")

$(grape_title).text(title)
$(grape_tline).text(tagline)
$(grape_year).text(movieYear)  

   
 var rest = checkDate(data.release_date)
 if(rest.toString() == "past"){
$(grape_dur).text(convertMinutesToDuration(duration))
 }
 else if(rest.toString() == "today"){
$(grape_dur).text("Releasing Today!")
 }
 else if(rest.toString() == "tomorrow"){
$(grape_dur).text("Releasing Tomorrow!")
 }
 else if(rest.toString() == "within"){
$(grape_dur).text("Releasing Within the week!")
 }
 else if(rest.toString() == "beyond"){
$(grape_dur).text(`Releasing on: ${formatDate(data.release_date)}`)
 }
 else{
$(grape_dur).text(convertMinutesToDuration(duration))
 }
   
  /*
if((duration.toString().trim() == 0)){
  
}else{
  
}
*/
    
    
$(grape_note).text(overview)


fetch(`https://www.omdbapi.com/?apikey=${OMDB_KEY}&t=${title.toString().toLowerCase()}&y=${movieYear}&plot=full`)
  .then(response => response.json())
  .then(data => {
    if (data.Response === 'True') {
       grape_imdb.innerHTML = data.imdbRating;
       grape_pg.innerHTML = data.Rated;
    } else {
        return false;
    }
  })

  $(function(){
fetch(`https://api.themoviedb.org/3/movie/${filmId}/images?api_key=${API_KEY}&include_image_language=en&include_image_type=poster`)
  .then(response => response.json())
  .then(data => {
    var image = data.posters[0]; // or data.backdrops[0] for backdrops
    var ima = data.posters[1]; // or data.backdrops[0] for backdrops
    var imageU = `https://image.tmdb.org/t/p/original${image.file_path}`;
    var imageUrl = `https://image.tmdb.org/t/p/original${ima.file_path}`;
   // console.log(imageUrl); // log the URL of the image to the console  
     section.style.backgroundImage = "url("+imageUrl+")";
   
  var img = new Image();
 //alert(elfy)
// console.log(img)
img.src = imageU.toString();
img.onload = function() {
 // section.style.width = img.width + 'px';
 //section.style.minHeight = img.height + 'px';

  var aspectRatio = img.naturalWidth / img.naturalHeight;
var maxHeight = 500 ; // Maximum height in pixels

var container = $(section);
var containerWidth = container.width();
var containerHeight = containerWidth / aspectRatio;

if (containerHeight > maxHeight) {
  containerHeight = maxHeight;
  // container.css("overflow-y", "scroll");
}
container.css({
  "box-sizing": "border-box",
  "min-height": `${containerHeight}px`,
  "max-height": `${maxHeight}px`
});
$(section).click(function(){
//   alert(maxHeight+"🎶🎶🎶🎶"+containerHeight)
  
})
// $(text).css({"font-family":fontFamily.toString()})
 $(text).html(htmlmessage)
}
  })
  .catch(error => {  
    var defaults = `https://image.tmdb.org/t/p/original${posterPath}`;
        section.style.backgroundImage = "url("+defaults+")";
      //  document.getElementById("long_rightboard").style.backgroundImage = "url("+defaults+")";});
  
   var img = new Image();
 //alert(elfy)
// console.log(img)
img.src = defaults.toString();
img.onload = function() {
 // section.style.width = img.width + 'px';
 //section.style.minHeight = img.height + 'px';

  var aspectRatio = img.naturalWidth / img.naturalHeight;
var maxHeight = 500 ; // Maximum height in pixels

var container = $(section);
var containerWidth = container.width();
var containerHeight = containerWidth / aspectRatio;

if (containerHeight > maxHeight) {
  containerHeight = maxHeight;
  // container.css("overflow-y", "scroll");
}
container.css({
  "box-sizing": "border-box",
  "min-height": `${containerHeight}px`,
  "max-height": `${maxHeight}px`
});
$(section).click(function(){
//   alert(maxHeight+"🎶🎶🎶🎶"+containerHeight)
  
})
// $(text).css({"font-family":fontFamily.toString()})
 $(text).html(htmlmessage)
}
  })
  
    })
    
    $(grapethreeflex).append(grape_title, grape_tlink)
    $(grape_oneflex).append(grape_year, grape_pg, grape_imdb)
    $(grape_twoflex).append(grape_dur)
    $(grape_cover).append(grapethreeflex, grape_tline, grape_oneflex, grape_twoflex, grape_note)
    
    

    }) // end of fetch function 
    
     
    
    
    
         }// end of function 
         
         function oh_a_serie(){
        //   alert("1")
         
              var movieDetailsUrl = `https://api.themoviedb.org/3/tv/${filmId}?api_key=${API_KEY}`;
             
  // Fetch movie details from TMDB API
  fetch(movieDetailsUrl)
    .then(response => response.json())
    .then(data => {
      //     console.log (data)
      var backdrop = data.backdrop_path;
      var posterPath = data.poster_path;
      var title = data.name;
      var overview = data.overview;
      var movieId = data.id;
      var genres = data.genres;
    var productionCompanies = data.production_companies;
       var tagline = data.tagline;
  var duration = data.runtime;
    var language = data.original_language;
    var altTitle = data.title !== data.original_title ? data.original_title : null;
    var revenue = data.revenue; 
    var budget = data.budget;
    var adult = data.adult;
    var boxOffice = revenue - budget;      
    var movieYear = getMovieYear(data.first_air_date);        
    
    
    // grape     
    
      var grape_title = document.createElement("div")
      var grape_tlink = `<span class="serie_title" id="${filmId}" onclick="open_opera('${title}', ${filmId}, 'series')">${title}</span>`
      var grapethreeflex = document.createElement("div")
      var grape_tline = document.createElement("div")
      var grape_oneflex = document.createElement("div")
      var grape_genre = document.createElement("div")
      var grape_pg = document.createElement("div")
      var grape_year = document.createElement("div")
      var grape_imdb = document.createElement("div")
      var grape_twoflex = document.createElement("div")
      var grape_file = document.createElement("div")
      var grape_note = document.createElement("div")


$(grape_title).addClass("grape_title")
$(grape_tlink).addClass("grape_tlink")
$(grapethreeflex).addClass("grapethreeflex")
$(grape_tline).addClass("grape_tline")
$(grape_oneflex).addClass("grape_oneflex")
$(grape_genre).addClass("grape_genre")
$(grape_year).addClass("grape_year")
$(grape_pg).addClass("grape_pg")
$(grape_imdb).addClass("grape_imdb")
$(grape_twoflex).addClass("grape_twoflex")
$(grape_file).addClass("grape_file")
$(grape_note).addClass("grape_note")

$(grape_title).text(title)
$(grape_tline).text(tagline)
$(grape_year).text(movieYear)
$(grape_file).text(`S${data.number_of_seasons} E${data.number_of_episodes}`)
$(grape_note).text(overview)


fetch(`https://www.omdbapi.com/?apikey=${OMDB_KEY}&t=${title.toString().toLowerCase()}&y=${movieYear}&plot=full`)
  .then(response => response.json())
  .then(data => {
    if (data.Response === 'True') {
       grape_imdb.innerHTML = data.imdbRating;
       grape_pg.innerHTML = data.Rated;
    } else {
        return false;
    }
  })

  $(function(){
fetch(`https://api.themoviedb.org/3/tv/${filmId}/images?api_key=${API_KEY}&include_image_language=en&include_image_type=poster`)
  .then(response => response.json())
  .then(data => {
    var image = data.posters[0]; // or data.backdrops[0] for backdrops
    var ima = data.posters[1]; // or data.backdrops[0] for backdrops
    var imageU = `https://image.tmdb.org/t/p/original${image.file_path}`;
    var imageUrl = `https://image.tmdb.org/t/p/original${ima.file_path}`;
   // console.log(imageUrl); // log the URL of the image to the console  
     section.style.backgroundImage = "url("+imageU+")";
   
  var img = new Image();
 //alert(elfy)
// console.log(img)
img.src = imageU.toString();
img.onload = function() {
 // section.style.width = img.width + 'px';
 //section.style.minHeight = img.height + 'px';

  var aspectRatio = img.naturalWidth / img.naturalHeight;
var maxHeight = 500 ; // Maximum height in pixels

var container = $(section);
var containerWidth = container.width();
var containerHeight = containerWidth / aspectRatio;

if (containerHeight > maxHeight) {
  containerHeight = maxHeight;
  // container.css("overflow-y", "scroll");
}
container.css({
  "box-sizing": "border-box",
  "min-height": `${containerHeight}px`,
  "max-height": `${maxHeight}px`
});
$(section).click(function(){
//   alert(maxHeight+"🎶🎶🎶🎶"+containerHeight)
  
})
// $(text).css({"font-family":fontFamily.toString()})
 $(text).html(htmlmessage)
}
  })
  .catch(error => {  
    var defaults = `https://image.tmdb.org/t/p/original${posterPath}`;
        section.style.backgroundImage = "url("+defaults+")";
      //  document.getElementById("long_rightboard").style.backgroundImage = "url("+defaults+")";});
  
   var img = new Image();
 //alert(elfy)
// console.log(img)
img.src = defaults.toString();
img.onload = function() {
 // section.style.width = img.width + 'px';
 //section.style.minHeight = img.height + 'px';

  var aspectRatio = img.naturalWidth / img.naturalHeight;
var maxHeight = 500 ; // Maximum height in pixels

var container = $(section);
var containerWidth = container.width();
var containerHeight = containerWidth / aspectRatio;

if (containerHeight > maxHeight) {
  containerHeight = maxHeight;
  // container.css("overflow-y", "scroll");
}
container.css({
  "box-sizing": "border-box",
  "min-height": `${containerHeight}px`,
  "max-height": `${maxHeight}px`
});
$(section).click(function(){
//   alert(maxHeight+"🎶🎶🎶🎶"+containerHeight)
  
})
// $(text).css({"font-family":fontFamily.toString()})
 $(text).html(htmlmessage)
}
  })
  
    })
    
    $(grapethreeflex).append(grape_title, grape_tlink)
    $(grape_oneflex).append(grape_year, grape_pg, grape_imdb)
    $(grape_twoflex).append(grape_file)
    $(grape_cover).append(grapethreeflex, grape_tline, grape_oneflex, grape_twoflex, grape_note)
    
    

    }) // end of fetch function 
    
     
    
    
    
         }// end of function 
         
         
       })
       //  tmdb   
          
          
          
          
          
          
          $(span5).append(span1, spannumber)
          $(btns).append(span5, span2, span3)
          $(hold).append(section)
          $(head).append(span_name, span_date)
          $(post).append(head,grape_cover, text, hold, btns)
          $(cover).append(image, post)
          $("#follow_tabinner").append(cover)
           
        } // post_5   
        
        
        });
      }

      isFetching = false; // Reset the flag
    })
    .catch(function(error) {
      failure_alert(error);
      isFetching = false; // Reset the flag in case of an error
    });
}


var containerDiv = document.getElementById("follow_tabinner");
containerDiv.addEventListener("scroll", function() {
  if ((containerDiv.scrollTop + containerDiv.clientHeight >= containerDiv.scrollHeight) && (!isFetching) ) {
    retrieveNextBatch();
  }
});
retrieveNextBatch();



    
    }
    
    
    $("#film_footbtn").click(function(){
        var dbRef = firebase.database().ref('my_subscription/' + useremail.toString());
      dbRef.on('value', (snapshot) => {
  //      console.log(snapshot.val())
   // collectInner.innerHTML = '';
    snapshot.forEach((childSnapshot) => {
    })
    
      })
    retrieve_tweets()
      })
   
    
   
    
    
  })
//   font     
function changeFontRandomly(divId, div2) {
  var fonts = ["'Akaya Telivigala', cursive",
    "'Caveat', cursive",
    "'Concert One', cursive",
    "'Cookie', cursive",
    "'Courgette', cursive",
    "'Dancing Script', cursive",
    "'Dosis', sans-serif",
    "'Festive', cursive",
    "'Fredoka One', cursive",
    "'Great Vibes', cursive",
    "'Indie Flower', cursive",
    "'Lobster', cursive",
    "'Mochiy Pop P One', sans-serif",
    "'Oswald', sans-serif",
    "'Patrick Hand', cursive",
    "'Permanent Marker', cursive",
    "'Quintessential', cursive",
    "'Roboto', sans-serif",
    "'Orbitron', sans-serif",
    "'Rock 3D', cursive",
    "'Rowdies', cursive",
    "'Secular One', sans-serif",
    "'Shizuru', cursive",
    "'Tangerine', cursive",
    "'Yesteryear', cursive",
    "'Yellowtail', cursive",
    "'Yatra One', cursive",
    "'UnifrakturCook', cursive",
    "'Ubuntu', sans-serif",
    "'Tangerine', cursive",
    "'Stalinist One', cursive",
    "'Special Elite', cursive",
    "'Shojumaru', cursive",
    "'Satisfy', cursive'Sacramento', cursive",
    "'Press Start 2P', cursive",
    "'Permanent Marker', cursive",
    "'Indie Flower', cursive",
    "'Jua', sans-serif",
    "'Megrim', cursive",
    "'Metal Mania', cursive",
    "'Monoton', cursive",
    "'Monsieur La Doulaise', cursive",
    "'Niconne', cursive",
    "'Oleo Script Swash Caps', cursive",
    "'Pacifico', cursive",
    "'Parisienne', cursive",
    "'Do Hyeon', sans-serif",
    "'Erica One', cursive",
    "'Faster One', cursive",
    "'Fontdiner Swanky', cursive",
    "'Freckle Face', cursive",
    "'Fredericka the Great', cursive",
    "'Great Vibes', cursive",
    "'Hanalei Fill', cursive",
    "'Henny Penny', cursive",
    "'Homemade Apple', cursive",
    "'Alegreya SC', serif",
    "'Allerta Stencil', sans-serif",
    "'Anton', sans-serif",
    "'Audiowide', cursive",
    "'Coiny', cursive",
    "'Dancing Script', cursive",
    "'Diplomata SC', cursive",
    "'Homemade Apple', cursive",
    "sofia",
    "handlee",
    "'Yanone Kaffeesatz', sans-serif"
  ];

  var randomFont = fonts[Math.floor(Math.random() * fonts.length)];
  document.getElementById(divId).style.fontFamily = randomFont;
  document.getElementById(div2).style.fontFamily = randomFont;
}

function opera_exit(){
 // alert("hh")
      document.getElementById("opera_bg").style.bottom = "-70%";
       var operaVidSection = document.getElementById("opera_vidsection");
        operaVidSection.innerHTML = ""; // Clear any existing content
    //  $("#opera_bg").hide()
      $("#opera_seas").hide()
      $("#opera_name").text("")
      $("#opera_year").text("")
      $("#opera_pg").text("")
      $("#opera_imdb").text("")
      $("#opera_image").css({"background-image":""})
      $(".open_billboard").css({"background-image":""})
      $("#opera_collectbtn").html('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-patch-plus" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8 5.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V10a.5.5 0 0 1-1 0V8.5H6a.5.5 0 0 1 0-1h1.5V6a.5.5 0 0 1 .5-.5z"/><path d="m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z"/></svg>')
      $("#opera_bellbtn").html('<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bookmark-plus" viewBox="0 0 16 16"><path d="M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.777.416L8 13.101l-5.223 2.815A.5.5 0 0 1 2 15.5V2zm2-1a1 1 0 0 0-1 1v12.566l4.723-2.482a.5.5 0 0 1 .554 0L13 14.566V2a1 1 0 0 0-1-1H4z"/><path d="M8 4a.5.5 0 0 1 .5.5V6H10a.5.5 0 0 1 0 1H8.5v1.5a.5.5 0 0 1-1 0V7H6a.5.5 0 0 1 0-1h1.5V4.5A.5.5 0 0 1 8 4z"/></svg>')
    }
function phoenix_exit(){
 // alert("hh")
      document.getElementById("phoenix_bg").style.bottom = "-70%";
      /*
       var operaVidSection = document.getElementById("opera_vidsection");
        operaVidSection.innerHTML = ""; // Clear any existing content
    //  $("#opera_bg").hide()
      $("#opera_seas").hide()
      
      $("#opera_name").text("")
      $("#opera_year").text("")
      $("#opera_pg").text("")
      $("#opera_imdb").text("")
      $("#opera_image").css({"background-image":""})
      $(".open_billboard").css({"background-image":""})
      $("#opera_collectbtn").html('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-patch-plus" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8 5.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V10a.5.5 0 0 1-1 0V8.5H6a.5.5 0 0 1 0-1h1.5V6a.5.5 0 0 1 .5-.5z"/><path d="m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z"/></svg>')
      $("#opera_bellbtn").html('<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bookmark-plus" viewBox="0 0 16 16"><path d="M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.777.416L8 13.101l-5.223 2.815A.5.5 0 0 1 2 15.5V2zm2-1a1 1 0 0 0-1 1v12.566l4.723-2.482a.5.5 0 0 1 .554 0L13 14.566V2a1 1 0 0 0-1-1H4z"/><path d="M8 4a.5.5 0 0 1 .5.5V6H10a.5.5 0 0 1 0 1H8.5v1.5a.5.5 0 0 1-1 0V7H6a.5.5 0 0 1 0-1h1.5V4.5A.5.5 0 0 1 8 4z"/></svg>')
      */
    }
  
$(function(){
   
     $(document).mouseup(function(e) 
{
    var container = $("#sms_butt");

    // if the target of the click isn't the container nor a descendant of the container
    if (!container.is(e.target) && container.has(e.target).length === 0) 
    {
       container.css({"height":"0px"})
       container.hide()
    }
});
  $(document).mouseup(function(e) {
    var container = $("#opera_bg");
    var parent = document.getElementById("opera_board")
    // if the target of the click isn't the container nor a descendant of the container   opera       opera_bg     
    var a = document.getElementById("opera_bg").style.bottom
   if ((!container.is(e.target) && container.has(e.target).length === 0) && ((a == "4px"))) {
       opera_exit()
    //  alert(a)  
  
         history.back();     
    CURRENT_TAB = visitedPages[visitedPages.length - 1];
  history_back()
    }
});
  $(document).mouseup(function(e) {
    var container = $("#phoenix_bg");
  //  var parent = document.getElementById("opera_board")
    // if the target of the click isn't the container nor a descendant of the container   opera       opera_bg     
    var a = document.getElementById("phoenix_bg").style.bottom
   if ((!container.is(e.target) && container.has(e.target).length === 0) && ((a == "4px"))) {
       opera_exit()
    //  alert(a)  
  
         history.back();     
    CURRENT_TAB = visitedPages[visitedPages.length - 1];
  history_back()
    }
});


$(function(){
var similarTab = document.getElementById('opera_bg');
let touchStartY = 0;

similarTab.addEventListener('touchstart', (event) => {
  touchStartY = event.touches[0].clientY;
});

similarTab.addEventListener('touchend', (event) => {
  var touchEndY = event.changedTouches[0].clientY;
  var deltaY = touchEndY - touchStartY;

  // Check if the div is scrolled to the top and the swipe is downward
  if (similarTab.scrollTop === 0 && deltaY > 0) {
    // Div is scrolled to the top and swiped downwards
       opera_exit()
      alert('modify this method')  
  
         history.back();     
    CURRENT_TAB = visitedPages[visitedPages.length - 1];
  history_back()
  }
});

  
})


  $(document).mouseup(function(e) {
    var container = $("#create_newsbg");
    // if the target of the click isn't the container nor a descendant of the container
    if (!container.is(e.target) && container.has(e.target).length === 0) 
    {
     container.slideUp()
    }
});
 $("#create_newsexit").click(function(){
     $("#create_newsbg").slideUp()
   
 })
  $("#channel_searchbtn").click(function(){
 //   document.querySelector('.film_subtabs').style.marginTop = '100%';
    //document.getElementById('filmtab').style.marginBottom = '100%';
   // $("#chan_results").css({"height":"90vh"})
    
    document.getElementById("chan_input").focus()
    document.querySelector('.film_subtabs').style.marginRight = '100%';
      document.getElementById('chan_searchtab').style.width = '100%';
     PREVIOUS_TAB = CURRENT_TAB

  CURRENT_TAB = "chan_searchtab"

   
  history.pushState(null, null, null);
   visitedPages.push("chan_searchtab");
  })
  $("#chan_exit").click(function(){
    document.querySelector('.film_subtabs').style.marginRight = '0%';
      document.getElementById('chan_searchtab').style.width = '0%';
         history.back();     

    CURRENT_TAB = visitedPages[visitedPages.length - 1];

  history_back()
  })

 $("#enlarge_img").click(function(){
   // enlarge_contbg
  $("#enlarge_contbg").slideToggle()
  })

  $("#amen_exitbtn").click(function(){
     document.getElementById('amenities_bg').style.width = '0%';
        history.back();     
    CURRENT_TAB = visitedPages[visitedPages.length - 1];
  history_back()
  })
  
  $("#collecttab_btn").click(function(){
    $(".amentities_tabs").hide()
    $("#collection_tab").show()
    $(".amenities_controlbtns").removeClass("week_controlclass")
    $(this).addClass("week_controlclass")
  })
  $("#recomtab_btn").click(function(){
    $(".amentities_tabs").hide()
    $("#recom_tab").show()
    $(".amenities_controlbtns").removeClass("week_controlclass")
    $(this).addClass("week_controlclass")
  })
  $("#plisttab_btn").click(function(){
    $(".amentities_tabs").hide()
    $("#playlist_tab").show()
    $(".amenities_controlbtns").removeClass("week_controlclass")
    $(this).addClass("week_controlclass")
  })

  
   $(document).mouseup(function(e) {



    var container = $(".add_emaildivs");


    // if the target of the click isn't the container nor a descendant of the container
    if (!container.is(e.target) && container.has(e.target).length === 0) 
    {
        container.css({"bottom":"-300px"});
        
$(".content").removeClass("visible")
$(".chevron").removeClass("collapsed")
    document.getElementById('add_emailval').value = '';  
  document.getElementById('add_listval').value = '';  
    }
});
   
   
   
       /*
var toggleBtn = document.querySelectorAll('.toggle-btn');
var content = document.querySelectorAll('.content');
var chevron = document.querySelectorAll('.chevron');

toggleBtn.addEventListener('click', () => {
  content.classList.toggle('visible');
  chevron.classList.toggle('collapsed');
});
*/
var a = $(".toggle-btn")
var b = $(".content")
var c = $(".chevron")
a.click(function(){
  b.toggleClass("visible")
  c.toggleClass("collapsed")
})
$("#film_collectbtn").click(function(){
  overall_addcollect()
})
$("#film_listbtn").click(function(){
  overall_addlist()
})
$("#film_sharebtn").click(function(){
  overall_sharelist()
})
  var flag = true;
$("#opera_collectbtn").click(function(){ 
 // alert("fg")
 // add_remove()
//  collect        
  if (flag) {
    // Call first function
    add_remove();
    flag = false;
  } else {
    // Call second function
    add_remove();
    flag = true;
  }

})
$("#opera_bellbtn").click(function(){
  add_bookmark()
})
$("#opera_sharebtn").click(function(){
     document.getElementById("opera_bg").style.bottom = "-70%";
    
   overallexit_func()
  share_operafunc()
})
$("#opera_listbtn").click(function(){
  list_operafunc()
})
$("#opera_btn").click(function(){

     document.getElementById("opera_bg").style.bottom = "-70%";
       history.back();     
    CURRENT_TAB = visitedPages[visitedPages.length - 1];
  history_back()
  
   
  /*
    let btn = document.querySelector("#macro_inner");
    let duration = 1000;
  var myDiv = document.getElementById("major_bg");
  myDiv.classList.add("scroll-top");
  myDiv.scrollTop = 0;
  setTimeout(function() {
    myDiv.classList.remove("scroll-top");
  }, 500);
$("#macro_bg").addClass("shake_class") 
 setTimeout(() => {

$("#macro_bg").removeClass("shake_class") 
        }, 1000);
var parent = document.getElementById("cast_val")
parent.style.transform = 'translateX(0px)';

        let ripple = document.createElement("div");
        ripple.classList.add("rippled");

        ripple.style.left = 0 ;
        ripple.style.top = 0 ;
        ripple.style.animationDuration = duration+"ms";
        btn.appendChild(ripple);
        setTimeout(() => {
            btn.removeChild(ripple);
        }, duration);
  */
   overallexit_func()
  sendmovietooverall()
})
$("#phoenix_morebtn").click(function(){

     document.getElementById("phoenix_bg").style.bottom = "-70%";
     
  sendgrouptooverall()
})


  $(function(){
$("#office_addmoment").click(function(){
  var name = $("#m_profname").text()
  
  
  confirmthree_function(`Help contribute to ${name}`)
})   
  window.confirm_acceptfunc = function(){
      
  //  addmoment_func(`${data.id}`,'movies')  
      }
      window.confirm_declinefunc = function(){}
    
    
  });
  
  // moment   
  
     $(function(){
$("#office_addcloset").click(function(){
  var name = $("#closet_name").text()
  confirmfour_function(`Help contribute to ${name}'s profile`)
})
  window.confirm_posifunc = function(){
      
  //  addmoment_func(`${data.id}`,'movies')  
      }
      window.confirm_negafunc = function(){}
    
    
  });
var myTextArea = document.getElementById('blank_caption');

myTextArea.addEventListener('keyup', () => {
  if(myTextArea.value ==""){
   // alert(myTextArea.value)
  myTextArea.style.height = '15px';
  }
  else{
    
  myTextArea.style.height = 'auto';
  myTextArea.style.height = `${myTextArea.scrollHeight}px`;
  }
});

var myTextArea = document.getElementById('comment_text');

myTextArea.addEventListener('keyup', () => {
  if(myTextArea.value ==""){
   // alert(myTextArea.value)
  myTextArea.style.height = '15px';
  }
  else{
    
  myTextArea.style.height = 'auto';
  myTextArea.style.height = `${myTextArea.scrollHeight}px`;
  }
});



  $("#match_btn").click(function(){
          document.getElementById('viewtab').style.marginRight = '100%';
     document.getElementById('match_results').style.width = '100%';
     
  })
 $("#matchresults_exit").click(function(){
       document.getElementById('viewtab').style.marginRight = '0%';
     document.getElementById('match_results').style.width = '0%';
      
    })
    
$("#match_movbtn").click(function(){
      $(".match_controlbtns").removeClass("week_controlclass") 
      $(this).addClass("week_controlclass") 
      $(".match_resdivs").hide()
      $("#match_resmov").show()
    })
$("#match_serbtn").click(function(){
      $(".match_controlbtns").removeClass("week_controlclass") 
      $(this).addClass("week_controlclass") 
      $(".match_resdivs").hide()
      $("#match_resser").show()
    })
  $("#change_matchtype").click(function(){
  //  $("#change_matchdiv").slideDown()
    document.getElementById('change_matchdiv').style.minHeight = '30vh';
  })
  $("#change_matchdiv").on("mousemove", function(e){
    
    document.getElementById('change_matchdiv').style.minHeight = '30vh';
    })
   $(document).mouseup(function(e) 
{

    var container = $("#change_matchdiv");

    // if the target of the click isn't the container nor a descendant of the container
    if (!container.is(e.target) && container.has(e.target).length === 0) 
    {
       document.getElementById('change_matchdiv').style.minHeight = '0';
       document.getElementById('change_matchdiv').style.height = '0';
    }
});
  $(document).mouseup(function(e) {

    var container = $("#change_matchdiv");

    // if the target of the click isn't the container nor a descendant of the container
    if (!container.is(e.target) && container.has(e.target).length === 0) 
    {
        var div = document.getElementById("share_playlistdiv")
   div.style.bottom = "-50%";  
    }
})

$("#channel_formexit").click(function(){
  
    document.getElementById("channel_formbg").classList.remove("drop");
})

 $("#blank_smsexit").click(function(){
   $("#blank_smscover").slideUp()
    var input = document.getElementById("blank_sms");
  input.value = ""; 
    setTimeout(function() {
    document.getElementById("blank_smsparent").innerHTML = '';
      
    }, 1000); // 4000 milliseconds = 4 seconds
 })

  $("#sort_btn").click(function(){
    $("#sort_div").slideDown()
  })
 $(document).mouseup(function(e) {

    var container = $("#sort_div");

    // if the target of the click isn't the container nor a descendant of the container
    if (!container.is(e.target) && container.has(e.target).length === 0) 
    {
      
    container.slideUp()
    }
 })
 /*
 $(document).mouseup(function(e) {

    var container = $("#tweet_hashtab");

    // if the target of the click isn't the container nor a descendant of the container
    if (!container.is(e.target) && container.has(e.target).length === 0) 
    {
      
    container.slideUp()
    }
 })
 */
 
 // Get all the buttons with the class "sort_btns"
var buttons = document.querySelectorAll('.sort_btns');

// Attach click event listeners to each button
buttons.forEach(function(button) {
  button.addEventListener('click', function() {
    buttons.forEach(function(btn) {
      btn.classList.remove('selected_sort');
    });

    button.classList.add('selected_sort');
    $("#sort_div").slideUp()
  });
});

  $("#crew_workbtn").click(function(){
     $(this).addClass("week_controlclass")
    $("#crew_postbtn").removeClass("week_controlclass")
    document.getElementById("crew_workdiv").style.width = '100%'
    document.getElementById("crew_postdiv").style.width = '0'
   

  var a = (visitedPages[visitedPages.length - 1])
  if(a == "crew_postdiv"){
//    alert("not posted")
    return false ;
  }
  else{
     PREVIOUS_TAB = CURRENT_TAB

  CURRENT_TAB = "crew_postdiv"
  history.pushState(null, null, null);
   visitedPages.push("crew_postdiv");
//   alert("posted")
  }
//  visitedPages[currentStateIndex] = newURL;
  
  })
  $("#crew_postbtn").click(function(){
    $(this).addClass("week_controlclass")
    $("#crew_workbtn").removeClass("week_controlclass")
    document.getElementById("crew_postdiv").style.width = '100%'
    document.getElementById("crew_workdiv").style.width = '0'
      var a = (visitedPages[visitedPages.length - 1])
  if(a == "crew_postdiv"){
    //alert("not posted ")
    return false ;
  }
  else{
     PREVIOUS_TAB = CURRENT_TAB

  CURRENT_TAB = "crew_postdiv"
  history.pushState(null, null, null);
   visitedPages.push("crew_postdiv");
//   alert("posted")
  }
  })
  
  $("#season_combtn").click(function(){
     document.getElementById("season_commentdiv").style.width = '100%';
      PREVIOUS_TAB = CURRENT_TAB

  CURRENT_TAB = "season_commentdiv"

   
  history.pushState(null, null, null);
   visitedPages.push("season_commentdiv")  ;
  })
  
  $("#b_board1").click(function(){
     document.getElementById("page_bg").style.width = '100%';
      PREVIOUS_TAB = CURRENT_TAB

  CURRENT_TAB = "page_bg"

   
  history.pushState(null, null, null);
   visitedPages.push("page_bg")  ;
  })
  
     $("#tag_movbtn").click(function(){
          document.getElementById("long_commtab").style.width = '0';
          document.getElementById("long_reviewtab").style.width = '0';
   
        // $(".tag_controlbtns").css({"background-color":"#4444"})
     // $(this).css({"background-color":"#e67e22"})
   //  $("#long_bottombg").show()
     })
     
     $("#tag_serbtn").click(function(){
   //alert("")
    document.getElementById("long_commtab").style.width = '0';
    document.getElementById("long_reviewtab").style.width = '100%';
       PREVIOUS_TAB = CURRENT_TAB

  CURRENT_TAB = "long_reviewtab"

   
  history.pushState(null, null, null);
   visitedPages.push("long_reviewtab");
     })
     
     $("#tag_anmovbtn").click(function(){
  
    document.getElementById("long_reviewtab").style.width = '0';
    document.getElementById("long_commtab").style.width = '100%';
       PREVIOUS_TAB = CURRENT_TAB

  CURRENT_TAB = "long_commtab"

   
  history.pushState(null, null, null);
   visitedPages.push("long_commtab");
    
     })
 
  $("#relative_exit").click(function(){
    document.getElementById("relative_bg").classList.remove("drop");      
    history.back();     

    CURRENT_TAB = visitedPages[visitedPages.length - 1];
  history_back()    
  })
  $("#trending_exit").click(function(){
    document.getElementById("trending_bg").classList.remove("drop");      
    history.back();     

    CURRENT_TAB = visitedPages[visitedPages.length - 1];
  history_back()    
  })
  
  $("#trending_value").click(function(){
     document.getElementById("trending_bg").classList.add("drop");    
     PREVIOUS_TAB = CURRENT_TAB

  CURRENT_TAB = "trending_bg"

   
  history.pushState(null, null, null);
   visitedPages.push("trending_bg");
  })
  
  
    $("#closet_listbtn").click(function(){
      $(this).addClass("closet_topicclass")
      $("#closet_commbtn").removeClass("closet_topicclass")
 //     $("#closet_listdiv").css({"display": "flex"})
//      $("#closet_commdiv").css({"display": "none"})
      
    })
    $("#closet_commbtn").click(function(){
      $(this).addClass("closet_topicclass")
      $("#closet_listbtn").removeClass("closet_topicclass")
//      $("#closet_commdiv").css({"display": "flex"})
 //     $("#closet_listdiv").css({"display": "none"})
      
    })
 
  $("#closet_exit").click(function(){
      document.getElementById("closet_bg").style.width = '0';    
    $("#closet_listbtn").click()
      $("#closet_body").css({"position":"relative", "overflow-y":"visible"})
    
       history.back();     

    CURRENT_TAB = visitedPages[visitedPages.length - 1];

  history_back()
  
    $("#closet_birthdate").text("")
    $("#closet_birthplace").text("")
    $("#closet_listdiv").text("")
    $("#closet_describe").text("")
    $("#closet_aka").text("")
    $("#closet_dept").text("")
    $("#closet_name").text("")
    $("#closet_image").css({"background-image":""})
    $("#closet_deathdiv").hide()
    $("#closet_webdiv").hide()
    
    
  })

  $("#club_formnav").click(function(){
    $("#group_optionbg").slideDown()
    $("#group_optionbg").css({"display":"flex"})
  })
   $(document).mouseup(function(e) {

    var container = $("#group_optionbg");

    // if the target of the click isn't the container nor a descendant of the container
    if (!container.is(e.target) && container.has(e.target).length === 0) 
    {
       container.hide()
    }
})
  
 $("#public_groupbtn").click(function(){
   $("#club_anstype").text("Public")
   $("#group_optionbg").hide()
 })
 $("#private_groupbtn").click(function(){
   $("#club_anstype").text("Private")
   $("#group_optionbg").hide()
 })
  $("#status_bg").click(function(){
     document.getElementById("gallery_bg").classList.add ("drop");
     PREVIOUS_TAB = CURRENT_TAB

  CURRENT_TAB = "gallery_bg"

  history.pushState(null, null, null);
   visitedPages.push("gallery_bg");
  })
$("#grouplist_exit").click(function(){
  document.getElementById("mygroup_list").classList.remove ("drop");
     history.back();     

    CURRENT_TAB = visitedPages[visitedPages.length - 1];

  history_back()
})
$("#whatsapp_exit").click(function(){
  // if you update also update for the one in history
 removeSelectedClass();
document.getElementById("whatsapp_bg").classList.remove ("drop");
   if(typeof clearshareid != 'function'){
   window.clearshareid = function(){
    return false;
   };
}
     clearshareid()
  $("#whatsapp_count").text("None Selected")
  document.getElementById("whatsapp_input").innerHTML = ""
  document.getElementById("whatsapp_bot").innerHTML = ""
  $("#whatsapp_send").hide()
     history.back();     

    CURRENT_TAB = visitedPages[visitedPages.length - 1];

  history_back()
})
  
  
//  $("#match_btn").click(function(){})
})
// miscellaneous functions   
function video_func(){
  // alert("esther")
  
}


   var toggle=0;
function handleClick(doc) {
    doc=document.getElementById("sms_morebtn");
    if (toggle==1) {
        toggle=false;
        $("#sms_butt").css({"height":"0px"})
    } else {
        toggle=true;
         $("#sms_butt").show()
         $("#sms_butt").css({"height":"10vh"})
  }  
}

function getTimeDistance(dateStr, timeStr) {
  const currentDate = new Date();
  const dateArray = dateStr.toString().split(' | ');
  const year = dateArray[0];
  const month = parseInt(dateArray[1]) - 1;
  const day = dateArray[2];
  const timeArray = timeStr.toString().split(':');
  const hour = timeArray[0];
  const minute = timeArray[1];
  const second = timeArray[2];
  const providedDate = new Date(year, month, day, hour, minute, second);

  const timeDifference = currentDate - providedDate;
  const secondsDifference = Math.floor(timeDifference / 1000);
  const minutesDifference = Math.floor(secondsDifference / 60);
  const hoursDifference = Math.floor(minutesDifference / 60);
  const daysDifference = Math.floor(hoursDifference / 24);
  const monthsDifference = Math.floor(daysDifference / 30);
  const yearsDifference = Math.floor(monthsDifference / 12);

  if (yearsDifference > 0) {
    return yearsDifference === 1 ? '1 year ago' : `${yearsDifference} years ago`;
  } else if (monthsDifference > 0) {
    return monthsDifference === 1 ? '1 month ago' : `${monthsDifference} months ago`;
  } else if (daysDifference > 0) {
    return daysDifference === 1 ? '1 day ago' : `${daysDifference} days ago`;
  } else if (hoursDifference > 0) {
    return hoursDifference === 1 ? '1 hour ago' : `${hoursDifference} hours ago`;
  } else if (minutesDifference > 0) {
    return minutesDifference === 1 ? '1 minute ago' : `${minutesDifference} minutes ago`;
  } else {
    return secondsDifference === 1 ? '1 second ago' : `${secondsDifference} seconds ago`;
  }
}

//   pulll   drag    refresh       $
/*
$(function(){

var startY; // Variable to store the starting Y coordinate of the touch event
var point = {}
var isDragging = false; // Variable to track if the div is being dragged
var threshold = 400; // Threshold value for the minimum pull distance to trigger refresh action
 var deltaY;
  var loader = document.querySelector("#loader");
  var msg = document.querySelector("#follow_tabinner");
document.getElementById("follow_tabinner").addEventListener("touchstart", function(event) {
  // Store the starting Y coordinate of the touch event
  startY = event.touches[0].clientY;
   point.y = event.targetTouches[0].clientY;
   loader.className = "";
  // Set isDragging to false initially
  isDragging = false;
});

document.getElementById("follow_tabinner").addEventListener("touchmove", function(event) {
  // Calculate the distance between the current Y coordinate and the starting Y coordinate
   deltaY = event.touches[0].clientY - startY;
  
  // If the div is scrolled to the top and the user is dragging down, prevent default scrolling
  if (this.scrollTop === 0 && deltaY > 0) {
    event.preventDefault();
    
    // If the user surpasses the threshold, set isDragging to true
    if (deltaY > threshold) {
      isDragging = true;
    }
  }
});

document.getElementById("follow_tabinner").addEventListener("touchend", function(event) {
  // If the div was dragged down and released, trigger the refresh action
  if (isDragging) {
    // Your refresh action here
    
        var abd =    deltaY.toString()- threshold.toString()
        abd+ "px";
       // console.log (abd)
        //var abd = point.y-50-startY + "px";
        loader.style.top = abd
      loader.style.transform = "rotate(" + startY*10 + "deg)";
      loader.className = "moveup";
   loader.style.opacity = 1;
   msg.style.opacity = 0.5;
   
  retrieve_follow()
    // Reset isDragging to false
    isDragging = false;
 setTimeout(stopLoader, 2000);
  }
});


function stopLoader() {
    loader.className = "fadegone";
     loader.style.opacity = 0;
     msg.style.opacity = 1;
}


})
*/


  // Global variables to keep track of the current page and total number of movies  latest    popular    fetchMoreImages    fetchPopularImages   
  $(function(){
    
var currentPage = 1;
var moviesPerPage = 15;
var totalMovies = 0;

// Function to fetch more images (movies) from TMDB API
function fetchPopularImages() {
  // Calculate the total number of pages needed to fetch the desired number of movies
  var totalPages = Math.ceil(totalMovies / moviesPerPage);
  
  // Check if all movies have been fetched already
  if (currentPage > totalPages) {
 //   console.log('All movies have been fetched!');
    return;
  }
  
  // Fetch popular movies from TMDB API
  var bedy = `https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US&include_adult=false&page=${currentPage}`
 // alert(bedy)
  fetch(bedy)
    .then(response => response.json())
    .then(data => {
      var popularLateDiv = document.getElementById('popular_late');
      // popular_late     
     
      data.results.forEach(movie => {
    var a = document.createElement("div")
   
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
     $(a).addClass("late_kids")
     $(a).appendTo("#popular_late")
     $(a).click(function(){
       open_opera (movie.title, movie.id, bedy)
     })
      });
      
      // Increment the current page counter
      currentPage++;
    })
    .catch(error => {
     // console.error('Error fetching movies:', error);
    });
    
  // Fetch popular tv from TMDB API
  var bed = (`https://api.themoviedb.org/3/tv/popular?api_key=${API_KEY}&language=en-US&include_adult=false&page=${currentPage}`)
 // alert(bed)
  fetch(bed)
    .then(response => response.json())
    .then(data => {
      var popularLateDiv = document.getElementById('popular_late');
      data.results.forEach(movie => {
        // Create an image element for each movie
       var a = document.createElement("div")
   //  a.style.backgroundImage = "url('https://image.tmdb.org/t/p/w500${"+backdrop_path+"}')";
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
     $(a).addClass("late_kids")
     $(a).appendTo("#popular_late")
     $(a).click(function (){
     //  alert(bed)
    //   console.log(movie)
       open_opera(movie.name, movie.id, bed)
     })
      });
      
      // Increment the current page counter
     // currentPage++;
    })
    .catch(error => {
   //   console.error('Error fetching movies:', error);
    });
}

// Wrap the code inside DOMContentLoaded event listener
$(function(){
  // Fetch the total number of movies from TMDB API to calculate the total number of pages
  fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US`)
    .then(response => response.json())
    .then(data => {
      totalMovies = data.total_results;
      
      fetchPopularImages();
    })
    .catch(error => {
    //  console.error('Error fetching total number of movies:', error);
    });

  // Add scroll event listener to "popular_late" div
  document.getElementById('popular_late').addEventListener('scroll', function(event) {
    // Check if the user has scrolled to the end of the div
    if (event.target.scrollLeft + event.target.clientWidth + 1 >= event.target.scrollWidth) {
     
      fetchPopularImages();
    }
  });

});

})

  $(function(){

    

var currentPage = 1;
var moviesPerPage = 15;
var totalMovies = 0;

// Function to fetch more images (movies) from TMDB API
function fetchUpcomingImages() {
  
  
  
  // Calculate the total number of pages needed to fetch the desired number of movies
  var totalPages = Math.ceil(totalMovies / moviesPerPage);
  
  // Check if all movies have been fetched already
  if (currentPage > totalPages) {
 //   console.log('All movies have been fetched!');
    return;
  }
  
  
  var currentDate = new Date();
  var currentYear = currentDate.getFullYear();
  var currentMonth = currentDate.getMonth();
  
  // Calculate the date for the first format: currentyear - fourth month after current month - first day of the month
  var fourthMonthAfterCurrent = (currentMonth + 4) % 12; // Ensure the month stays within the range of 0-11
  var formattedFirstDate = `${currentYear}-${('0' + (fourthMonthAfterCurrent + 1)).slice(-2)}-01`;

  // Calculate the date for the second format: next year - first month - first day of the month
  var nextYear = currentYear + 1;
  var formattedSecondDate = `${nextYear}-01-01`;


 // var body = `https://api.themoviedb.org/3/discover/tv?with_genres=16&api_key=${API_KEY}&sort_by=revenue.desc&include_adult=false&page=${currentPage}`
 var body = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&release_date.gte=${formattedFirstDate}&release_date.lte=${formattedSecondDate}&page=${currentPage}`
 // alert(body)
  fetch(body)
    .then(response => response.json())
    .then(data => {
      var popularLateDiv = document.getElementById('upcome_late');
   //  console.log(data )
      data.results.forEach(movie => {
    var a = document.createElement("div")
   
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
     $(a).addClass("late_kids")
     $(a).appendTo("#upcome_late")
     $(a).click(function(){
     //  alert(movie.media_type)
       open_opera (movie.title, movie.id, body)
     })
      });
      
      // Increment the current page counter
      currentPage++;
    })
    .catch(error => {
     // console.error('Error fetching movies:', error);
    });
    
}

// Wrap the code inside DOMContentLoaded event listener
$(function(){
  var currentDate = new Date();
  var currentYear = currentDate.getFullYear();
  var currentMonth = currentDate.getMonth();
  
  // Calculate the date for the first format: currentyear - fourth month after current month - first day of the month
  var fourthMonthAfterCurrent = (currentMonth + 4) % 12; // Ensure the month stays within the range of 0-11
  var formattedFirstDate = `${currentYear}-${('0' + (fourthMonthAfterCurrent + 1)).slice(-2)}-01`;

  // Calculate the date for the second format: next year - first month - first day of the month
  var nextYear = currentYear + 1;
  var formattedSecondDate = `${nextYear}-01-01`;


  // Fetch the total number of movies from TMDB API to calculate the total number of pages
  fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&release_date.gte=${formattedFirstDate}&release_date.lte=${formattedSecondDate}`)
    .then(response => response.json())
    .then(data => {
      totalMovies = data.total_results;
      
      fetchUpcomingImages();
    })
    .catch(error => {
    //  console.error('Error fetching total number of movies:', error);
    });

  document.getElementById('upcome_late').addEventListener('scroll', function(event) {
    // Check if the user has scrolled to the end of the div
    if (event.target.scrollLeft + event.target.clientWidth + 1 >= event.target.scrollWidth) {
     
      fetchUpcomingImages();
    }
  });

});

})  // end of latest 
// Function to fetch more images (movies) from TMDB API

  $(function(){

    

var currentPage = 1;
var moviesPerPage = 15;
var totalMovies = 0;

function fetchAmericaImages() {
  // Calculate the total number of pages needed to fetch the desired number of movies
  var totalPages = Math.ceil(totalMovies / moviesPerPage);
  
  // Check if all movies have been fetched already
  if (currentPage > totalPages) {
 //   console.log('All movies have been fetched!');
    return;
  }
  
  
  var bedy = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&region=US&sort_by=popularity.desc&include_adult=false&with_original_language=en&page=${currentPage}`
  //  var bedy = `https://api.themoviedb.org/3/movie/upcoming?api_key=${API_KEY}&language=en-US&page=${currentPage}`
  fetch(bedy)
    .then(response => response.json())
    .then(data => {
      var popularLateDiv = document.getElementById('hol_woodmov');  
      data.results.forEach(movie => {
    var a = document.createElement("div")
   
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
     $(a).addClass("late_kids")
     $(a).appendTo("#hol_woodmov")
     $(a).click(function(){
       open_opera (movie.title, movie.id, bedy)
     })
      });
      
      // Increment the current page counter
      currentPage++;
    })
    .catch(error => {
     // console.error('Error fetching movies:', error);
    });
    
}

// Wrap the code inside DOMContentLoaded event listener
$(function(){
  // Fetch the total number of movies from TMDB API to calculate the total number of pages
  fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&region=US&sort_by=popularity.desc&include_adult=false&with_original_language=en`)
    .then(response => response.json())
    .then(data => {
      totalMovies = data.total_results;
      
      fetchAmericaImages();
    })
    .catch(error => {
    //  console.error('Error fetching total number of movies:', error);
    });

  document.getElementById('hol_woodmov').addEventListener('scroll', function(event) {
    // Check if the user has scrolled to the end of the div
    if (event.target.scrollLeft + event.target.clientWidth + 1 >= event.target.scrollWidth) {
     
      fetchAmericaImages();
    }
  });

});

})  // end of latest 
  $(function(){

    

var currentPage = 1;
var moviesPerPage = 15;
var totalMovies = 0;

// Function to fetch more images (movies) from TMDB API
function fetchBritishImages() {
  // Calculate the total number of pages needed to fetch the desired number of movies
  var totalPages = Math.ceil(totalMovies / moviesPerPage);
  
  // Check if all movies have been fetched already
  if (currentPage > totalPages) {
 //   console.log('All movies have been fetched!');
    return;
  }
  
  
  var bedy = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&region=GB&page=${currentPage}`
  //  var bedy = `https://api.themoviedb.org/3/movie/upcoming?api_key=${API_KEY}&language=en-US&page=${currentPage}`
  fetch(bedy)
    .then(response => response.json())
    .then(data => {
      var popularLateDiv = document.getElementById('uk_woodmov');  
      data.results.forEach(movie => {
    var a = document.createElement("div")
   
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
     $(a).addClass("late_kids")
     $(a).appendTo("#uk_woodmov")
     $(a).click(function(){
       open_opera (movie.title, movie.id, bedy)
     })
      });
      
      // Increment the current page counter
      currentPage++;
    })
    .catch(error => {
     // console.error('Error fetching movies:', error);
    });
    
}

// Wrap the code inside DOMContentLoaded event listener
$(function(){
  // Fetch the total number of movies from TMDB API to calculate the total number of pages
  fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&region=GB&page=${currentPage}`)
    .then(response => response.json())
    .then(data => {
      totalMovies = data.total_results;
      
      fetchBritishImages();
    })
    .catch(error => {
    //  console.error('Error fetching total number of movies:', error);
    });

  document.getElementById('uk_woodmov').addEventListener('scroll', function(event) {
    // Check if the user has scrolled to the end of the div
    if (event.target.scrollLeft + event.target.clientWidth + 1 >= event.target.scrollWidth) {
     
      fetchBritishImages();
    }
  });

});
  })  // end of latest 
  
  $(function(){

    

var currentPage = 1;
var moviesPerPage = 15;
var totalMovies = 0;

// Function to fetch more images (movies) from TMDB API
function fetchShortImages() {
  // Calculate the total number of pages needed to fetch the desired number of movies
  var totalPages = Math.ceil(totalMovies / moviesPerPage);
  
  // Check if all movies have been fetched already
  if (currentPage > totalPages) {
 //   console.log('All movies have been fetched!');
    return;
  }
     
  var bedy = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_keywords=263548&include_adult=false&sort_by=popularity.desc&page=${currentPage}`;   
// var bedy = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_original_language=en&sort_by=popularity.desc&include_adult=false&include_video=true&with_runtime.lte=40&page=${currentPage}`;   
//The commented url is the real one but this first one for some reason just produces old ass series 
 

  fetch(bedy)
    .then(response => response.json())
    .then(data => {
      var popularLateDiv = document.getElementById('short_late');  
      data.results.forEach(movie => {
    var a = document.createElement("div")
   
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
     $(a).addClass("late_kids")
     $(a).appendTo("#short_late")
     $(a).click(function(){
       open_opera (movie.title, movie.id, bedy)
     })
      });
      
      // Increment the current page counter
      currentPage++;
    })
    .catch(error => {
     // console.error('Error fetching movies:', error);
    });
    
}

// Wrap the code inside DOMContentLoaded event listener
$(function(){
  // Fetch the total number of movies from TMDB API to calculate the total number of pages
  fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_keywords=263548&include_adult=false&sort_by=popularity.desc`)
    .then(response => response.json())
    .then(data => {
      totalMovies = data.total_results;
      
      fetchShortImages();
    })
    .catch(error => {
    //  console.error('Error fetching total number of movies:', error);
    });

  document.getElementById('short_late').addEventListener('scroll', function(event) {
    // Check if the user has scrolled to the end of the div
    if (event.target.scrollLeft + event.target.clientWidth + 1 >= event.target.scrollWidth) {
     
      fetchShortImages();
    }
  });

});
  })  // end of latest 
  
  $(function(){

    

var currentPage = 1;
var moviesPerPage = 15;
var totalMovies = 0;

// Function to fetch more images (movies) from TMDB API
function fetchMiniserImages() {
  // Calculate the total number of pages needed to fetch the desired number of movies
  var totalPages = Math.ceil(totalMovies / moviesPerPage);
  
  // Check if all movies have been fetched already
  if (currentPage > totalPages) {
 //   console.log('All movies have been fetched!');
    return;
  }
  
  
 var bedy = `https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&with_keywords=11162&include_adult=false&sort_by=popularity.desc&page=${currentPage}`;   

  //  var bedy = `https://api.themoviedb.org/3/movie/upcoming?api_key=${API_KEY}&language=en-US&page=${currentPage}`
  fetch(bedy)
    .then(response => response.json())
    .then(data => {
      var popularLateDiv = document.getElementById('miniser_late');  
      data.results.forEach(movie => {
    var a = document.createElement("div")
   
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
     $(a).addClass("late_kids")
     $(a).appendTo("#miniser_late")
     $(a).click(function(){
       open_opera (movie.title, movie.id, bedy)
     })
      });
      
      // Increment the current page counter
      currentPage++;
    })
    .catch(error => {
     // console.error('Error fetching movies:', error);
    });
    
}

// Wrap the code inside DOMContentLoaded event listener
$(function(){
  // Fetch the total number of movies from TMDB API to calculate the total number of pages
  fetch(`https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&with_keywords=11162&include_adult=false&sort_by=popularity.desc`)
    .then(response => response.json())
    .then(data => {
      totalMovies = data.total_results;
      
      fetchMiniserImages();
    })  
    .catch(error => {
    //  console.error('Error fetching total number of movies:', error);
    });

  document.getElementById('miniser_late').addEventListener('scroll', function(event) {
    // Check if the user has scrolled to the end of the div
    if (event.target.scrollLeft + event.target.clientWidth + 1 >= event.target.scrollWidth) {
     
      fetchMiniserImages();
    }
  });

});
  })  // end of latest 
  
  $(function(){

    

var currentPage = 1;
var moviesPerPage = 15;
var totalMovies = 0;

// Function to fetch more images (movies) from TMDB API
function fetchMarvelImages() {
  // Calculate the total number of pages needed to fetch the desired number of movies
  var totalPages = Math.ceil(totalMovies / moviesPerPage);
  
  // Check if all movies have been fetched already
  if (currentPage > totalPages) {
 //   console.log('All movies have been fetched!');
    return;
  }
  
  
 var bedy = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_keywords=180547&include_adult=false&sort_by=popularity.desc&page=${currentPage}`;   

  //  var bedy = `https://api.themoviedb.org/3/movie/upcoming?api_key=${API_KEY}&language=en-US&page=${currentPage}`
  fetch(bedy)
    .then(response => response.json())
    .then(data => {
      var popularLateDiv = document.getElementById('marvel_late');  
      data.results.forEach(movie => {
    var a = document.createElement("div")
   
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
     $(a).addClass("late_kids")
     $(a).appendTo("#marvel_late")
     $(a).click(function(){
       open_opera (movie.title, movie.id, bedy)
     })
      });
      
      // Increment the current page counter
      currentPage++;
    })
    .catch(error => {
     // console.error('Error fetching movies:', error);
    });
    
}
function fetchMarvelImages2() {
  // Calculate the total number of pages needed to fetch the desired number of movies
  var totalPages = Math.ceil(totalMovies / moviesPerPage);
  
  // Check if all movies have been fetched already
  if (currentPage > totalPages) {
 //   console.log('All movies have been fetched!');
    return;
  }
  
  
 var bedy = `https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&with_keywords=180547&include_adult=false&sort_by=popularity.desc&page=${currentPage}`;   

  //  var bedy = `https://api.themoviedb.org/3/movie/upcoming?api_key=${API_KEY}&language=en-US&page=${currentPage}`
  fetch(bedy)
    .then(response => response.json())
    .then(data => {
      var popularLateDiv = document.getElementById('marvel_late');  
      data.results.forEach(movie => {
    var a = document.createElement("div")
   
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
     $(a).addClass("late_kids")
     $(a).appendTo("#marvel_late")
     $(a).click(function(){
       open_opera (movie.title, movie.id, bedy)
     })
      });
      
      // Increment the current page counter
  //    currentPage++;
    })
    .catch(error => {
     // console.error('Error fetching movies:', error);
    });
    
}

// Wrap the code inside DOMContentLoaded event listener
$(function(){
  // Fetch the total number of movies from TMDB API to calculate the total number of pages
  fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_keywords=180547&include_adult=false&sort_by=popularity.desc`)
    .then(response => response.json())
    .then(data => {
      totalMovies = data.total_results;
      
      fetchMarvelImages();
      fetchMarvelImages2();
    })  
    .catch(error => {
    //  console.error('Error fetching total number of movies:', error);
    });

  document.getElementById('marvel_late').addEventListener('scroll', function(event) {
    // Check if the user has scrolled to the end of the div
    if (event.target.scrollLeft + event.target.clientWidth + 1 >= event.target.scrollWidth) {
     
      fetchMarvelImages();
      fetchMarvelImages2();
    }
  });

});
  })  // end of latest 
  
  $(function(){

    

var currentPage = 1;
var moviesPerPage = 15;
var totalMovies = 0;

// Function to fetch more images (movies) from TMDB API
function fetchDcImages() {
  // Calculate the total number of pages needed to fetch the desired number of movies
  var totalPages = Math.ceil(totalMovies / moviesPerPage);
  
  // Check if all movies have been fetched already
  if (currentPage > totalPages) {
 //   console.log('All movies have been fetched!');
    return;
  }
  
  
 var bedy = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_keywords=229266&include_adult=false&sort_by=popularity.desc&page=${currentPage}`;   

  //  var bedy = `https://api.themoviedb.org/3/movie/upcoming?api_key=${API_KEY}&language=en-US&page=${currentPage}`
  // alert(bedy)
  fetch(bedy)
    .then(response => response.json())
    .then(data => {
      var popularLateDiv = document.getElementById('dc_late');  
      data.results.forEach(movie => {
    var a = document.createElement("div")
   
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
     $(a).addClass("late_kids")
     $(a).appendTo("#dc_late")
     $(a).click(function(){
       open_opera (movie.title, movie.id, bedy)
     })
      });
      
      // Increment the current page counter
      currentPage++;
    })
    .catch(error => {
     // console.error('Error fetching movies:', error);
    });
    
}
function fetchDcImages2() {
  // Calculate the total number of pages needed to fetch the desired number of movies
  var totalPages = Math.ceil(totalMovies / moviesPerPage);
  
  // Check if all movies have been fetched already
  if (currentPage > totalPages) {
 //   console.log('All movies have been fetched!');
    return;
  }
  
  
 var bedy = `https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&with_keywords=229266&include_adult=false&sort_by=popularity.desc&page=${currentPage}`;   

  //  var bedy = `https://api.themoviedb.org/3/movie/upcoming?api_key=${API_KEY}&language=en-US&page=${currentPage}`
  fetch(bedy)
    .then(response => response.json())
    .then(data => {
      var popularLateDiv = document.getElementById('dc_late');  
      data.results.forEach(movie => {
    var a = document.createElement("div")
   
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
     $(a).addClass("late_kids")
     $(a).appendTo("#dc_late")
     $(a).click(function(){
       open_opera (movie.title, movie.id, bedy)
     })
      });
      
      // Increment the current page counter
  //    currentPage++;
    })
    .catch(error => {
     // console.error('Error fetching movies:', error);
    });
    
}

// Wrap the code inside DOMContentLoaded event listener
$(function(){
  // Fetch the total number of movies from TMDB API to calculate the total number of pages
  fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_keywords=229266&include_adult=false&sort_by=popularity.desc`)
    .then(response => response.json())
    .then(data => {
      totalMovies = data.total_results;
    //  alert('')
      fetchDcImages();
      fetchDcImages2();
    })  
    .catch(error => {
    //  console.error('Error fetching total number of movies:', error);
    });

  document.getElementById('dc_late').addEventListener('scroll', function(event) {
    // Check if the user has scrolled to the end of the div
    if (event.target.scrollLeft + event.target.clientWidth + 1 >= event.target.scrollWidth) {
     
      fetchDcImages();
      fetchDcImages2();
    }
  });

});
  })  // end of latest 
  
  $(function(){

    

var currentPage = 1;
var moviesPerPage = 15;
var totalMovies = 0;

// Function to fetch more images (movies) from TMDB API
function fetchNickImages() {
  // Calculate the total number of pages needed to fetch the desired number of movies
  var totalPages = Math.ceil(totalMovies / moviesPerPage);
  
  // Check if all movies have been fetched already
  if (currentPage > totalPages) {
//  alert("1")
 //   console.log('All movies have been fetched!');
    return;
  }
  
 var bedy = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_companies=5371&include_adult=false&sort_by=popularity.desc&page=${currentPage}`;   

  //  var bedy = `https://api.themoviedb.org/3/movie/upcoming?api_key=${API_KEY}&language=en-US&page=${currentPage}`
  // alert(bedy)
  fetch(bedy)
    .then(response => response.json())
    .then(data => {
      var popularLateDiv = document.getElementById('nick_late');  
      data.results.forEach(movie => {
    var a = document.createElement("div")
   
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
     $(a).addClass("late_kids")
     $(a).appendTo("#nick_late")
     $(a).click(function(){
       open_opera (movie.title, movie.id, bedy)
     })
      });
      
      // Increment the current page counter
      currentPage++;
    })
    .catch(error => {
     // console.error('Error fetching movies:', error);
    });
    
}
function fetchNickImages2() {
  // Calculate the total number of pages needed to fetch the desired number of movies
  var totalPages = Math.ceil(totalMovies / moviesPerPage);
  
  // Check if all movies have been fetched already
  if (currentPage > totalPages) {
 //   console.log('All movies have been fetched!');
    return;
  }
  
  
 var bedy = `https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&with_companies=5371&include_adult=false&sort_by=popularity.desc&page=${currentPage}`;   

  //  var bedy = `https://api.themoviedb.org/3/movie/upcoming?api_key=${API_KEY}&language=en-US&page=${currentPage}`
  fetch(bedy)
    .then(response => response.json())
    .then(data => {
      var popularLateDiv = document.getElementById('nick_late');  
      data.results.forEach(movie => {
    var a = document.createElement("div")
   
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
     $(a).addClass("late_kids")
     $(a).appendTo("#nick_late")
     $(a).click(function(){
       open_opera (movie.title, movie.id, bedy)
     })
      });
      
      // Increment the current page counter
  //    currentPage++;
    })
    .catch(error => {
     // console.error('Error fetching movies:', error);
    });
    
}

// Wrap the code inside DOMContentLoaded event listener
$(function(){
  // Fetch the total number of movies from TMDB API to calculate the total number of pages
  fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_companies=5371&include_adult=false&sort_by=popularity.desc`)
    .then(response => response.json())
    .then(data => {
      totalMovies = data.total_results;
      fetchNickImages();
      fetchNickImages2();
    //  console.log (data)    
    //  alert(totalMovies)
    })  
    .catch(error => {
    //  console.error('Error fetching total number of movies:', error);
    });

  document.getElementById('nick_late').addEventListener('scroll', function(event) {
    // Check if the user has scrolled to the end of the div
    if (event.target.scrollLeft + event.target.clientWidth + 1 >= event.target.scrollWidth) {
     
      fetchNickImages();
      fetchNickImages2();
    }
  });

});
  })  // end of latest 
  
  $(function(){

    

var currentPage = 1;
var moviesPerPage = 15;
var totalMovies = 0;

// Function to fetch more images (movies) from TMDB API
function fetchDcImages() {
  // Calculate the total number of pages needed to fetch the desired number of movies
  var totalPages = Math.ceil(totalMovies / moviesPerPage);
  
  // Check if all movies have been fetched already
  if (currentPage > totalPages) {
 //   console.log('All movies have been fetched!');
    return;
  }
  
  
 var bedy = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_keywords=229266&include_adult=false&sort_by=popularity.desc&page=${currentPage}`;   

  //  var bedy = `https://api.themoviedb.org/3/movie/upcoming?api_key=${API_KEY}&language=en-US&page=${currentPage}`
  // alert(bedy)
  fetch(bedy)
    .then(response => response.json())
    .then(data => {
      var popularLateDiv = document.getElementById('dc_late');  
      data.results.forEach(movie => {
    var a = document.createElement("div")
   
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
     $(a).addClass("late_kids")
     $(a).appendTo("#dc_late")
     $(a).click(function(){
       open_opera (movie.title, movie.id, bedy)
     })
      });
      
      // Increment the current page counter
      currentPage++;
    })
    .catch(error => {
     // console.error('Error fetching movies:', error);
    });
    
}
function fetchDcImages2() {
  // Calculate the total number of pages needed to fetch the desired number of movies
  var totalPages = Math.ceil(totalMovies / moviesPerPage);
  
  // Check if all movies have been fetched already
  if (currentPage > totalPages) {
 //   console.log('All movies have been fetched!');
    return;
  }
  
  
 var bedy = `https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&with_keywords=229266&include_adult=false&sort_by=popularity.desc&page=${currentPage}`;   

  //  var bedy = `https://api.themoviedb.org/3/movie/upcoming?api_key=${API_KEY}&language=en-US&page=${currentPage}`
  fetch(bedy)
    .then(response => response.json())
    .then(data => {
      var popularLateDiv = document.getElementById('dc_late');  
      data.results.forEach(movie => {
    var a = document.createElement("div")
   
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
     $(a).addClass("late_kids")
     $(a).appendTo("#dc_late")
     $(a).click(function(){
       open_opera (movie.title, movie.id, bedy)
     })
      });
      
      // Increment the current page counter
  //    currentPage++;
    })
    .catch(error => {
     // console.error('Error fetching movies:', error);
    });
    
}

// Wrap the code inside DOMContentLoaded event listener
$(function(){
  // Fetch the total number of movies from TMDB API to calculate the total number of pages
  fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_keywords=229266&include_adult=false&sort_by=popularity.desc`)
    .then(response => response.json())
    .then(data => {
      totalMovies = data.total_results;
    //  alert('')
      fetchDcImages();
      fetchDcImages2();
    })  
    .catch(error => {
    //  console.error('Error fetching total number of movies:', error);
    });

  document.getElementById('dc_late').addEventListener('scroll', function(event) {
    // Check if the user has scrolled to the end of the div
    if (event.target.scrollLeft + event.target.clientWidth + 1 >= event.target.scrollWidth) {
     
      fetchDcImages();
      fetchDcImages2();
    }
  });

});
  })  // end of latest 
  
  
// Create an array with your items  item     items   lang   language   
var itemsArray = [
'ko',
'ja',
'hi',
'es',
'de',
'zh',
'fr',
'it',
'ru',
'pt',
'th',
'tr',
'sv',
'da',
'he',
'tl',
'nl',
'ar',
'pl',
'fi',
'no',
'el',
'id',
'ro',
'hr',
'uk',
'sr',
'ca',
'vi',
'sw',
'ta',
'te',
'bn',
'pa',
'ur',
'gu',
'kn',
'ml',
'mr',
'cy',
'ga',
'cs',
'hu',
'bg',
'Item'
];
var langauageArray = [
'Korean', 
'Japan', 
'Hindi',
'Spanish',
'German', 
'Chinese', 
'French',
'Italian',
'Russian',
'Portuguese',
'Thai',
'Turkish',
'Swedish',
'Danish',
'Hebrew',
'Tagalog',
'Dutch',
'Arabic',
'Polish',
'Finnish',
'Norwegian',
'Greek',
'Indonesia',
'Romanian',
'Croatian',
'Ukrainian',
'Serbian',
'Catalan',
'Vietnamese',
'Swahili',
'Tamil',
'Telugu',
'Bengali',
'Punjabi',
'Urdu',
'Gujarati',
'Kannada',
'Malayalam',
'Marathi',
'Welsh',
'Irish',
'Czech',
'Hungarian',
'Bulgarian',
'French'
];


$(function(){
var homeTabsInner = document.getElementById('home_movies');
     
// Track the current index of the array
var currentIndex = 0;

// Flag to check if the function has already been triggered
var functionTriggered = false;

// Function to handle scrolling event
function handleScroll() {
  // Calculate the distance between the bottom of the div and the scroll position
  var distanceToBottom = homeTabsInner.scrollHeight - (homeTabsInner.scrollTop + homeTabsInner.offsetHeight);

  // Check if the user has scrolled to the bottom
  if (distanceToBottom <= 1 && !functionTriggered) {
    functionTriggered = true;

    // Loop through the next three items in the array
    for (var i = 0; i < 3; i++) {
      // Check if there are still items in the array
      if (currentIndex < itemsArray.length) {
        // Call your function for each item
        create_Latestfunc(itemsArray[currentIndex], langauageArray[currentIndex]);
        currentIndex++;
      }
    }
  } else if (distanceToBottom > 1) {
    functionTriggered = false;
  }
}

// Attach the scroll event listener to the div
homeTabsInner.addEventListener('scroll', handleScroll);

// Function to handle each item
//  latest    create_Latestfunc   
function create_Latestfunc(item, language) {
  var color = document.getElementById("border_spec").style.borderColor
 
  var cover = document.createElement("div")
  var latest = document.createElement("div")
  var top = document.createElement("div")
  var name = document.createElement("span")
  var svg = document.createElement("span")
  
  $(top).addClass("lit_txt display_flex align_center justify_between")
 
//  $(top).addClass("latest_jsclass")
  $(svg).addClass("one_chev")
  $(latest).addClass("happier")
  $(name).addClass("capital_text")
  
  svg.style.color = color 
  top.style.borderColor = color 
  
  $(name).append(language +" movies")
  $(svg).append(`<svg xmlns="http://www.w3.org/2000/svg" width="23" height="23" fill="currentColor" class="bi bi-chevron-right" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/></svg>`)
  
  $(function(){
    
var currentPage = 1;
var moviesPerPage = 15;
var totalMovies = 0;


// Function to fetch more images (movies) from TMDB API
function fetchLatestImages() {
  // Calculate the total number of pages needed to fetch the desired number of movies
  var totalPages = Math.ceil(totalMovies / moviesPerPage);
  
  // Check if all movies have been fetched already
  if (currentPage > totalPages) {
 //   console.log('All movies have been fetched!');
    return;
  }
  
  
 var bedy = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_original_language=${item}&include_adult=false&sort_by=popularity.desc&page=${currentPage}`;
//  alert(bedy)
  //  var bedy = `https://api.themoviedb.org/3/movie/upcoming?api_key=${API_KEY}&language=en-US&page=${currentPage}`
  fetch(bedy)
    .then(response => response.json())
    .then(data => {
 
      data.results.forEach(movie => {
    var a = document.createElement("div")
   
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
     $(a).addClass("late_kids")
     $(a).appendTo(latest)
     $(a).click(function(){
       open_opera (movie.title, movie.id, bedy)
     })
      });
      
      // Increment the current page counter
      currentPage++;
    })
    .catch(error => {
     // console.error('Error fetching movies:', error);
    });
    
}


$(function(){
  // Fetch the total number of movies from TMDB API to calculate the total number of pages
  fetch(`https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&include_adult=false&&with_original_language=${item}`)
    .then(response => response.json())
    .then(data => {
      totalMovies = data.total_results;
      
      fetchLatestImages();
    })
    .catch(error => {
    //  console.error('Error fetching total number of movies:', error);
    });

  latest.addEventListener('scroll', function(event) {
    // Check if the user has scrolled to the end of the div
    if (event.target.scrollLeft + event.target.clientWidth + 1 >= event.target.scrollWidth) {
     
      fetchLatestImages();
    }
  });

});
    
    
  })
  // end of all these function to add stuffs  
  
var currentPage = 1;
var moviesPerPage = 15;
var totalMovies = 0;
let itemy = item 
  $(svg).click(function(){
   // alert(itemy)
    open_latestfunc(5,'movies', itemy, 'https://api.themoviedb.org/3/discover/movie')    
    //  latest_contentfunc
      
  })
  // end of click  
  
  
  
  
  
  
  $(top).append(name, svg)
  $(cover).append(top, latest)
  
  $("#home_movieinner").append(cover)
  
  
//  console.log('Item:', item);
  // Do something with the item
}
//  latest    create_Latestfunc   
  
})
// Get the reference to the div element  end of movies  latest     

$(function(){
var homeTabsInner = document.getElementById('home_series');
     
// Track the current index of the array
var currentIndex = 0;

// Flag to check if the function has already been triggered
var functionTriggered = false;

// Function to handle scrolling event
function handleScroll() {
  // Calculate the distance between the bottom of the div and the scroll position
  var distanceToBottom = homeTabsInner.scrollHeight - (homeTabsInner.scrollTop + homeTabsInner.offsetHeight);

  // Check if the user has scrolled to the bottom
  if (distanceToBottom <= 1 && !functionTriggered) {
    functionTriggered = true;

    // Loop through the next three items in the array
    for (var i = 0; i < 3; i++) {
      // Check if there are still items in the array
      if (currentIndex < itemsArray.length) {
        // Call your function for each item
        create_Latestfunc(itemsArray[currentIndex], langauageArray[currentIndex]);
        currentIndex++;
      }
    }
  } else if (distanceToBottom > 1) {
    functionTriggered = false;
  }
}

// Attach the scroll event listener to the div
homeTabsInner.addEventListener('scroll', handleScroll);

// Function to handle each item
//  latest    create_Latestfunc   
function create_Latestfunc(item, language) {
  var color = document.getElementById("border_spec").style.borderColor
 
  var cover = document.createElement("div")
  var latest = document.createElement("div")
  var top = document.createElement("div")
  var name = document.createElement("span")
  var svg = document.createElement("span")
  
  $(top).addClass("lit_txt display_flex align_center justify_between")
 
//  $(top).addClass("latest_jsclass")
  $(svg).addClass("one_chev")
  $(latest).addClass("happier")
  $(name).addClass("capital_text")
  
  svg.style.color = color 
  top.style.borderColor = color 
  
  $(name).append(language +" Series")
  $(svg).append(`<svg xmlns="http://www.w3.org/2000/svg" width="23" height="23" fill="currentColor" class="bi bi-chevron-right" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/></svg>`)
  
  $(function(){
    
var currentPage = 1;
var moviesPerPage = 15;
var totalMovies = 0;


// Function to fetch more images (movies) from TMDB API
function fetchLatestImages() {
  // Calculate the total number of pages needed to fetch the desired number of movies
  var totalPages = Math.ceil(totalMovies / moviesPerPage);
  
  // Check if all movies have been fetched already
  if (currentPage > totalPages) {
 //   console.log('All movies have been fetched!');
    return;
  }
  
  
 var bedy = `https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&with_original_language=${item}&include_adult=false&sort_by=popularity.desc&page=${currentPage}`;
//  alert(bedy)
  //  var bedy = `https://api.themoviedb.org/3/movie/upcoming?api_key=${API_KEY}&language=en-US&page=${currentPage}`
  fetch(bedy)
    .then(response => response.json())
    .then(data => {
 
      data.results.forEach(movie => {
    var a = document.createElement("div")
   
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
     $(a).addClass("late_kids")
     $(a).appendTo(latest)
     $(a).click(function(){
       open_opera (movie.title, movie.id, bedy)
     })
      });
      
      // Increment the current page counter
      currentPage++;
    })
    .catch(error => {
     // console.error('Error fetching movies:', error);
    });
    
}


$(function(){
  // Fetch the total number of movies from TMDB API to calculate the total number of pages
  fetch(`https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&include_adult=false&&with_original_language=${item}`)
    .then(response => response.json())
    .then(data => {
      totalMovies = data.total_results;
      
      fetchLatestImages();
    })
    .catch(error => {
    //  console.error('Error fetching total number of movies:', error);
    });

  latest.addEventListener('scroll', function(event) {
    // Check if the user has scrolled to the end of the div
    if (event.target.scrollLeft + event.target.clientWidth + 1 >= event.target.scrollWidth) {
     
      fetchLatestImages();
    }
  });

});
    
    
  })
  // end of all these function to add stuffs  
  
var currentPage = 1;
var moviesPerPage = 15;
var totalMovies = 0;
let itemy = item 
  $(svg).click(function(){
   // alert(itemy)
    open_latestfunc(5,'movies', itemy, 'https://api.themoviedb.org/3/discover/tv')    
    //  latest_contentfunc
      
  })
  // end of click  
  
  
  
  
  
  
  $(top).append(name, svg)
  $(cover).append(top, latest)
  
  $("#home_serieinner").append(cover)
  
  
//  console.log('Item:', item);
  // Do something with the item
}
//  latest    create_Latestfunc   
  
})
// Get the reference to the div element  end of series  latest     







  function toggleTextColor() {
    //alert("")
  var textElement = document.getElementById("sms_editable");
  var currentColor = textElement.style.color;
  if (currentColor === "black") {
    textElement.style.color = "white";
  } else {
    textElement.style.color = "black";
  }
}
  

var lastClickedButton = null;  // Variable to store the last clicked button

function handleButtonClick(buttonNumber) {
 // alert(buttonNumber)
  // Update the lastClickedButton variable with the current button number
  lastClickedButton = buttonNumber;
  /*
  // Perform actions based on which button was clicked
  if (buttonNumber == 1) {
    // Code for Button 1
  //  console.log("Button 1 clicked");
  } else if (buttonNumber == 2) {
    // Code for Button 2
  //  console.log("Button 2 clicked");
  }
  */
}

function performActionBasedOnLastClickedButton() {
  // Perform actions based on the lastClickedButton variable
  if (lastClickedButton == 1) {
    // Code for Button 1
  //  console.log("Performing action based on last clicked button: Button 1");
  } else if (lastClickedButton == 2) {
    // Code for Button 2
    //console.log("Performing action based on last clicked button: Button 2");
  } else {
    // Code for other cases or no last clicked button
    // console.log("No last clicked button");
  }
  
  
  
  var editableDiv = document.getElementById("sms_editable");
  var editableInner = document.getElementById("sms_inner");

var computedStyle = window.getComputedStyle(editableDiv);
var computedStyle2 = window.getComputedStyle(editableInner);
var media_string;
var color = computedStyle.getPropertyValue("color");
var fontFamily = computedStyle.getPropertyValue("font-family");
var background = computedStyle2.getPropertyValue("background");
var backgroundImage = computedStyle2.getPropertyValue("background-image");
var htmlmessage = editableDiv.innerHTML
var tmessage = editableDiv.innerText
var textmessage = tmessage.replace(/\n/g, "<br>");
// Get all images and videos inside the div with ID "blank_smsparent"
var images = document.querySelectorAll('#blank_smsparent img, #blank_smsparent video');

// Loop through each media element and do something with it
// images.forEach((mediaElement) => {
  // Do something with the media element, for example:
//  console.log(mediaElement.src);  


      
       var d = new Date(); 

// var downloadURLsString;
       var time = d.toLocaleTimeString();
      var date = d.getDate();
    var fullyear = d.getFullYear();
    var month = d.getMonth();
   month= month+1;
var date=(fullyear+"|"+month+"|"+date);
      
      
   
   // alert(bgcolor)
//  var images = addNomisceneDiv.getElementsByTagName("img");

// Create an array to store unique src values
var uniqueSrcValues = [];

// Loop through the images and retrieve their src attribute values
for (let i = 0; i < images.length; i++) {
  var src = images[i].src;

  // Check if src value is not already in the uniqueSrcValues array
  if (!uniqueSrcValues.includes(src)) {
    uniqueSrcValues.push(src); // Store unique src value in the array
  }
 // alert(src)
}

// Concatenate unique src values into a string separated by underscores
 srcString = uniqueSrcValues.join("{_}");
 
     var storage = firebase.storage();
var imageFileInput = document.getElementById("blank_sms");
var files = imageFileInput.files; 

//console.log(files)  
//alert(files.length)
var polParent = document.getElementById('pol_parent');
 if (files.length == 0) {
   

// Check if the div has any section children
if (polParent.querySelector('section')) {
  // The div has section children
alert("no image but polls")


} else {
  // The div does not have section children and images 
//  alert ("just text neither image not polls ")
  post_with_text_only()

  // file input is empty
} 
}
else {
  // files have been selected
if (polParent.querySelector('section')) {
  alert("both image and poll")
}
else{
// post_with_image_only()
}
}

function post_with_text_only(){
 

var myArray = [1, 2, 3, 4, 5,6,7 ,8, 9, 0 ];
var randomItem = getRandomItem(myArray);

firebase.database().ref("global_posts").push({
  
 "useremail":useremail.toString(),
 "channelId":useremail.toString(),
 "image_string":"",
 "textmessage":textmessage.toString(),
 "htmlmessage":htmlmessage.toString(),
 "post_type":"post_1",
 "nation":user_nation.toString(),
 "date":date.toString(),
 "time":time.toString(),
 "fontFamily":fontFamily.toString(),
 "backgroundImage":backgroundImage.toString(),
 "color":color.toString(),
 "poll":"none",
 "post_id":Date.now() + '-' + useremail.toString() + '-' +randomItem.toString(),
 "extra1":"extra_one",
 "extra2":"extra_two"   
 });
  $("#sms_stuffexit").click()
  setTimeout(function() {
  clear_content('sms_editable','blank_smsparent','pol_parent')   
  }, 500); // same duration as the transition in CSS
  
//  console.log(htmlmessage)
}
//  file input element is not empty 
// end of post_with_text_only   
      

// end of post_with_image_only 

 // console.log(`color:${color} 😊😊😊 font-family: ${fontFamily} background: ${background} backgroundImage: ${backgroundImage}`)
  
  
  
  
  
}


$(function(){
  //  caption     
  var maxLength = 150; // Change this value to set your desired maximum length of 
var div = document.getElementById('blank_caption');
div.addEventListener('input', function() {
  const text = div.textContent;
  if (text.length > maxLength) {
    div.textContent = text.slice(0, maxLength);
  }
});
$("#blank_smsbtn").click(function(){
   post_with_image_only()
})

function post_with_image_only(){
  open_loader("Uploading...")
   var storage = firebase.storage();
   var editableDiv = document.getElementById("blank_caption");
   var htmlmessage = editableDiv.innerHTML
var textmessage = editableDiv.innerText;
var imageFileInput = document.getElementById("blank_sms");

var files = imageFileInput.files; 
// Array to store Promises for each upload
var uploadPromises = [];

// Loop through each file selected
for (var i = 0; i < files.length; i++) {
  var file = files[i];
var fileName = Date.now() + '-' + file.name;
  // Create a storage reference to the file
  var storageRef = storage.ref().child("global_posts/"+useremail.toString()+"/"+ fileName);

  // Push the upload task promise to the array
  var uploadTask = storageRef.put(file);
  uploadPromises.push(uploadTask);
}

// Wait for all uploads to complete
Promise.all(uploadPromises).then(function(snapshots) {
  // Array to store download URLs
  var downloadURLs = [];

  // Loop through the snapshots and get the download URLs
  snapshots.forEach(function(snapshot) {
    snapshot.ref.getDownloadURL().then(function(url) {
      downloadURLs.push(url);

      // Check if all download URLs are retrieved
      if (downloadURLs.length === files.length) {
        // Concatenate the download URLs separated by "{_}"
        downloadURLsString = downloadURLs.join("{_}");
  
   

var myArray = [1, 2, 3, 4, 5,6,7 ,8, 9, 0 ];
var randomItem = getRandomItem(myArray);

    firebase.database().ref("global_posts").push({

 "useremail":useremail.toString(),
 "channelId":useremail.toString(),
 "image_string":downloadURLsString.toString(),
 "textmessage":textmessage.toString(),
 "htmlmessage":htmlmessage.toString(), 
 "post_type":"post_2",
 "nation":user_nation.toString(),
 "date":date.toString(),
 "time":time.toString(),
 "fontFamily":"",
 "backgroundImage":"",
 "color":"".toString(),
 "poll":"none",
 "post_id":Date.now() + '-' + useremail.toString() + '-' +randomItem.toString(),
 "extra1":"extra_one",
 "extra2":"extra_two"   
 });
  
 
  $("#blank_smsexit").click()
  $("#sms_stuffexit").click()
 close_loader()
  setTimeout(function() {
  clear_content('sms_editable','blank_smsparent','pol_parent')  
   document.getElementById("blank_sms").value = "";
   
  }, 500); // same duration as the transition in CSS 
     
      }
    }).catch(function(error) {
     // console.error("Error getting download URL for file:", error);
 failure_alert(error)
        
    });
  });
}).catch(function(error) {
 // console.error("Error uploading files:", error);
 failure_alert(error)
});

}


})

// Add pol       poll    pol_parent     
function add_poldiv(){
  var parent = document.getElementById("pol_parent")
  var a = document.createElement("section")
  var b = document.createElement("div")
  var c = document.createElement("div")
  var d = document.createElement("div")
  var e = document.createElement("div")
  var f = document.createElement("div")
  var g = document.createElement("input")
 // var h = document.createElement("label")
  var i = document.createElement("label")
  var z = document.createElement("div")
  
  
  var fileInput = document.createElement('input');
fileInput.type = 'file';
fileInput.id = 'fileInput';
fileInput.name = 'fileInput';
fileInput.setAttribute('accept', '.jpg, .jpeg, .png, .mp4', '.ogg', '.webm', '.gif','.mp4', '.webm', '.ogg'); // Set the allowed file types here 
//video/mp4,video/webm,video/ogg  
fileInput.setAttribute('multiple', '');

var label = document.createElement('label');
label.htmlFor = "fileInput";
  b.id = "pol_div"
  c.id = "pol_top"
  d.id = "pol_foot"
  f.id = "pol_content"
  z.id = "pol_new"
  
  $(e).addClass("display_flex")
  $(g).addClass("pol_input")
  $(f).addClass("ellipsis_text")
   // g.focus()
  $(label).append('<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-image" viewBox="0 0 16 16"><path d="M6.002 5.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/><path d="M2.002 1a2 2 0 0 0-2 2v10a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2h-12zm12 1a1 1 0 0 1 1 1v6.5l-3.777-1.947a.5.5 0 0 0-.577.093l-3.71 3.71-2.66-1.772a.5.5 0 0 0-.63.062L1.002 12V3a1 1 0 0 1 1-1h12z"/></svg>')
  $(label).append(fileInput)
  $(i).append('<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-camera-video" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M0 5a2 2 0 0 1 2-2h7.5a2 2 0 0 1 1.983 1.738l3.11-1.382A1 1 0 0 1 16 4.269v7.462a1 1 0 0 1-1.406.913l-3.111-1.382A2 2 0 0 1 9.5 13H2a2 2 0 0 1-2-2V5zm11.5 5.175 3.5 1.556V4.269l-3.5 1.556v4.35zM2 4a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h7.5a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1H2z"/></svg>')
    
  fileInput.addEventListener('change', function(event) {
      var files = event.target.files;
      for (var i = 0; i < files.length; i++) {
        var file = files[i];

        // Check if the selected file is an image
        if (file && file.type.match('image.*')) {
          var reader = new FileReader();

          // Read the image file as a data URL
          reader.readAsDataURL(file);

          // Set the image source to the data URL when it's loaded
          reader.onload = function(event) {
            var imageUrl = event.target.result;
            var imgElement = document.createElement("img");
            imgElement.src = imageUrl;
            $(imgElement).click(function(){
              check_enlarge(imageUrl, 'image')
            })
            d.appendChild(imgElement);
          };
        }
        if (file && file.type.match('video.*')) {
          var reader = new FileReader();

          // Read the image file as a data URL
          reader.readAsDataURL(file);

          // Set the image source to the data URL when it's loaded
          reader.onload = function(event) {
            var imageUrl = event.target.result;
            var imgElement = document.createElement("video");
            imgElement.src = imageUrl;
            imgElement.currentTime = 0.5 
            $(imgElement).click(function(){
              check_enlarge(imageUrl, 'video')
            })
            d.appendChild(imgElement);
          };
        }
      }
    });
  
  
  
  
  
  
 $(f).append(label)
  $(e).append(g)
  $(c).append(e, f)
  $(z).append(c, d)
  $(b).append(z, f)
  $(a).append(b)
  parent.appendChild(a);
 
parent.scrollBy({
  left: parent.offsetWidth,
  behavior: 'smooth'
});

}
// end of function add_poldiv   

function open_opera(title, movieId, opera_url){ 
//  alert(movieId)    open_opera     opera     
     var modal = document.getElementById("opera_bg");
      
  var movieUrl = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`;
  var tvUrl = `https://api.themoviedb.org/3/tv/${movieId}?api_key=${API_KEY}`;

var category = getCategoryFromUrl(opera_url)
if(category.toString().toLowerCase() == "movies"){
  opera_itsamovie()
}
else if(category.toString().toLowerCase() == "series"){
  opera_itsaseries()
}
else{
  failure_alert("Unable to locate movie")
}
       
         function opera_itsamovie(){
   var movieDetailsUrl = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`;
 // alert(movieDetailsUrl)
  // Fetch movie details from TMDB API
  
  
  
  fetch(movieDetailsUrl)
    .then(response => response.json())
    .then(data => {
      
      var backdrop = data.backdrop_path;
      var posterPath = data.poster_path;
      var title = data.title;
      var overview = data.overview;
      var movieId = data.id;
      var movieYear = getMovieYear(data.release_date);
      // ... add more movie details as needed
      
       
          modal.style.bottom = "4px";
  PREVIOUS_TAB = CURRENT_TAB
  CURRENT_TAB = "opera_bg"
   
  history.pushState(null, null, null);
   visitedPages.push("opera_bg");
  
  
   $(function(){
  

fetchMovieTrailer(movieId, 'movie', 'opera_vidsection');
  
  });
  
  
     $("#opera_name").text(title)
     $("#opera_year").text(movieYear)
//     $("#net_time").text(length)
 //    $("#net_note").text(come_note)
    fetch(`https://www.omdbapi.com/?apikey=${OMDB_KEY}&t=${title.toString().toLowerCase()}&y=${movieYear}&plot=full`)
  .then(response => response.json())
  .then(data => {
    if (data.Response === 'True') {
        document.querySelector('#opera_imdb').innerHTML = data.imdbRating;
        document.querySelector('#opera_pg').innerHTML = data.Rated;
    } else {
        return false;
    }
  })

    var backdropPath = `https://image.tmdb.org/t/p/w500/${backdrop}`;   
        var posterUrl = `https://image.tmdb.org/t/p/w500/${posterPath}`; // construct the full poster image URL
       
       document.getElementById("opera_image").style.backgroundImage = "url("+posterUrl+")";

    //  document.getElementById("macro_poster").style.backgroundImage = "url("+posterUrl+")";

      $(".open_billboard").css({"background-image":"url("+backdropPath+")"})
         
      function color_thief() {
    var colorThief = new ColorThief();

    var img = new Image();
    
        
        img.onload = function() {
        // Display main color e.g [125, 189, 193]
        var mainRGB = colorThief.getColor(img);
        // console.log(mainRGB.join(','));
        
   //     var mainColor = document.querySelector('.colors .main .color')
        var a = `rgb(${mainRGB[0]}, ${mainRGB[1]}, ${mainRGB[2]})`;
        $("#opera_inner").css({"background-image":"linear-gradient(to bottom, "+a+", #000000) "})
      //  $("#opera_inner").css({"background":a})
    
    }
    
    img.crossOrigin = "Anonymous";
    img.src = backdropPath.toString(); 
    
}
color_thief()

// share  
window.share_operafunc = function(){
 var movieArray =  {
     filmId:movieId.toString(),
     filmType:"movie"
   };
   
 open_sharewithid(movieArray)
}


// playlist           
window.list_operafunc = function(){
  
   opera_exit()
   var div = document.getElementById("share_playlistdiv")
   div.style.bottom = "2%";  
   div.innerHTML = ''; 
      var playersRef = firebase.database().ref("my_playlist/"+useremail);

playersRef.orderByKey().on("child_added", function(data) {
   var seasonlist=[data.key]
for(let i=0; i<seasonlist.length; i++){
  var up =document.createElement('div')
up.id="mainlist"
$(up).append(seasonlist)
    
    $(up).click(function(){
    var d = new Date();  
       var time  = d.toLocaleTimeString();
      var date = d.getDate();
    var fullyear = d.getFullYear();
    var month = d.getMonth();
   month= month+1;
var date =(date+"|"+month+"|"+fullyear);
var ref_today = firebase.database().ref("my_playlist/"+useremail+"/"+seasonlist)
  ref_today.push({
    "name": title.toString(),
    "image": posterUrl.toString(),
    "year": movieYear.toString(),
    "msgdate": date.toString(),
    "idy": movieId.toString(),
    "type": "extra",
    "id": "playlist",
    "category": "movies",
    "msgtime": time.toString()
  });   
  
     div.style.bottom = "-50%";  
     alert_function('good',"Successfully added to playlist ")
    
    })
    $("#share_playlistdiv").prepend(up)
}
})
} // end of list_operafunc() 


var ref_today = firebase.database().ref("my_collection/"+useremail.toString())
var collectBtn =  $("#opera_collectbtn")
check_movieforcollection(movieId).then(function(result) {
  if (result) {
    
 collectBtn.html('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="#e67e22" class="bi bi-patch-check" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M10.354 6.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7 8.793l2.646-2.647a.5.5 0 0 1 .708 0z"/><path d="m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z"/></svg>')
 
//alert(title + '🚳🚳🚳🚳🚳'+movieId)
  }
  else{
    collectBtn.css({"color":"#fff"})
  }
})



window.add_remove = function(){

var ref_today = firebase.database().ref("my_collection/"+useremail.toString())
var collectBtn =  $("#opera_collectbtn")
check_movieforcollection(movieId).then(function(result) {
  if (result) {
    
 collectBtn.html('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="#e67e22" class="bi bi-patch-check" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M10.354 6.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7 8.793l2.646-2.647a.5.5 0 0 1 .708 0z"/><path d="m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z"/></svg>')
 
//alert(title + '🚳🚳🚳🚳🚳'+movieId)
 





  function abd(){
  //  alert("")
 
ref_today.orderByChild("idy").equalTo(movieId.toString()).once("value")
  .then((snapshot) => {
    snapshot.forEach((childSnapshot) => {
      childSnapshot.ref.remove()
     
    });
 collectBtn.html('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-patch-plus" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8 5.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V10a.5.5 0 0 1-1 0V8.5H6a.5.5 0 0 1 0-1h1.5V6a.5.5 0 0 1 .5-.5z"/><path d="m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z"/></svg>')
  })
  .catch((error) => {
    //console.error("Error retrieving snapshots: ", error);
  });

 collectBtn.css({"color":"#fff"})
 
 collectBtn.html('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-patch-plus" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8 5.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V10a.5.5 0 0 1-1 0V8.5H6a.5.5 0 0 1 0-1h1.5V6a.5.5 0 0 1 .5-.5z"/><path d="m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z"/></svg>')
 alert_function('good', `successfully removed ${title} from your Collections`)
}
abd()

 // end of click 
    // movie is in collection
  } else {

 collectBtn.css({"color":"#fff"})
 
 function abd(){
  //  alert("")
   var d = new Date();  
       var time  = d.toLocaleTimeString();
      var date = d.getDate();
    var fullyear = d.getFullYear();
    var month = d.getMonth();
   month= month+1;
var date =(date+"|"+month+"|"+fullyear);
  ref_today.push({
    "name": title.toString(),
    "image": posterUrl.toString(),
    "year": movieYear.toString(),
    "msgdate": date.toString(),
    "idy": movieId.toString(),
    "type": "extra",
    "id": "collection",
    "category": "movies",
    "msgtime": time.toString()
  });   
  
 collectBtn.html('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="#e67e22" class="bi bi-patch-check" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M10.354 6.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7 8.793l2.646-2.647a.5.5 0 0 1 .708 0z"/><path d="m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z"/></svg>')
 
  alert_function('good', `successfully added ${title} to your Collections`)
 }
 abd()
    // movie is not in collection
  }
}).catch(function(error) {
  // handle error
});
}
  $(function(){
    
var ref_now = firebase.database().ref("my_subscription/"+useremail.toString())
var collectBtn =  $("#opera_bellbtn") 
check_movieforsubscription(movieId).then(function(result) {
  if (result) {
    
 collectBtn.html('<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#e67e22" class="bi bi-bookmark-check-fill" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M2 15.5V2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.74.439L8 13.069l-5.26 2.87A.5.5 0 0 1 2 15.5zm8.854-9.646a.5.5 0 0 0-.708-.708L7.5 7.793 6.354 6.646a.5.5 0 1 0-.708.708l1.5 1.5a.5.5 0 0 0 .708 0l3-3z"/></svg>')
 
//alert(title + '🚳🚳🚳🚳🚳'+movieId)
 




window.add_bookmark = function(){
  //  alert("")
 
ref_now.orderByChild("idy").equalTo(movieId.toString()).once("value")
  .then((snapshot) => {
    snapshot.forEach((childSnapshot) => {
      childSnapshot.ref.remove()
     
    });
 collectBtn.html('<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bookmark-plus" viewBox="0 0 16 16"><path d="M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.777.416L8 13.101l-5.223 2.815A.5.5 0 0 1 2 15.5V2zm2-1a1 1 0 0 0-1 1v12.566l4.723-2.482a.5.5 0 0 1 .554 0L13 14.566V2a1 1 0 0 0-1-1H4z"/><path d="M8 4a.5.5 0 0 1 .5.5V6H10a.5.5 0 0 1 0 1H8.5v1.5a.5.5 0 0 1-1 0V7H6a.5.5 0 0 1 0-1h1.5V4.5A.5.5 0 0 1 8 4z"/></svg>')
  })
  .catch((error) => {
    //console.error("Error retrieving snapshots: ", error);
  });

 collectBtn.css({"color":"#fff"})
 // collectBtn.html('<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bookmark-check-fill" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M2 15.5V2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.74.439L8 13.069l-5.26 2.87A.5.5 0 0 1 2 15.5zm8.854-9.646a.5.5 0 0 0-.708-.708L7.5 7.793 6.354 6.646a.5.5 0 1 0-.708.708l1.5 1.5a.5.5 0 0 0 .708 0l3-3z"/></svg>')
 collectBtn.html('<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bookmark-plus" viewBox="0 0 16 16"><path d="M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.777.416L8 13.101l-5.223 2.815A.5.5 0 0 1 2 15.5V2zm2-1a1 1 0 0 0-1 1v12.566l4.723-2.482a.5.5 0 0 1 .554 0L13 14.566V2a1 1 0 0 0-1-1H4z"/><path d="M8 4a.5.5 0 0 1 .5.5V6H10a.5.5 0 0 1 0 1H8.5v1.5a.5.5 0 0 1-1 0V7H6a.5.5 0 0 1 0-1h1.5V4.5A.5.5 0 0 1 8 4z"/></svg>')
  
 alert_function('good', `successfully removed ${title} from your Collections`)
}
 // end of click 
    // movie is in collection
  } else {

 collectBtn.css({"color":"#fff"})
 
 window.add_bookmark = function(){
  //  alert("")
   var d = new Date();  
       var time  = d.toLocaleTimeString();
      var date = d.getDate();
    var fullyear = d.getFullYear();
    var month = d.getMonth();
   month= month+1;
var date =(date+"|"+month+"|"+fullyear);
  ref_now.push({
    "name": title.toString(),
    "image": posterUrl.toString(),
    "year": movieYear.toString(),
    "msgdate": date.toString(),
    "idy": movieId.toString(),
    "type": "extra",
    "id": "collection",
    "category": "movies",
    "msgtime": time.toString()
  });   
  
  collectBtn.html('<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#e67e22" class="bi bi-bookmark-check-fill" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M2 15.5V2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.74.439L8 13.069l-5.26 2.87A.5.5 0 0 1 2 15.5zm8.854-9.646a.5.5 0 0 0-.708-.708L7.5 7.793 6.354 6.646a.5.5 0 1 0-.708.708l1.5 1.5a.5.5 0 0 0 .708 0l3-3z"/></svg>')
 
  alert_function('good', `successfully added ${title} to your Collections`)
 }
 
    // movie is not in collection
  }
}).catch(function(error) {
  // handle error
});

  })




window.sendmovietooverall = function(){
 
  open_overallwithid(movieId, 'movies')
}





    }).catch(function(){
      failure_alert("An error occurred while retrieving data")
    })
    
    
         }
         
         // emd of opera_itsamovie   
           
           
         function opera_itsaseries(){
    var url = `https://api.themoviedb.org/3/tv/${movieId}?api_key=${API_KEY}&language=en-US`;
  fetch(url)
    .then(response => response.json())
    .then(data => {
      // Handle the TV series data here
         var backdrop = data.backdrop_path;
      var posterPath = data.poster_path;
      var title = data.name;
      var overview = data.overview;
      var movieId = data.id;
      var movieYear = getMovieYear(data.first_air_date);
      // ... add more movie details as needed
      //   console.log(data);
          modal.style.bottom = "4px";
           PREVIOUS_TAB = CURRENT_TAB
  CURRENT_TAB = "opera_bg"
   
  history.pushState(null, null, null);
   visitedPages.push("opera_bg");
 
  $(function(){
  

fetchMovieTrailer(movieId, 'tv', 'opera_vidsection');
  
  });
 
 
     $("#opera_name").text(title)
     $("#opera_year").text(movieYear)
    fetch(`https://www.omdbapi.com/?apikey=${OMDB_KEY}&t=${title.toString().toLowerCase()}&y=${movieYear}&plot=full`)
  .then(response => response.json())
  .then(data => {
    if (data.Response === 'True') {
     // console.log(data)
        document.querySelector('#opera_imdb').innerHTML = data.imdbRating;
        document.querySelector('#opera_pg').innerHTML = data.Rated;
    } else {
        return false;
    }
  })

        $("#opera_seas").show()
        $("#opera_seas").text(`S${data.number_of_seasons} E${data.number_of_episodes}`)
        
        
        
    var backdropPath = `https://image.tmdb.org/t/p/w500/${backdrop}`;   
        var posterUrl = `https://image.tmdb.org/t/p/w500/${posterPath}`; // construct the full poster image URL
       
       document.getElementById("opera_image").style.backgroundImage = "url("+posterUrl+")";

    //  document.getElementById("macro_poster").style.backgroundImage = "url("+posterUrl+")";

      $(".open_billboard").css({"background-image":"url("+backdropPath+")"})
         
      function color_thief() {
    var colorThief = new ColorThief();

    var img = new Image();
    
        
        img.onload = function() {
        // Display main color e.g [125, 189, 193]
        var mainRGB = colorThief.getColor(img);
        // console.log(mainRGB.join(','));
        
   //     var mainColor = document.querySelector('.colors .main .color')
        var a = `rgb(${mainRGB[0]}, ${mainRGB[1]}, ${mainRGB[2]})`;
        $("#opera_inner").css({"background-image":"linear-gradient(to bottom, "+a+", #000000) "})
      //  $("#opera_inner").css({"background":a})
    
    }
    
    img.crossOrigin = "Anonymous";
    img.src = backdropPath.toString(); 
    
}
color_thief()

window.share_operafunc = function(){
 var movieArray =  {
     filmId:movieId.toString(),
     filmType:"serie"
   };
   
 open_sharewithid(movieArray)
}



// playlist     playlist      
window.list_operafunc = function(){
  
   opera_exit()
   var div = document.getElementById("share_playlistdiv")
   div.style.bottom = "2%";  
   div.innerHTML = ''; 
      var playersRef = firebase.database().ref("my_playlist/"+useremail);

playersRef.orderByKey().on("child_added", function(data) {
   var seasonlist=[data.key]
for(let i=0; i<seasonlist.length; i++){
  var up =document.createElement('div')
up.id="mainlist"
$(up).append(seasonlist)
    
    $(up).click(function(){
    var d = new Date();  
       var time  = d.toLocaleTimeString();
      var date = d.getDate();
    var fullyear = d.getFullYear();
    var month = d.getMonth();
   month= month+1;
var date =(date+"|"+month+"|"+fullyear);
var ref_today = firebase.database().ref("my_playlist/"+useremail+"/"+seasonlist)
  ref_today.push({
    "name": title.toString(),
    "image": posterUrl.toString(),
    "year": movieYear.toString(),
    "msgdate": date.toString(),
    "idy": movieId.toString(),
    "type": "extra",
    "id": "playlist",
    "category": "series",
    "msgtime": time.toString()
  });   
  
     div.style.bottom = "-50%";  
     alert_function('good',"Successfully added to playlist ")
    
    })
    $("#share_playlistdiv").prepend(up)
}
})
} // end of list_operafunc() 

  
  
    


var ref_today = firebase.database().ref("my_collection/"+useremail.toString())
var collectBtn =  $("#opera_collectbtn")
check_movieforcollection(movieId).then(function(result) {
  if (result) {
    
 collectBtn.html('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="#e67e22" class="bi bi-patch-check" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M10.354 6.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7 8.793l2.646-2.647a.5.5 0 0 1 .708 0z"/><path d="m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z"/></svg>')
 
//alert(title + '🚳🚳🚳🚳🚳'+movieId)
  }
  else{
    collectBtn.css({"color":"#fff"})
  }
})



window.add_remove = function(){


var ref_today = firebase.database().ref("my_collection/"+useremail.toString())
var collectBtn =  $("#opera_collectbtn")
check_movieforcollection(movieId).then(function(result) {
  if (result) {
 collectBtn.html('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="#e67e22" class="bi bi-patch-check" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M10.354 6.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7 8.793l2.646-2.647a.5.5 0 0 1 .708 0z"/><path d="m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z"/></svg>')
 
//alert(title + '🚳🚳🚳🚳🚳'+movieId)
 





  function abd(){
  //  alert("")
 
ref_today.orderByChild("idy").equalTo(movieId.toString()).once("value")
  .then((snapshot) => {
    snapshot.forEach((childSnapshot) => {
      childSnapshot.ref.remove()
     
    });
 collectBtn.html('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-patch-plus" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8 5.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V10a.5.5 0 0 1-1 0V8.5H6a.5.5 0 0 1 0-1h1.5V6a.5.5 0 0 1 .5-.5z"/><path d="m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z"/></svg>')
  })
  .catch((error) => {
    //console.error("Error retrieving snapshots: ", error);
  });

 collectBtn.css({"color":"#fff"})
 
 collectBtn.html('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-patch-plus" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8 5.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V10a.5.5 0 0 1-1 0V8.5H6a.5.5 0 0 1 0-1h1.5V6a.5.5 0 0 1 .5-.5z"/><path d="m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z"/></svg>')
 alert_function('good', `successfully removed ${title} from your Collections`)
}
abd()

 // end of click 
    // movie is in collection
  } else {
 collectBtn.css({"color":"#fff"})
 
 function abd(){
  //  alert("")
   var d = new Date();  
       var time  = d.toLocaleTimeString();
      var date = d.getDate();
    var fullyear = d.getFullYear();
    var month = d.getMonth();
   month= month+1;
var date =(date+"|"+month+"|"+fullyear);
  ref_today.push({
    "name": title.toString(),
    "image": posterUrl.toString(),
    "year": movieYear.toString(),
    "msgdate": date.toString(),
    "idy": movieId.toString(),
    "type": "extra",
    "id": "collection",
    "category": "series",
    "msgtime": time.toString()
  });   
  
 collectBtn.html('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="#e67e22" class="bi bi-patch-check" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M10.354 6.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7 8.793l2.646-2.647a.5.5 0 0 1 .708 0z"/><path d="m10.273 2.513-.921-.944.715-.698.622.637.89-.011a2.89 2.89 0 0 1 2.924 2.924l-.01.89.636.622a2.89 2.89 0 0 1 0 4.134l-.637.622.011.89a2.89 2.89 0 0 1-2.924 2.924l-.89-.01-.622.636a2.89 2.89 0 0 1-4.134 0l-.622-.637-.89.011a2.89 2.89 0 0 1-2.924-2.924l.01-.89-.636-.622a2.89 2.89 0 0 1 0-4.134l.637-.622-.011-.89a2.89 2.89 0 0 1 2.924-2.924l.89.01.622-.636a2.89 2.89 0 0 1 4.134 0l-.715.698a1.89 1.89 0 0 0-2.704 0l-.92.944-1.32-.016a1.89 1.89 0 0 0-1.911 1.912l.016 1.318-.944.921a1.89 1.89 0 0 0 0 2.704l.944.92-.016 1.32a1.89 1.89 0 0 0 1.912 1.911l1.318-.016.921.944a1.89 1.89 0 0 0 2.704 0l.92-.944 1.32.016a1.89 1.89 0 0 0 1.911-1.912l-.016-1.318.944-.921a1.89 1.89 0 0 0 0-2.704l-.944-.92.016-1.32a1.89 1.89 0 0 0-1.912-1.911l-1.318.016z"/></svg>')
 
  alert_function('good', `successfully added ${title} to your Collections`)
 }
 abd()
    // movie is not in collection
  }
}).catch(function(error) {
  // handle error
});
}
        
        window.sendmovietooverall = function(){
           open_overallwithid(movieId, 'series')
        }
        
   
    })
    .catch(error => {
      // Handle any errors here
    //  console.error(error);
      failure_alert("An error occurred while retrieving data")
    });


           
           
     //      alert(title +"😁😁😁😁"+movieId)
         }
         // emd of opera_itsaseries   
}
// end of function open_opera
function getMovieYear(releaseDate) {
  // Extract the year from the release date string
  var year = releaseDate.substring(0, 4);
  // Return the year as a number
  return parseInt(year);
}
 // options    option   open_moreoptions    
function open_moreoptions(postId, postEmail){
  
 // alert(useremail )
    document.getElementById("option_tabdiv").classList.add("drop");     
      PREVIOUS_TAB = CURRENT_TAB

  CURRENT_TAB = "option_tabdiv"

  history.pushState(null, null, null);
   visitedPages.push("option_tabdiv");
   
   if(postEmail.toString().toLowerCase().trim() == useremail.toString().toLowerCase().trim()){
     $("#del_postbtn").css({"display":"flex"})
   }else{
     $("#del_postbtn").css({"display":"none"})
   }
  
}
// end of function 
$(function(){
  var a = "true"
  $("#sms_inner").dblclick(function(){
    if(a=="true"){
    $(this).css({"background":"#000"})
      a = "false"
    }
    else if(a=="false"){
    $(this).css({"background":"#fff"})
      a = "true"
    }
  })
   $(document).mouseup(function(e) {

    var container = $("#sms_mybg");

    // if the target of the click isn't the container nor a descendant of the container
    if (!container.is(e.target) && container.has(e.target).length === 0) 
    {
       container.slideUp()
    }
})
        let touchloc = [0,0]
            let touchd = false
            //var house =$("#hubcot")
            document.getElementById("sms_inner").addEventListener("touchmove",function(ev){
            if(touchd == false){
                for(i=0;i<ev.targetTouches.length;i++){
                    let x = ev.touches[i].pageX - touchloc[0]
                    let y = ev.touches[i].pageY - touchloc[1]
                    if(x > 200){
                   //   console.log("Swipe Right");
   
         touchd=true
                      
                    }
                    if(x < -200){
                      //console.log("Swipe Left");
    //  alert("love")        
           changeBackgroundColor('sms_inner')           
                    
                    touchd=true
                      
                      
                    }
                    if(y > 300){
                     // console.log("Swipe Bottom")
                           
                //     alert("bottom")

                      touchd=true}
                    if(y < -300){
                      
                    //  console.log("Swipe Top");
$("#sms_mybg").slideDown()
   
                      touchd=true}
                }
                }
            })
            document.getElementById("sms_inner").addEventListener("touchstart",function(ev){touchd=false;touchloc[0] = ev.touches[0].pageX;touchloc[1] = ev.touches[0].pageY;})
             document.getElementById("sms_inner").addEventListener("touchend",function(){touchd = true})
  
  
})
$(function(){
        let touchloc = [0,0]
            let touchd = false
            //var house =$("#hubcot")
            document.getElementById("film_bgcom").addEventListener("touchmove",function(ev){
            if(touchd == false){
                for(i=0;i<ev.targetTouches.length;i++){
                    let x = ev.touches[i].pageX - touchloc[0]
                    let y = ev.touches[i].pageY - touchloc[1]
                    if(x > 200){
                   //   console.log("Swipe Right");
   
    document.getElementById("film_bgcom").style.width = '0';

  document.getElementById("enlarge_video").src =""
         touchd=true
                      
                    }
                    if(x < -200){
                      //console.log("Swipe Left");
    //  alert("love")        
                      
                    
                    touchd=true
                      
                      
                    }
                    if(y > 300){
                     // console.log("Swipe Bottom")
                           
                 //     alert("bottom")

                      touchd=true}
                    if(y < -300){
                      
                    //  console.log("Swipe Top");

   
                      touchd=true}
                }
                }
            })
            document.getElementById("film_bgcom").addEventListener("touchstart",function(ev){touchd=false;touchloc[0] = ev.touches[0].pageX;touchloc[1] = ev.touches[0].pageY;})
             document.getElementById("film_bgcom").addEventListener("touchend",function(){touchd = true})
  
  
})
$(function(){
        let touchloc = [0,0]
            let touchd = false
            //var house =$("#hubcot")
            document.getElementById("comment_tabbg").addEventListener("touchmove",function(ev){
            if(touchd == false){
                for(i=0;i<ev.targetTouches.length;i++){
                    let x = ev.touches[i].pageX - touchloc[0]
                    let y = ev.touches[i].pageY - touchloc[1]
                    if(x > 200){
                   //   console.log("Swipe Right");
   
    document.getElementById("comment_tabbg").style.width = '0';

 // document.getElementById("enlarge_video").src =""
         touchd=true
                      
                    }
                    if(x < -200){
                      //console.log("Swipe Left");
    //  alert("love")        
                      
                    
                    touchd=true
                      
                      
                    }
                    if(y > 300){
                     // console.log("Swipe Bottom")
                           
                 //     alert("bottom")

                      touchd=true}
                    if(y < -300){
                      
                    //  console.log("Swipe Top");

   
                      touchd=true}
                }
                }
            })
            document.getElementById("comment_tabbg").addEventListener("touchstart",function(ev){touchd=false;touchloc[0] = ev.touches[0].pageX;touchloc[1] = ev.touches[0].pageY;})
             document.getElementById("comment_tabbg").addEventListener("touchend",function(){touchd = true})
  
  
})
function check_enlarge(source, element){
  
  if((element.toString() == "img") || (element.toString() == "image")){
    document.getElementById("enlarge_img").src = "" 

     document.getElementById('film_bgcom').style.width = '100%';
    $("#enlarge_img").show()
    $("#enlarge_video").hide()
   // $("#enlarge_img").css({"background-image":source.toString()})
   var img = document.getElementById('enlarge_img');

// Create a new Image object
var image = new Image();

// Set the src attribute of the Image object to the source image of the image element
image.src = source ;

// Add an onload event listener to the Image object
image.onload = function() {
  // Retrieve the natural width and height of the source image
  var naturalWidth = this.width;
  var naturalHeight = this.height;
  img.setAttribute('height', naturalHeight);
};
   document.getElementById("enlarge_img").src = source 

  }
  if((element.toString() == "video") || (element.toString() == "vid")){
      document.getElementById("enlarge_video").src = "" 

     document.getElementById('film_bgcom').style.width = '100%';
    $("#enlarge_img").hide()
    $("#enlarge_video").show()
   var img = document.getElementById('enlarge_video');

// Create a new Image object
var image = document.createElement("video");

// Set the src attribute of the Image object to the source image of the image element
image.src = source ;

// Add an onload event listener to the Image object
image.onload = function() {
  // Retrieve the natural width and height of the source image
  var naturalWidth = this.width;
  var naturalHeight = this.height;
  img.setAttribute('height', naturalHeight);
};
   img.src = source 
   img.currentTime = 0.5 
   img.controls = 'true'

  }
  
}
// end of check_enlarge  


function open_collect(type){
  // alert(type)
   document.getElementById('amenities_bg').style.width = '100%';
   $("#more_bg").css({"bottom":"-300px"});
   
    PREVIOUS_TAB = CURRENT_TAB
    CURRENT_TAB = "moretab_divs"
   var newURL = "moretab_divs";
   history.replaceState(null , null , null);
   var currentStateIndex = visitedPages.length - 1;
  visitedPages[currentStateIndex] = newURL;
  
         $("#moretab").slideUp()
   if(type.toString().toLowerCase() == "collect"){
     $("#collecttab_btn").click()
   }
   if(type.toString().toLowerCase() == "recom"){
     $("#recomtab_btn").click()
   }
   if(type.toString().toLowerCase() == "playlist"){
     $("#plisttab_btn").click()
   }
   
}
// end of function open_collect 
/*
//   circular        drag       touchmove     infinite  
 $(function(){
var div = document.getElementById('add_newsbtn');
div.addEventListener('touchmove',move);
function move(e){
var x = e.touches[0].clientX;
var y = e.touches[0].clientY;
var h = y - 50;
var w = x - 50;
div.style.top = h + 'px';
div.style.left = w + 'px';
div.style.animation = "li 1s linear infinite";
}
});


*/
function isElementScrolledToTop(element) {
  // Get the top position of the element relative to the viewport
  var elementRect = element.getBoundingClientRect();
  
  // Calculate the top position of the element, including its padding and margin
  var elementTop = elementRect.top + window.pageYOffset - parseFloat(getComputedStyle(element).marginTop);
 
  // Check if the element's top position is less than or equal to 0, considering the div's padding and margin
  return elementTop <= 0;
}


function onDivScrollTop(elementId, callback) {
  var element = document.getElementById(elementId);

  element.addEventListener('scroll', function() {
    if (element.scrollTop === 0) {
      callback();
    }
  });
}
onDivScrollTop('closet_bg', function() {
 // alert("")
 /*
  $("#closet_body").css({"position":"relative","width":"100%","box-shadow":"0px 0px 8px #0000 "})
    $("#major_bg").css({"position":"relative", "overflow-y":"hidden"})
    */
   // $("#closet_body").css({"position":"relative","width":"100%","box-shadow":"0px 0px 8px #0000", "top": "0", "-index":"3"})
});

var yDiv = document.getElementById('closet_table'); // Replace 'major_switch' with the ID of your div element


//  Create  news       news    create_news     
function create_news(specimen){
  
    $("#news_optioninner").css({"bottom":"-300px"});
    $("#add_newsoption").slideUp()
    $("#create_newsbg").slideDown()
  
    
  
  
  
}

//  Create  news       news    create_news     

function open_adddiv(type){
  
  if(type.toString() == "email"){
    document.getElementById("add_emaildiv").style.bottom = "10px";
    document.getElementById("add_emailval").focus()
  }
  if(type.toString() == "playlist"){
    document.getElementById("add_listdiv").style.bottom = "10px";
    document.getElementById("add_listval").focus()
  }
  
  
}
// end of open_adddiv  

$(function(){
  //   e.aill       email       pal       recom      check email verify email    add_emailval      
  $("#add_emailval").keyup(function(event) {
    if (event.which === 13) {
           var b = $("#add_emailval").val()
         var a =  b.toString().toLowerCase().trim()
           if(a!== ""){
            var c = a.replace('@gmail.com','')
             var email = c.toString().toLowerCase()+"@gmail.com"
         //    alert(email)
             
             
firebase.auth().fetchSignInMethodsForEmail(email) .then(providers => { if (providers.length === 0) {
 // this email hasn't signed up yet 
 
    failure_alert("This user does not exist or has been deleted.");
   
 }
  else {
 // alert("yeah")
 // $("#palverifybox").css({"filter": "blur(0px)"})
 // $("#palcancel").prop('disabled', false);
  //$("#palproceed").prop('disabled', false);
   // has signed up 
   var cemail = email.toString().toLowerCase().trim();
var bat = firebase.database().ref("users_list/"+c.toString().toLowerCase())
bat.on("value", (snapshot) => {
//  console.log(snapshot.val())
    receivername =[snapshot.val().username];
    receiveremail =[snapshot.val().email];
  // $("#palblank").text(receivername)
  //   $("#palblanktwo").text(receivername)
  
  $(".add_emaildivs").css({"bottom":"-300px"});
$(".content").removeClass("visible")
$(".chevron").removeClass("collapsed")    
  
     confirm_function("Do you wish to send "+receivername.toString()+" a pal request?")
         var reff = firebase.database().ref("my_recomlist/" + useremail.toString())
     function one_1(){
          alert_function('good','This user is already in your pallist.')
     }
     function one_2(){
        
      confirmtwo_function('Do you really wish to add yourself to your pal list?')
      window.confirm_truefunc = function(){
         reff.push({
      extra1: "extra1",
      extra2: "extra2",
      email: receiveremail.toString()
    })
      alert_function('good','You have been added to your own pal list.')
      
      }
      window.confirm_falsefunc = function(){}
     }
     function one_3(){
      
     }
     
     
     window.confirm_yesfunc = function(){
          reff.orderByChild("email").equalTo(c.toString().toLowerCase()).once("value", function(snapshot) {
  if (snapshot.exists()) {
      one_1()
  } // ,snapshot existsv
  else if(c.toString().toLowerCase() == useremail.toString().toLowerCase()){
    
    one_2()
  }
  else{
//    alert(c +"___" + cemail +"___"+useremail)
    reff.push({
      extra1: "extra1",
      extra2: "extra2",
      email: receiveremail.toString()
    })
      alert_function('good',receivername +' has been added to your pal list.')
    
  }
          })
          
     }
     window.confirm_nofunc = function(){
       
     }

})
   } }).catch(function(error) {
  failure_alert(error.message);

//alert(error.message); 
});
             
             $("#add_emailval").val("")
           }
        } // end of enter key 
})


  $("#add_listval").keyup(function(event) {
    if (event.which === 13) {
           var b = $("#add_listval").val()
         var a =  b.toString().trim()
           if(a!== ""){
     
$(".add_emaildivs").css({"bottom":"-300px"});
$(".content").removeClass("visible")
$(".chevron").removeClass("collapsed")     
 document.getElementById('add_emailval').value = '';  
  document.getElementById('add_listval').value = '';  
       //      alert(a)
             
 
 
 
 
  if((a.includes('.') ) || (a.includes('#') ) || (a.includes('$') ) ||(a.includes('[') ) ||(a.includes(']') )){
    failure_alert("The playlist name should not include: '.', '#', '$', '[', ']'")
  }
  else{
    var d = new Date();
       var time_string = d.toLocaleTimeString();
      var date = d.getDate();
    var fullyear = d.getFullYear();
    var month = d.getMonth();
   month= month+1;
var date_string=(date+"|"+month+"|"+fullyear);

  var playersRef = firebase.database().ref("my_playlist/"+useremail+"/"+a)  
  
  
  confirm_function("Do you wish to create playlist '" +a.toString()+"' ?")
 
 window.confirm_yesfunc = function (){
 //  alert("yes")
    playersRef.push ({ 
name: a.toString(), 
date:date_string.toString(),
time:time_string.toString()
  
  }).then(function(){
     success_alert(`You have successfully created playlist '${a}'`)
  }).catch(function(error) { 
  failure_alert(error.message)
});
 }
 window.confirm_nofunc = function (){
//   alert("no")
 }
  }
  /*
  */
             
             $("#add_listval").val("")
           }
        } // end of enter key 
})
  
})
//   confirm        
 function confirm_function(message){
     document.getElementById("confirm_bg").style.bottom = "10px";
     
      PREVIOUS_TAB = CURRENT_TAB
  CURRENT_TAB = "confirm_bg"
  history.pushState(null, null, null);
   visitedPages.push("confirm_bg");
     $("#confirm_text").text(message.toString())
 }
     $("#confirm_yes").click(function(){
       confirm_yesfunc()
  //   document.getElementById("confirm_bg").style.bottom = "-300px";
        history.back();     
    CURRENT_TAB = visitedPages[visitedPages.length - 1];
  history_back()
     })
     $("#confirm_no").click(function(){
       confirm_nofunc()
    // document.getElementById("confirm_bg").style.bottom = "-300px";
        history.back();     
    CURRENT_TAB = visitedPages[visitedPages.length - 1];
  history_back()
     })
 function confirmthree_function(message){
     document.getElementById("addmoment_bg").classList.add ("drop");
     
      PREVIOUS_TAB = CURRENT_TAB
  CURRENT_TAB = "addmoment_bg"
  history.pushState(null, null, null);
   visitedPages.push("addmoment_bg");
     $("#addmoment_text").text(message.toString())
 }
     $("#confirm_accept").click(function(){
       confirm_acceptfunc()
  //   document.getElementById("confirm_bg").style.bottom = "-300px";
      
     })
     $("#confirm_decline").click(function(){
       confirm_declinefunc()
    // document.getElementById("confirm_bg").style.bottom = "-300px";
        history.back();     
    CURRENT_TAB = visitedPages[visitedPages.length - 1];
  history_back()
     })
 function confirmfour_function(message){
     document.getElementById("addcloset_bg").classList.add("drop");
     
      PREVIOUS_TAB = CURRENT_TAB
  CURRENT_TAB = "addcloset_bg"
  history.pushState(null, null, null);
   visitedPages.push("addcloset_bg");
     $("#addcloset_text").text(message.toString())
 }
     $("#confirm_posi").click(function(){
       confirm_posifunc()
  //   document.getElementById("confirm_bg").style.bottom = "-300px";
       
     })
     $("#confirm_nega").click(function(){
       confirm_negafunc()
    // document.getElementById("confirm_bg").style.bottom = "-300px";
        history.back();     
    CURRENT_TAB = visitedPages[visitedPages.length - 1];
  history_back()
     })
 function confirmtwo_function(message){
     document.getElementById("confirm_bgtwo").style.bottom = "10px";
     $("#confirm_texttwo").text(message.toString())
     $("#confirm_yestwo").click(function(){
       confirm_truefunc()
     document.getElementById("confirm_bgtwo").style.bottom = "-300px";
     })
     $("#confirm_notwo").click(function(){
       confirm_falsefunc()
     document.getElementById("confirm_bgtwo").style.bottom = "-300px";
     })
 }

/*


  $(function(){
  var d = new Date();
       var time = d.toLocaleTimeString();
      var date = d.getDate();
    var fullyear = d.getFullYear();
    var month = d.getMonth();
   month= month+1;
var date=(date+"|"+month+"|"+fullyear);
     firebase.database().ref("my_collection/" + useremail).orderByChild("idy").equalTo(idy.toString()).once("value", function(snapshot) {
  if (snapshot.exists()) {
    // If a snapshot with the same idy already exists in the database
    snapshot.forEach(function(childSnapshot) {
      var childKey = childSnapshot.key;
      var childData = childSnapshot.val();
      // Delete the existing snapshot
      firebase.database().ref("my_collection/" + useremail + "/" + childKey).remove();
    });
  }
}).then(function() {
  // Add the new data with the same idy
  firebase.database().ref("my_collection/" + useremail).push().set({
    "name": name.toString(),
    "image": image.toString(),
    "year": year.toString(),
    "msgdate": date.toString(),
    "idy": idy.toString(),
    "type": type.toString(),
    "id": "collection",
    "category": "movies",
    "msgtime": time.toString()
  });
}).catch(function(error) {
  console.error("Error updating data: ", error);
});

  var they =document.createElement('div')
          they.id="error_divhide"
          $(they).text(name+" has been added to your collections")
         $(they).appendTo("body")
          $(they).fadeOut(3500)
          $("#mini_overall").fadeOut()
  
     })
*/


//  collect        collection      collection_tab             
firebase.auth().onAuthStateChanged(function(user) {
    // alert("dd")
    if(user){
      $("#collecttab_btn").click(function(){
    
    
 $(function() {
  var dbRef = firebase.database().ref('my_collection/' + useremail.toString());
  var collectInner = document.getElementById('collect_inner');
  var swipeThreshold = 80; // Minimum swipe distance for it to be considered a swipe
  var startX;
  var distX;

  dbRef.on('value', (snapshot) => {
    collectInner.innerHTML = '';
    snapshot.forEach((childSnapshot) => {
      var img = document.createElement('section');
      var src = childSnapshot.val().image;
     // console.log(childSnapshot.val())
      img.style.backgroundImage = "url(" + src + ")";

      $(img).click(function() {
        open_opera(childSnapshot.val().name, childSnapshot.val().idy, childSnapshot.val().category);
      });

      $(img).on('touchstart', function(event) {
        var touch = event.touches[0];
        startX = touch.clientX;
        distX = 0;
      });

      $(img).on('touchmove', function(event) {
        var touch = event.touches[0];
        var currentX = touch.clientX;
        distX = currentX - startX;
      });

      $(img).on('touchend', function() {
        if (distX < -swipeThreshold) {
          // Perform swipe left action
          var childKey = childSnapshot.key;
          img.classList.add('fade-out');

          setTimeout(function() {
            // Remove the image element from the UI
        small_alertfunc('Removed from Collections')
            img.remove();

            // Remove the snapshot from the database
            childSnapshot.ref.remove()
              .catch(function(error) {
          //      console.error("Error removing snapshot:", error);
          failure_alert('An error occurred ')
              });
          }, 500); // Delay removal for 500 milliseconds (adjust as needed)
        }
      });

      $(collectInner).prepend(img);
    });
  });
});




      })
//  end of function 

}
})
//  end of auth      
function check_movieforcollection(movieId) {
  return new Promise(function(resolve, reject) {
    firebase.database().ref("my_collection/" + useremail).orderByChild("idy").equalTo(movieId.toString()).once("value", function(snapshot) {
      if (snapshot.exists()) {
        resolve(true);
      } else {
        resolve(false);
      }
    }, function(error) {
      reject(error);
    });
  });
}
//  end of function check_movieforcollection    
function check_movieforsubscription(movieId) {
  return new Promise(function(resolve, reject) {
    firebase.database().ref("my_subscription/" + useremail).orderByChild("idy").equalTo(movieId.toString()).once("value", function(snapshot) {
      if (snapshot.exists()) {
        resolve(true);
      } else {
        resolve(false);
      }
    }, function(error) {
      reject(error);
    });
  });
}
function small_alertfunc(message){
//  document.getElementById('small_alert').style.bottom = '-50%';
  var div = document.createElement('div')
  div.id = "small_alert"
  div.style.bottom = '10%';
  $(div).text(message)
 div.style.bottom = '-50%';
    setTimeout(function() {
 div.style.bottom = '10%';
}, 100); // 4000 milliseconds = 4 seconds

    setTimeout(function() {
 div.style.bottom = '-50%';
}, 3000); // 4000 milliseconds = 4 seconds
$(div).appendTo("body")
    
}

function alert_function(type, message){
  document.getElementById('alert_bg').style.top = '-50%';
  document.getElementById('alert_bg').style.top = '0';
  $("#alert_text").text(message)
  if(type.toString() == "good"){
  $("#alert_icon").html('<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check2-circle" viewBox="0 0 16 16"><path d="M2.5 8a5.5 5.5 0 0 1 8.25-4.764.5.5 0 0 0 .5-.866A6.5 6.5 0 1 0 14.5 8a.5.5 0 0 0-1 0 5.5 5.5 0 1 1-11 0z"/><path d="M15.354 3.354a.5.5 0 0 0-.708-.708L8 9.293 5.354 6.646a.5.5 0 1 0-.708.708l3 3a.5.5 0 0 0 .708 0l7-7z"/></svg>')
    }
  else if(type.toString() == "bad"){
  $("#alert_icon").html('<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-exclamation-triangle" viewBox="0 0 16 16"><path d="M7.938 2.016A.13.13 0 0 1 8.002 2a.13.13 0 0 1 .063.016.146.146 0 0 1 .054.057l6.857 11.667c.036.06.035.124.002.183a.163.163 0 0 1-.054.06.116.116 0 0 1-.066.017H1.146a.115.115 0 0 1-.066-.017.163.163 0 0 1-.054-.06.176.176 0 0 1 .002-.183L7.884 2.073a.147.147 0 0 1 .054-.057zm1.044-.45a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566z"/><path d="M7.002 12a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 5.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995z"/></svg>')
    }
    
    setTimeout(function() {
  document.getElementById('alert_bg').style.top = '-50%';
}, 4000); // 4000 milliseconds = 4 seconds

    
}
// end of alert_function     alert    

   
//  now I want to be next to that this function is used for function need to get trending movies 2010 to that job
// fetch(`https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`)
fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}&page=1`) 
  .then(response => response.json())
  .then(data => {
    data.results.forEach(movie => {
      var backdropPath = movie.backdrop_path;
      var title = movie.title;
      var image = movie.poster_path;
     
      var movieId = movie.id;
      
      var a = document.createElement("section");
      var b = document.createElement("div");
      var c = document.createElement("div");
      var d = document.createElement("div");
      var e = document.createElement("div");
      var f = document.createElement("span");
      var g = document.createElement("span");
      var h = document.createElement("span");
      var i = document.createElement("span");
      var j = document.createElement("span");
      $(j).addClass("son_filmlen")
      $(i).addClass("son_filmimdb")
      $(h).addClass("son_filmtwo")
      $(g).addClass("son_filmgen")
      $(f).addClass("son_filmname")
      $(e).addClass("son_filmmore")
      $(d).addClass("son_filmimage")
      $(c).addClass("son_innertwo")
      $(b).addClass("son_innerboard")
      $(a).addClass("son_section swiper-slide")
      
      b.style.backgroundImage = `url('https://image.tmdb.org/t/p/w500${backdropPath}')`;
      d.style.backgroundImage = `url('https://image.tmdb.org/t/p/w500${image}')`;
      $(f).html(title);
      
       var movieDetailsUrl = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`;
  
  // Fetch movie details from TMDB API
  fetch(movieDetailsUrl)
    .then(response => response.json())
    .then(data => {
       var duration = data.runtime;
      
      var genres = data.genres;
 var movieYear = getMovieYear(data.release_date);
    genres.forEach(genre => {
      var genreSpan = document.createElement('span');
      genreSpan.textContent = genre.name;
      genreSpan.classList.add('tag');
      $(g).append(genreSpan);
    });

      $(j).html(duration+" min");
      
   
    fetch(`https://www.omdbapi.com/?apikey=${OMDB_KEY}&t=${title.toString().toLowerCase()}&y=${movieYear}&plot=full`)

  .then(response => response.json())
  .then(data => {
    if (data.Response === 'True') {
       $(i).text(data.imdbRating);
    } else {
        return false;
    }
  })
  
  
    })
      // end of function for t.db   tmdb   
      $(h).append(i,j);
      $(e).append(f, g , h);
      $(c).append(d,e);
      $(a).append(b,c);
       $(a).click(function(){
       open_opera(movie.title, movie.id, movieDetailsUrl)   
     })
      
      $(".son_slider").append(a);
    });
  })
  .catch(error => {
    console.error(error);
  });
fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}&page=2`) 
  .then(response => response.json())
  .then(data => {
    data.results.forEach(movie => {
      var backdropPath = movie.backdrop_path;
      var title = movie.title;
      var image = movie.poster_path;
     
      var movieId = movie.id;
      
      var a = document.createElement("section");
      var b = document.createElement("div");
      var c = document.createElement("div");
      var d = document.createElement("div");
      var e = document.createElement("div");
      var f = document.createElement("span");
      var g = document.createElement("span");
      var h = document.createElement("span");
      var i = document.createElement("span");
      var j = document.createElement("span");
      $(j).addClass("son_filmlen")
      $(i).addClass("son_filmimdb")
      $(h).addClass("son_filmtwo")
      $(g).addClass("son_filmgen")
      $(f).addClass("son_filmname")
      $(e).addClass("son_filmmore")
      $(d).addClass("son_filmimage")
      $(c).addClass("son_innertwo")
      $(b).addClass("son_innerboard")
      $(a).addClass("son_section")
      
      b.style.backgroundImage = `url('https://image.tmdb.org/t/p/w500${backdropPath}')`;
      d.style.backgroundImage = `url('https://image.tmdb.org/t/p/w500${image}')`;
      $(f).html(title);
      
       var movieDetailsUrl = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`;
  
  // Fetch movie details from TMDB API
  fetch(movieDetailsUrl)
    .then(response => response.json())
    .then(data => {
       var duration = data.runtime;
      
      var genres = data.genres;
 var movieYear = getMovieYear(data.release_date);
    genres.forEach(genre => {
      var genreSpan = document.createElement('span');
      genreSpan.textContent = genre.name;
      genreSpan.classList.add('tag');
      $(g).append(genreSpan);
    });

      $(j).html(duration+" min");
      
   
    fetch(`https://www.omdbapi.com/?apikey=${OMDB_KEY}&t=${title.toString().toLowerCase()}&y=${movieYear}&plot=full`)

  .then(response => response.json())
  .then(data => {
    if (data.Response === 'True') {
       $(i).text(data.imdbRating);
    } else {
        return false;
    }
  })
  
  
    })
      // end of function for t.db   tmdb   
      $(h).append(i,j);
      $(e).append(f, g , h);
      $(c).append(d,e);
      $(a).append(b,c);
       $(a).click(function(){
       open_opera(movie.title, movie.id, movieDetailsUrl)   
     })
      
      $(".son_slider").append(a);
    });
  })
  .catch(error => {
 //   console.error(error);
  });
  
  
var maxLength = 250; // Change this value to set your desired maximum length of 
var div = document.getElementById('sms_editable');
div.addEventListener('input', function() {
  const text = div.textContent;
  if (text.length > maxLength) {
    div.textContent = text.slice(0, maxLength);
  }
});


//  hashtag    sms_editable   
function getHashtags() {
  var editable = document.getElementById('sms_editable');
var hashtagDiv = document.getElementById('hashtag_div');
var hashtaginn = document.getElementById('hashtag_inner');

editable.addEventListener('input', function(e) {
  
  $(function(){
  var text = editable.innerText;
  var lastIndex = text.lastIndexOf('@');
  var lastWordIndex = text.lastIndexOf('  ');
  var hashtagIndex = lastIndex > lastWordIndex ? lastIndex : -1;
  
  if (hashtagIndex !== -1) {
    var hashtag = text.substring(hashtagIndex + 1, text.length);
    var range = window.getSelection().getRangeAt(0);
    var rect = range.getBoundingClientRect();
    var scrollTop = document.documentElement.scrollTop || document.body.scrollTop;
    var scrollLeft = document.documentElement.scrollLeft || document.body.scrollLeft;
    var top = rect.top + scrollTop;
    var left = rect.left + scrollLeft;
    hashtagDiv.style.display = 'block';
    hashtagDiv.style.top = top + 20 + 'px';
    hashtagDiv.style.left = left + 'px';
    hashtagDiv.style.left = Math.min(rect.left, window.innerWidth - hashtagDiv.offsetWidth) + "px";
  hashtagDiv.style.maxWidth = (window.innerWidth - hashtagDiv.offsetLeft) + "px";
  
  var hashtag2 = hashtag.toString().toLowerCase()
  //.replaceAll('_', ' ');
 $(function(){

  // Remove whitespace from the movie name
//  var modifiedMovieName = hashtag2.toString().toLowerCase().replace(/\s+/g, "");
  var modifiedMovieName = hashtag2.toString().toLowerCase().trim()

  // Call the TMDB API with the modified movie name
  fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${modifiedMovieName.toString()}`)
    .then(response => response.json())
    .then(data => {  
     // console.log (hashtag2+"🇦🇷🇦🇷🇦🇷")
    //  console.log (modifiedMovieName)
      // Assume movies is an array of movie objects returned from the TMDB API
      var movies = data.results;

      movies.forEach((movie) => {
        // Create a div element to hold the movie information
        var movieDiv = document.createElement('section');
        
        // Create an image element for the movie poster
        var moviePoster = document.createElement('div');
        var src = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;
        moviePoster.alt = `${movie.title} poster`;
        moviePoster.style.backgroundImage = "url("+src+")";
        
        // Create a p element for the movie title
        var movieTitle = document.createElement('p');
        movieTitle.textContent = movie.title;

        // Add the image and title elements to the div
        movieDiv.appendChild(moviePoster);
        movieDiv.appendChild(movieTitle);

        $(movieDiv).click(function(){
    //    alert(movie.title)
          var editableDiv = document.getElementById("sms_editable");

          var text = editableDiv.innerHTML;
          text = text.toLowerCase()
  //   alert(modifiedMovieName)
          var newText = text.replace(new RegExp('@' + modifiedMovieName, 'g'), `&nbsp;<span class="movie_title" id="${movie.id}">${movie.title}</span>&nbsp;`);
//console.log(newText)<
          editableDiv.innerHTML = newText;
       //   $(editableDiv).append(newText);

          $("#hashtag_div").hide();
        //  $("#sms_editable").css({"color":"#fff"});
        });

        // Add the div to the movie list
        $("#hashtag_inner").append(movieDiv);
      });

      // Handle the TMDB API response
    })
    .catch(error => {
      // console.error(error);
    });
  fetch(`https://api.themoviedb.org/3/search/tv?api_key=${API_KEY}&query=${modifiedMovieName.toString()}`)
    .then(response => response.json())
    .then(data => {
     // console.log (hashtag2+"🇦🇷🇦🇷🇦🇷")
    //  console.log (modifiedMovieName)
      // Assume movies is an array of movie objects returned from the TMDB API
      var movies = data.results;

      movies.forEach((movie) => {
        // Create a div element to hold the movie information
        var movieDiv = document.createElement('section');
        
        // Create an image element for the movie poster
        var moviePoster = document.createElement('div');
        var src = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;
        moviePoster.alt = `${movie.name} poster`;
        moviePoster.style.backgroundImage = "url("+src+")";
        
        // Create a p element for the movie title
        var movieTitle = document.createElement('p');
        movieTitle.textContent = movie.name;

        // Add the image and title elements to the div
        movieDiv.appendChild(moviePoster);
        movieDiv.appendChild(movieTitle);

        $(movieDiv).click(function(){
    //      alert(movie.title)
          var editableDiv = document.getElementById("sms_editable");

          var text = editableDiv.innerHTML;
   
            var newText = text.replace(new RegExp('@' + modifiedMovieName, 'g'), `&nbsp;<span class="serie_title" id="${movie.id}">${movie.name}</span>&nbsp;`);
//console.log(newText)
          editableDiv.innerHTML = newText;
       //   $(editableDiv).append(newText);

          $("#hashtag_div").hide();
          $("#sms_editable").css({"color":"#fff"});
        });

        // Add the div to the movie list
        $("#hashtag_inner").append(movieDiv);
      });

      // Handle the TMDB API response
    })
    .catch(error => {
      // console.error(error);
    });
  fetch(`https://api.themoviedb.org/3/search/person?api_key=${API_KEY}&query=${modifiedMovieName.toString()}`)
    .then(response => response.json())
    .then(data => { 
     // console.log (hashtag2+"🇦🇷🇦🇷🇦🇷")
    //  console.log (modifiedMovieName)
      // Assume movies is an array of movie objects returned from the TMDB API
      var movies = data.results;

      movies.forEach((movie) => {
        // Create a div element to hold the movie information
        var movieDiv = document.createElement('section');
        
        // Create an image element for the movie poster
        var moviePoster = document.createElement('div');
        var src = `https://image.tmdb.org/t/p/w500${movie.profile_path}`;
        moviePoster.alt = `${movie.name} poster`;
        moviePoster.style.backgroundImage = "url("+src+")";
        
        // Create a p element for the movie title
        var movieTitle = document.createElement('p');
        movieTitle.textContent = movie.name;

        // Add the image and title elements to the div
        movieDiv.appendChild(moviePoster);
        movieDiv.appendChild(movieTitle);

        $(movieDiv).click(function(){
    //      alert(movie.title)
          var editableDiv = document.getElementById("sms_editable");

          var text = editableDiv.innerHTML;
   
            var newText = text.replace(new RegExp('@' + modifiedMovieName, 'g'), `&nbsp;<span class="cast_title" id="${movie.id}">${movie.name}</span>&nbsp;`);
//console.log(newText)
          editableDiv.innerHTML = newText;
       //   $(editableDiv).append(newText);

          $("#hashtag_div").hide();
          $("#sms_editable").css({"color":"#fff"});
        });

        // Add the div to the movie list
        $("#hashtag_inner").append(movieDiv);
      });

      // Handle the TMDB API response
    })
    .catch(error => {
      // console.error(error);
    });
});


    
    hashtaginn.innerHTML = hashtag2;
    
    
    
    
  } else {
    hashtagDiv.style.display = 'none';
  }
    
  })
  // end of movie or series hashtag   
 
});


}

//   getHashtags      
getHashtags()

function prepare_to_match(movieId){
  
  
   var movieDetailsUrl = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`;
  
  // Fetch movie details from TMDB API
  fetch(movieDetailsUrl)
    .then(response => response.json())
    .then(data => {
      
      var backdrop = data.backdrop_path;
      var posterPath = data.poster_path;
      var title = data.title;
      var overview = data.overview;
      var movieId = data.id;
      var genres = data.genres;
    var productionCompanies = data.production_companies;
       var tagline = data.tagline;
  var duration = data.runtime;
    var language = data.original_language;
    var altTitle = data.title !== data.original_title ? data.original_title : null;
    var revenue = data.revenue; 
    var budget = data.budget;
    var boxOffice = revenue - budget;
       var movieYear = getMovieYear(data.release_date);
    
    
    fetch(`https://api.themoviedb.org/3/movie/${movieId}/images?api_key=${API_KEY}&include_image_language=en&include_image_type=poster`)
  .then(response => response.json())
  .then(data => {
    var ima = data.posters[1]; // or data.backdrops[0] for backdrops
    var imageUrl = `https://image.tmdb.org/t/p/original${ima.file_path}`;
   // console.log(imageUrl); // log the URL of the image to the console  
     document.getElementById("match_img").style.backgroundImage = "url("+imageUrl+")";
    
  })
      $("#match_name").text(title)
      $("#match_time").text(duration+" min") 
    
    
    fetch(`https://api.themoviedb.org/3/movie/${movieId}/images?api_key=${API_KEY}`)
  .then(response => response.json())
  .then(data => {
    var posterPath = data.backdrops[0].file_path; // get the poster image URL from the API response
    var posterUrl = `https://image.tmdb.org/t/p/w500/${posterPath}`; // varruct the full poster image URL
    //  document.getElementById("macro_poster").style.backgroundImage = "url("+posterUrl+")";
      $("#match_box").css({"background-image":"url("+posterUrl+")"})
      /*
      function color_thief() {
    var colorThief = new ColorThief();

    var img = new Image();
    
        
        img.onload = function() {
        // Display main color e.g [125, 189, 193]
        var mainRGB = colorThief.getColor(img);
        // console.log(mainRGB.join(','));
        
   //     var mainColor = document.querySelector('.colors .main .color')
        var a = `rgb(${mainRGB[0]}, ${mainRGB[1]}, ${mainRGB[2]})`;
      //alert(a)
        $("#macro_inner").css({"background-image":"linear-gradient(to bottom, "+a+", #000000) "})
    
    }
    
    img.crossOrigin = "Anonymous";
    img.src = posterUrl.toString(); 
    
}
color_thief()
*/


  })
  .catch(error => {
   // console.error(error);
  });
    fetch(`https://www.omdbapi.com/?apikey=${OMDB_KEY}&t=${title.toString().toLowerCase()}&y=${movieYear}&plot=full`)
  .then(response => response.json())
  .then(data => {
    if (data.Response === 'True') {
        document.querySelector('#match_imdb').innerHTML = data.imdbRating;
    } else {
        return false;
    }
  })

    })
  // end of fetch 
  
  
   $("#match_btn").click(function(){
         
     find_match(movieId)
  })
  
  
}
// prepare_to_match  


//   end of  find_match        

/*
function  find_match(movieId){
   $(function(){

fetch(`https://api.themoviedb.org/3/movie/${movieId}/keywords?api_key=${API_KEY}`)

  .then(response => response.json())
  .then(data => {
    var keywords = data.keywords;
    var filmTags = document.getElementById('change_matchdiv');
filmTags.innerHTML = ""
    keywords.forEach(keyword => {
      var span = document.createElement('p');
      span.textContent = keyword.name;
 //     span.classList.add('tag'); // add a class to the span element for styling
      filmTags.appendChild(span); // append the span element to the filmTags container
    });
  })
 // .catch(error => console.error(error));
})
    
  
}
//   end of  find_match(movieId)  
    function getMovieQuery(movieId) {
      var movieDetailsUrl = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`;
  
  // Fetch movie details from TMDB API
  fetch(movieDetailsUrl)
    .then(response => response.json())
    .then(data => {
      
      var backdrop = data.backdrop_path;
      var posterPath = data.poster_path;
      var title = data.title;
fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${title}`)
  .then(response => response.json())
  .then(data => {
    // Access the movie's query from the API response
    const query = data.results[0].query;
    // Do something with the movie's query
    console.log (data.results )
    console.log (query)
  })
  .catch(error => console.error(error));
})
}
*/
function find_match(movieId) {
  $(function() {
    
    
    fetch(`https://api.themoviedb.org/3/movie/${movieId}/keywords?api_key=${API_KEY}`)
      .then(response => response.json())
      .then(data => {
        var keywords = data.keywords;
        var movieName = data.title;
        var filmTags = document.getElementById('change_matchdiv');
        filmTags.innerHTML = "";
        keywords.forEach(keyword => {
          var span = document.createElement('p');
          span.textContent = keyword.name;
          span.classList.add('tag');
          span.addEventListener('click', function() {
         //   alert("")
            if (this.classList.contains('selected')) {
              this.classList.remove('selected');
            } else {
              this.classList.add('selected');
            }
            var selectedTags = document.querySelectorAll('.tag.selected');
            var selectedKeywords = [];
            selectedTags.forEach(tag => {
              selectedKeywords.push(tag.textContent);
            });
            find_movies(selectedKeywords);
          });
          filmTags.appendChild(span);
        });
      });
  });
}

/*

function find_movies(keywords) {
  var searchQuery = keywords.join('%20');
  var currentDate = new Date().toISOString().slice(0, 10);
  var movieUrl = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false&primary_release_date.lte=${currentDate}`;
  console.log (movieUrl)
  fetch(movieUrl)
    .then(response => response.json())
    .then(data => {
      var movies = data.results;
      var matchResMov = document.getElementById('match_resmov');
      matchResMov.innerHTML = "";
      movies.forEach(movie => {
        var movieDiv = document.createElement('div');
        movieDiv.classList.add('movie');
        var posterUrl = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;
        movieDiv.style.backgroundImage = `url(${posterUrl})`;
        matchResMov.appendChild(movieDiv);
      });
    });
}
*/


function find_movies(keywords) {
//  alert("")
  var searchQuery = keywords.join('%20');
  var movieUrl = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`;
 const releaseYear = new Date().getFullYear() - 2; // Get movies released in the last two years
//  var movieUrl = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_keywords=${searchQuery}`;

  
  fetch(movieUrl)
    .then(response => response.json())
    .then(data => {
      var movies = data.results;
     // console.log(movies)
      var matchResMov = document.getElementById('match_resmov');
      matchResMov.innerHTML = "";
      movies.forEach(movie => {
        var movieDiv = document.createElement('section');
        movieDiv.classList.add('movie');
        var posterUrl = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;
        movieDiv.style.backgroundImage = `url(${posterUrl})`;
        matchResMov.appendChild(movieDiv);
      });
    });
}





//  end of function edit_channelfunc     ()   
/*
 function edit_channelfunc(){
      document.getElementById("channel_formbg").classList.add("drop");    
      var threez = firebase.database().ref("my_channels_root/"+useremail.toString()+"/info");
     threez.on("value", (snapshot) => {
  
    var name =[snapshot.val().name];
    var describe =[snapshot.val().describe];
    var image =[snapshot.val().image];
    var tag =[snapshot.val().tag];
    
    
    document.getElementById("nnelform_img").style.backgroundImage = "url("+image+")";
    
     $("#nnelform_name").val(name)
     $("#nnelform_text").val(describe)
     $("#nnelform_tag").val(tag)
     
})

      
      
 }
//  end of function edit_channelfunc()   

*/

//  open_crewbg     crew   cast    people    actor   Director   closet     
function open_actorfunc(person_id, department){
 
   
  
var actorUrl = `https://api.themoviedb.org/3/person/${person_id.toString()}?api_key=${API_KEY}&language=en-US`; 
//var actorUrl = `https://api.themoviedb.org/3/person/224513?api_key=${API_KEY}&language=en-US`;

fetch(actorUrl)
  .then(response => response.json())
  .then(data => {
    
      document.getElementById('closet_bg').style.width = '100%';
//   alert(person_id +"ggetColorf"+department)
       PREVIOUS_TAB = CURRENT_TAB
    CURRENT_TAB = "closet_bg"
   var newURL = "closet_bg"; 
  history.pushState(null, null, null);
   visitedPages.push("closet_bg"); 
   
    
    
  // console.log(data)  
    var actorName = data.name;
    var dept = data.known_for_department;
    // extract the data you need from the response
    /*
   if (typeof actorName === 'undefined') {
  console.log('myVar is undefined');
} else {
  console.log('myVar is defined');
} 
    */
    var actorBio = data.biography;
    var person_id = data.id;
    var actorBirthday = data.birthday;
    var actorPlaceOfBirth = data.place_of_birth;
      var alsoKnownAs = data.also_known_as;
    var actorProfilePictureUrl = `https://image.tmdb.org/t/p/w500${data.profile_path}`;
    
   $("#closet_birthdate").text(`${formatDate(actorBirthday)}`)
 //  alert(age);
  


    
    
    
    
    
      $("#closet_id").text(person_id)
      document.getElementById("closet_image").style.backgroundImage = "url("+actorProfilePictureUrl+")";
      $("#closet_name").text(actorName)
      $("#closet_dept").text(dept)
      $("#closet_describe").text(actorBio)
      $("#closet_birthplace").text(actorPlaceOfBirth)

    // Join the values with a comma separator
    var alsoKnownAsString = alsoKnownAs.join(', ');
      $("#closet_aka").text(alsoKnownAsString)
    
if (data.deathday) {
     $("#closet_deathdiv").show()
     $("#closet_deathval").text(formatDate(data.deathday))
    } else {
     $("#closet_deathdiv").hide()
     
    }
   
   $(function(){
var container = document.getElementById('closet_webval');
container.innerHTML = ""
if (data.homepage) {
     $("#closet_webdiv").show()
 var link = document.createElement('a');
link.href = data.homepage ;
link.target = '_blank';
link.textContent = data.homepage ;

// Add the link to the desired element in the DOM
container.appendChild(link);

    
    } else {
     $("#closet_webdiv").hide()
     
    }
     var holdTimer; // Variable to store the hold timer

// Function to handle the long press event
function handleLongPress() {
  // Your custom code here
 copyToClipboard(data.homepage)
  small_alertfunc('Copied link to Clipboard')
  //  alert("")
  // Clear the hold timer
  clearTimeout(holdTimer);
}

// Function to start the hold timer
function startHoldTimer() {
  holdTimer = setTimeout(handleLongPress, 1000); // 5000 milliseconds = 5 seconds
}

// Function to cancel the hold timer
function cancelHoldTimer() {
  clearTimeout(holdTimer);
}

// Get the reference to the "" div element
var filmHomepage = document.getElementById('closet_webval');

// Attach event listeners for touch and mouse events
filmHomepage.addEventListener('touchstart', startHoldTimer);
filmHomepage.addEventListener('touchend', cancelHoldTimer);
filmHomepage.addEventListener('mousedown', startHoldTimer);
filmHomepage.addEventListener('mouseup', cancelHoldTimer);


     
   })

    document.getElementById("closet_listdiv").innerHTML = '';
   
  if((dept.toString().toLowerCase().trim() == "directing" )){
 itsadirector() 
  }
  else if((dept.toString().toLowerCase().trim() == "writing" )){
 itsawriter() 
  }
  else{
itsnotadirector()
  }
  
  function itsnotadirector(){
   var url = `https://api.themoviedb.org/3/person/${person_id}/movie_credits?api_key=${API_KEY}&language=en-US`;
  var url2 = `https://api.themoviedb.org/3/person/${person_id}/tv_credits?api_key=${API_KEY}&language=en-US`;
fetch(url)
  .then(response => response.json())
  .then(data => {
    var movies = data.cast;
    // loop through the movies and create sections with backdrops as their background images
    for (let i = 0; i < movies.length; i++) {
      var movie = movies[i];
      var backdropUrl = `https://image.tmdb.org/t/p/w500${movie.backdrop_path}`;
      var posterUrl = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;
     
   
      var sec2 = document.createElement('section');
      sec2.style.backgroundImage = `url('https://image.tmdb.org/t/p/w500${movie.poster_path}')`;
      
          $(sec2).click(function(){
            var a = (movies[i].title);
            var b = (movies[i].id);
             open_opera(a, b, 'https://api.themoviedb.org/3/movie')  
          })
          
      $("#closet_listdiv").append(sec2)

    }
  });
// end of movies  credit 
  
fetch(url2)
  .then(response => response.json())
  .then(data => {
    var movies = data.cast;
  
    // loop through the movies and create sections with backdrops as their background images
    for (let i = 0; i < movies.length; i++) {
      var movie = movies[i];
    
      var backdropUrl = `https://image.tmdb.org/t/p/w500${movie.backdrop_path}`;
      var posterUrl = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;
   
   
      var sec2 = document.createElement('section');
      sec2.style.backgroundImage = `url('https://image.tmdb.org/t/p/w500${movie.poster_path}')`;
      
          $(sec2).click(function(){
            var a = (movies[i].title);
            var b = (movies[i].id);
             open_opera(a, b, 'https://api.themoviedb.org/3/tv')  
          })
          
      $("#closet_listdiv").append(sec2)

    }
  });
// end of series  credit 
    
  }
// end of function 




function itsadirector(){


 var driveInner = document.getElementById('closet_listdiv');
 driveInner.innerHTML = ''

var searchMoviesByDirector = async () => {
  try {
    var response = await fetch(
      `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_crew=${person_id}`
    );
    var data = await response.json();
    var movies = data.results;
    return movies;
  } catch (error) {
   // console.log('Error:', error);
  }
};

var searchSeriesByDirector = async () => {  
  try {
    var response = await fetch(
      `https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&with_crew=${person_id}`
    );
    var data = await response.json();
    var series = data.results;
    return series;
  } catch (error) {
 //  console.log('Error:', error);
  }
};

var displaySeries = async () => {
  var series = await searchSeriesByDirector();

  series.forEach(serie => {
    var section = document.createElement('section');
    section.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${serie.backdrop_path})`;
    driveInner.appendChild(section);
      $(section).click(function(){
      var a = movie.name;
      var b = movie.id;
      open_opera(a, b, "https://api.themoviedb.org/3/tv");
    })
  });
};

// Call the function to search and display TV series directed by a specific director
displaySeries();



var displayMovies = async () => {
  var movies = await searchMoviesByDirector();
 

  movies.forEach(movie => {
    var section = document.createElement('section');
    section.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`;
    driveInner.appendChild(section);
     $(section).click(function(){
      var a = movie.title;
      var b = movie.id;
      open_opera(a, b, "https://api.themoviedb.org/3/movie");
    })
  });
};

// Call the function to search and display movies directed by a specific director
displayMovies();

    
    
  
  
  
}
// end of function 
     
function itsawriter(){


fetch(`https://api.themoviedb.org/3/person/${person_id}/combined_credits?api_key=${API_KEY}`)
  .then((response) => response.json())
  .then((data) => {
    // Handle the response data containing combined credits
    const credits = data.cast.concat(data.crew);
    const writerCredits = credits.filter((credit) => credit.department === 'Writing');

    // Process the writer's credits as desired
 //   console.log('Writer Credits:', writerCredits);
 writerCredits.forEach(processWriterCredit)
 
  })
  .catch((error) => {
   // console.log('Error fetching writer credits:', error);
  });
function processWriterCredit(credit) {
//  console.log('Processing credit:', credit.title, credit);
    var a = document.createElement("section")
  // console.log(credit)
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${credit.poster_path})`
   //  $(a).addClass("late_kids")
  
     $(a).click(function(){
       open_opera ("", credit.id, credit.media_type)
     })
     $("#closet_listdiv").append(a)
  // Add your custom logic here to process each credit
}


  
}
// end of function 

   
   
  })
 .catch(function(error) { 
  failure_alert("Failed to fetch actor details!")
});

   
   
   
   
   
    
}


// getCategoryFromUrl      category  
function getCategoryFromUrl(url) {
  if (url.startsWith("https://api.themoviedb.org/3/movie")) {
    return "movies";
  } else if (url.startsWith("https://api.themoviedb.org/3/tv")) {
    return "series";
  } else if (url.startsWith("https://api.themoviedb.org/3/discover/movie")) {
    return "movies";
  } else if (url.startsWith("https://api.themoviedb.org/3/discover/tv")) {
    return "series";
  } else if (url.startsWith("https://api.themoviedb.org/3/search/movie")) {
    return "movies";
  } else if (url.startsWith("https://api.themoviedb.org/3/search/tv")) {
    return "series";
  }  else if (url.toString().toLowerCase().trim()=="series") {
    return "series";
  } else if (url.toString().toLowerCase().trim()=="movies") {
    return "movies";
  } else if (url.toString().toLowerCase().trim()=="movie") {
    return "movies";
  }else if (url.toString().toLowerCase().trim()=="tv") {
    return "series";
  }else {
    return "unknown";
  }
}
// getCategoryFromUrl      category  

// date   formatDate  
function formatDate(dateString) {
  const date = new Date(dateString);
  const year = date.getFullYear();
  const month = date.toLocaleString('default', { month: 'long' });
  const day = date.getDate();
  return `${day} ${month} ${year}`;
}
function checkMediaType(url) {
 

const urlParts = url.split("?alt=");
 const imageUrl = urlParts[0]; 
 const altParam = urlParts[1] || '';
//  return { imageUrl: imageUrl, altParam: altParam };

  var extension = imageUrl.split('.').pop().toLowerCase();
  return ['jpg', 'jpeg', 'png', 'gif', 'bmp'].indexOf(extension) >= 0 ? 'image' :
         ['mp4', 'm4v', 'webm', 'ogv', 'mov'].indexOf(extension) >= 0 ? 'video' :
         'unknown';

}

//  comments    comment           open_commenttab   comment_tabbg         
function open_commenttab(postId, postType, seriesId, seasonno, episodeno){
  document.getElementById('comment_tabbg').style.width = '100%';
   PREVIOUS_TAB = CURRENT_TAB

  CURRENT_TAB = "comment_tabbg"

   
  history.pushState(null, null, null);
   visitedPages.push("comment_tabbg");
   document.getElementById("comment_middle").innerHTML = ""
   //  alert (postId)
  if(postType.toString().toLowerCase().trim() == "post"){
    itsapost()
  }
  else if(postType.toString().toLowerCase().trim() == "series_episode"){
    itsanepisode()
  }
   function itsapost(){
    
     var m =   firebase.database().ref("global_comments/posts/"+postId.toString())
  m.on("child_added", (snapshot) => {
   // console.log(snapshot.val())
    var time  =[snapshot.val().time]; 
    var date  =[snapshot.val().date]; 
    var htmlmsg  =[snapshot.val().htmlmessage]; 
    var textmsg  =[snapshot.val().textmessage]; 
    var idy  =[snapshot.val().postId]; 
    var type  =[snapshot.val().postType]; 
    var senderemail  =[snapshot.val().useremail]; 
    var commentId  =[snapshot.val().commentId]; 
    var extra1  =[snapshot.val().extra1]; 
    var extra2  =[snapshot.val().extra2]; 
  for (let i = 0; i < senderemail.length; i++) {
    var sec = document.createElement("section")
    var nav = document.createElement("nav")
    var img = document.createElement("header")
    var msg = document.createElement("div")
    var aside = document.createElement("aside")
    var svg = document.createElement("svg")
    var num = document.createElement("div")
    var below = document.createElement("div")
    var span_name = document.createElement("div")
    var span_date = document.createElement("span")
    var span_reply = document.createElement("span")
   
    var flex_div = document.createElement("div")
    
    $(msg).addClass("comment_msg")
    $(below).addClass("comment_below")
    $(span_name).addClass("twit_username")
    $(span_date).addClass("comment_date")
    $(flex_div).addClass("display_flex display_column")
    
    $(below).append(span_date, span_reply)
    
      update_commentFormattedDate(date, time, span_date)
           setInterval(() => {
  update_commentFormattedDate(date, time, span_date);
}, 60000); // 60000 milliseconds = 1 minute
     $(svg).append('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-heart" viewBox="0 0 16 16"><path d="m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z"/></svg>')
     $(span_reply).append('<svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" class="bi bi-reply" viewBox="0 0 16 16"><path d="M6.598 5.013a.144.144 0 0 1 .202.134V6.3a.5.5 0 0 0 .5.5c.667 0 2.013.005 3.3.822.984.624 1.99 1.76 2.595 3.876-1.02-.983-2.185-1.516-3.205-1.799a8.74 8.74 0 0 0-1.921-.306 7.404 7.404 0 0 0-.798.008h-.013l-.005.001h-.001L7.3 9.9l-.05-.498a.5.5 0 0 0-.45.498v1.153c0 .108-.11.176-.202.134L2.614 8.254a.503.503 0 0 0-.042-.028.147.147 0 0 1 0-.252.499.499 0 0 0 .042-.028l3.984-2.933zM7.8 10.386c.068 0 .143.003.223.006.434.02 1.034.086 1.7.271 1.326.368 2.896 1.202 3.94 3.08a.5.5 0 0 0 .933-.305c-.464-3.71-1.886-5.662-3.46-6.66-1.245-.79-2.527-.942-3.336-.971v-.66a1.144 1.144 0 0 0-1.767-.96l-3.994 2.94a1.147 1.147 0 0 0 0 1.946l3.994 2.94a1.144 1.144 0 0 0 1.767-.96v-.667z"/></svg>')
     
    $(msg).html(htmlmsg)
       
        $(function(){
 var database = firebase.database();
 
 var userId = useremail; 
  var userRef = database.ref('comment_likes/' + postId.toString() +'/'+ commentId.toString() + '/' + userId.toString());
svg.addEventListener('click', function() {
 // alert(userRef)
  // Check if the user has already liked the post

  userRef.once('value', function(snapshot) {
    var hasLiked = snapshot.val();

    if (hasLiked) {
      // User has already liked the post, so remove the like
      userRef.remove();
     
    } else {
      // User has not liked the post, so add the like
      userRef.set(true);
   
    }
  });
});
userRef.on('value', function(snapshot) {
    var hasLiked = snapshot.val();
    if (hasLiked) {
      $(svg).addClass('like_effect')
      $(svg).css({"color":"red", "transition" : "color 0.5s"})
    }
    else{
      $(svg).removeClass('like_effect')
      $(svg).css({"color":"#fff"})
    }
  })
function getTotalLikes(postId , commentId) {
  var likesRef = database.ref('comment_likes/' +postId.toString() +'/' + commentId.toString());
//  alert(likesRef)
  likesRef.on('value', function(snapshot) {
    var likes = snapshot.val(); 
  //  console.log(likes)
    var totalLikes = Object.keys(likes || {}).length;
  
var formattedLikes = formatNumber(totalLikes);
$(num).text(formattedLikes);
  });
}
getTotalLikes(postId, commentId);               
               
        })
    $(function(){
      if(senderemail.toString().toLowerCase().trim() == useremail.toString().toLowerCase().trim()){
         var span_del = document.createElement("span")
     $(span_del).append('<svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16"><path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5Zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6Z"/><path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1ZM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118ZM2.5 3h11V2h-11v1Z"/></svg>')
     
     $(span_del).click(function(){
         var childKey = snapshot.key;
   confirm_function("Do you wish to delete comment?")
 
 window.confirm_yesfunc = function (){
              sec.remove();
           snapshot.ref.remove()
 }
 window.confirm_nofunc = function (){
 //  alert("no")
 }
            // Remove the snapshot from the database
     })
     
         $(span_del).appendTo(below)
      }
    })
    // delete function 
 //   $(num).text('0')
    getUsernameFromFirebase(senderemail.toString())
  .then((username) => {
    if (username) {
   //   console.log("Username:", username);
   $(span_name).text(username)
    }
  }) 
    $(aside).append(svg, num)
    $(flex_div).append(span_name, msg, below)
    $(nav).append(img, flex_div)
    $(sec).append(nav, aside)
    $("#comment_middle").prepend(sec)
  }     
     //  end of for each 
     })
     
     
    
     window.send_a_comment = function(){
  // alert("")
  var input = document.getElementById("comment_text")
   var htmlmessage = input.innerHTML
   var textmessage = input.innerText
   //var postId = input.innerText
     var d = new Date();

       var time_string = d.toLocaleTimeString();

     var date = d.getDate();
    var fullyear = d.getFullYear();
    var month = d.getMonth();
   month= month+1;
var date_string=(fullyear+"|"+month+"|"+date);
var msgsRef = firebase.database().ref("global_comments/posts/"+postId.toString())
 if ((navigator.onLine) && (textmessage !== "")) {
   
var myArray = [1, 2, 3, 4, 5,6,7 ,8, 9, 0 ];
var randomItem = getRandomItem(myArray);
var commentId = Date.now() + '-' + useremail.toString() + '-' + postType.toString() + '-' + postId.toString() +'-' +randomItem.toString()
//  alert(commentId)

 msgsRef.push ({ 
useremail: useremail.toString(), 
htmlmessage: htmlmessage.toString(), 
textmessage: textmessage.toString(), 
postId:postId.toString(),
postType:postType.toString(),
extra1:"",
extra2:"",
commentId:commentId,
date:date_string.toString(),
time:time_string.toString()
  
  }).then(function(){
  document.getElementById("comment_text").innerHTML = ""
  }).catch(function(error) { 
  failure_alert(error.message)
});
  

}
  
     }
     // end of function 
     
     $("#comment_send").click(function(){
    send_a_comment() 
  })
    // send_a_comment(postId, postType, path)
     
     
     
   }
//  end of function  



   function itsanepisode(){   
    
      var m =   firebase.database().ref(`film_comments/series/${seriesId.toString()}/${seasonno}/${episodeno}`)
  m.on("child_added", (snapshot) => {
   // console.log(snapshot.val())
    var time  =[snapshot.val().time]; 
    var date  =[snapshot.val().date]; 
    var htmlmsg  =[snapshot.val().htmlmessage]; 
    var textmsg  =[snapshot.val().textmessage]; 
    var idy  =[snapshot.val().postId]; 
    var type  =[snapshot.val().postType]; 
    var senderemail  =[snapshot.val().useremail]; 
    var commentId  =[snapshot.val().commentId]; 
    var extra1  =[snapshot.val().extra1]; 
    var extra2  =[snapshot.val().extra2]; 
  for (let i = 0; i < senderemail.length; i++) {
    var sec = document.createElement("section")
    var nav = document.createElement("nav")
    var img = document.createElement("header")
    var msg = document.createElement("p")
    var aside = document.createElement("aside")
    var svg = document.createElement("svg")
    var num = document.createElement("div")
    
     $(svg).append('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-heart" viewBox="0 0 16 16"><path d="m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z"/></svg>')
    $(msg).html(htmlmsg)
       
        $(function(){
 var database = firebase.database();
 
 var userId = useremail; 
  var userRef = database.ref(`filmcomment_likes/series/${seriesId.toString()}/${seasonno}/${episodeno}/${commentId}/${userId}`);   
svg.addEventListener('click', function() {
 // alert(userRef)
  // Check if the user has already liked the post

  userRef.once('value', function(snapshot) {
    var hasLiked = snapshot.val();

    if (hasLiked) {
      // User has already liked the post, so remove the like
      userRef.remove();
     
    } else {
      // User has not liked the post, so add the like
      userRef.set(true);
   
    }
  });
});
userRef.on('value', function(snapshot) {
    var hasLiked = snapshot.val();
    if (hasLiked) {
      $(svg).addClass('like_effect')
      $(svg).css({"color":"red", "transition" : "color 0.5s"})
    }
    else{
      $(svg).removeClass('like_effect')
      $(svg).css({"color":"#fff"})
    }
  })
function getTotalLikes(postIdy , commentId) {
  var likesRef =  database.ref(`filmcomment_likes/series/${seriesId.toString()}/${seasonno}/${episodeno}/${commentId}`);
//  alert(likesRef)
  likesRef.on('value', function(snapshot) {
    var likes = snapshot.val(); 
  //  console.log(likes)
    var totalLikes = Object.keys(likes || {}).length;
  
var formattedLikes = formatNumber(totalLikes);
$(num).text(formattedLikes);
  });
}
getTotalLikes(postId, commentId);               
               
        })
    
    
 //   $(num).text('0')
    
    $(aside).append(svg, num)
    $(nav).append(img, msg)
    $(sec).append(nav, aside)
    $("#comment_middle").prepend(sec) 
  }     
     //  end of for each 
     })
     
     
    
     window.send_a_comment = function(){
  // alert("")
  var input = document.getElementById("comment_text")
   var htmlmessage = input.innerHTML
   var textmessage = input.innerText
   //var postId = input.innerText
     var d = new Date();

       var time_string = d.toLocaleTimeString();

     var date = d.getDate();
    var fullyear = d.getFullYear();
    var month = d.getMonth();
   month= month+1;
var date_string=(fullyear+"|"+month+"|"+date);
var msgsRef = firebase.database().ref(`film_comments/series/${seriesId.toString()}/${seasonno}/${episodeno}`)
 //  alert(textmessage)
 if ((navigator.onLine) && (textmessage !== "")) {
var myArray = [1, 2, 3, 4, 5,6,7 ,8, 9, 0 ];
var randomItem = getRandomItem(myArray);

 msgsRef.push ({ 
useremail: useremail.toString(), 
htmlmessage: htmlmessage.toString(), 
textmessage: textmessage.toString(), 
postId:postId.toString(),
postType:postType.toString(),
extra1:"",
extra2:"",
commentId:Date.now() + '-' + useremail.toString() + '-series'+ postId.toString() +'-' +randomItem.toString(),
date:date_string.toString(),
time:time_string.toString()
  
  }).then(function(){
  document.getElementById("comment_text").innerHTML = ""
  }).catch(function(error) { 
  failure_alert(error.message)
});

}
  
     }
     // end of function 
     
     $("#comment_send").click(function(){
    send_a_comment() 
  })
      
    // send_a_comment(postId, postType, path)
     
     
     
   }  
//  end of function  
  
  
  
  
  
}
//  comments    comment  open_commenttab   
 
 
 $(function(){
let currentPage = 1;
var moviesPerPage = 15;
let totalMovies = 0;
// Function to fetch more images (movies) from TMDB API
function fetchActorImages() {
  // Calculate the total number of pages needed to fetch the desired number of movies   actor       Actors    
  var totalPages = Math.ceil(totalMovies / moviesPerPage);
  
  // Check if all movies have been fetched already
  if (currentPage > totalPages) {
 //   console.log('All movies have been fetched!');
    return;
  }
  
  var bedy = `https://api.themoviedb.org/3/trending/person/week?api_key=${API_KEY}&include_adult=false&page=${currentPage}`
  //  var bedy = `https://api.themoviedb.org/3/movie/upcoming?api_key=${API_KEY}&language=en-US&page=${currentPage}`  
 // alert(bedy)
  fetch(bedy)
    .then(response => response.json())
    .then(data => {
      //  console.log(data)
      var popularLateDiv = document.getElementById('theater_late');  
      data.results.forEach(movie => {
  
      var ab = document.createElement("section");
      var b = document.createElement("div");
      var c = document.createElement("div");
      var d = document.createElement("div");
      var e = document.createElement("div");
      var f = document.createElement("div");
      var i = document.createElement("div");
      
      $(d).addClass("son_filmimage")
      $(c).addClass("son_innertwo")
       $(i).addClass("son_filmimdb")
      $(b).addClass("actor_innerboard")
      $(ab).addClass("actor_section")
      $(e).addClass("son_filmmore")
      $(f).addClass("son_filmname") 
   //   b.style.backgroundImage = `url('https://image.tmdb.org/t/p/w500${movie.profile_path}')`;
      d.style.backgroundImage = `url('https://image.tmdb.org/t/p/w500${movie.profile_path}')`;
    
     $(f).text(movie.name)
     $(i).text(movie.known_for_department)
    
    movie.known_for.forEach(item => {
      var cover = document.createElement("div")
      cover.style.backgroundImage = `url('https://image.tmdb.org/t/p/w500${item.poster_path}')`;
      cover.id ="known_latest"
      $(cover).appendTo(b)
      $(cover).click(function(){
       open_opera(item.title, item.id, item.media_type)
     })
    
    })
      
       
       $(e).append(f,i);
       $(c).append(d, e);
      $(ab).append(b,c);
       $(d).click(function(){
         
        check_enlarge(`https://image.tmdb.org/t/p/w500${movie.profile_path}`, "image");
     })
       $(f).click(function(){
       open_actorfunc(movie.id, movie.known_for_department)
     })
    
      $("#actor_latest").append(ab);
       
       
       
     
      });
      
      // Increment the current page counter
      currentPage++;
    })
    .catch(error => {
     // console.error('Error fetching movies:', error);
    });
    
}

// Wrap the code inside DOMContentLoaded event listener
$(function(){
  // Fetch the total number of movies from TMDB API to calculate the total number of pages
    
  fetch(`https://api.themoviedb.org/3/trending/person/week?api_key=${API_KEY}&include_adult=false`)
    .then(response => response.json())
    .then(data => {
      totalMovies = data.total_results;
      fetchActorImages();
    })
    .catch(error => {
  //   console.error('Error fetching total number of movies:', error);
    });

  document.getElementById('actor_latest').addEventListener('scroll', function(event) {
    // Check if the user has scrolled to the end of the div
    if (event.target.scrollLeft + event.target.clientWidth + 1 >= event.target.scrollWidth) {
   
      fetchActorImages();
    }
  });

});



 })
 function formatNumber(number) {
  if (number >= 1000000) {
    // If the number is a million or greater
    return (number / 1000000).toFixed(1) + 'M';
  } else if (number >= 1000) {
    // If the number is a thousand or greater
    return (number / 1000).toFixed(1) + 'k';
  } else {
    // For smaller numbers, return the original number
    return number.toString();
  }
}
 function getRandomItem(array) {
  var randomIndex = Math.floor(Math.random() * array.length);
  return array[randomIndex];
}
//  loader   load   
function start_loading(){
  $("#loader_spinbg").show()
   PREVIOUS_TAB = CURRENT_TAB

  CURRENT_TAB = "loader_spinbg"

  history.pushState(null, null, null);
   visitedPages.push("loader_spinbg");
}
function stop_loading(){
  $("#loader_spinbg").hide()   
  history.back();     

    CURRENT_TAB = visitedPages[visitedPages.length - 1];

  history_back()
}

function start_load_no_node(){
  $("#loader_spinbg").show()
}
function stop_load_no_node(){
  $("#loader_spinbg").hide()   
}
function open_loader(text){
  $("#loader_text").text(text)
  document.getElementById("stack_loaderdiv").style.bottom = "1px";
}
function close_loader(){
  document.getElementById("stack_loaderdiv").style.bottom = "-50vh";
  $("#loader_text").text("")
  $("#stack_loaderbg").hide()
}

function isDivScrolledToBottom(div) {
  var scrollThreshold = 1; // Set the scroll threshold as needed

  // Calculate the scroll height, client height, and scroll position
  var scrollHeight = div.scrollHeight;
  var clientHeight = div.clientHeight;
  var scrollPosition = div.scrollTop;

  // Calculate the total height, including margin and padding
  var totalHeight = scrollHeight + parseInt(getComputedStyle(div).marginTop) + parseInt(getComputedStyle(div).marginBottom) +
    parseInt(getComputedStyle(div).paddingTop) + parseInt(getComputedStyle(div).paddingBottom);

  // Check if the div has been scrolled to its bottom
  if (scrollPosition >= totalHeight - clientHeight - scrollThreshold) {
    return true;
  } else {
    return false;
  }
}
/*
var genreID = '12'; // Replace with the genre ID for Adventure
var endpoint = `https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&with_original_language=en&sort_by=popularity.desc&include_adult=false&with_genres=${genreID}`;

fetch(endpoint)
  .then(response => response.json())
  .then(data => {
    const adventureSeries = data.results;
    console.log(adventureSeries);
    // Perform further operations with the adventure series list
  })
  .catch(error => {
    console.error('Error fetching adventure series:', error);
  });
*/

      function copyToClipboard(str) {
  var el = document.createElement('textarea');
  el.value = str;
  document.body.appendChild(el);
  el.select();
  document.execCommand('copy');
  document.body.removeChild(el);
}

 function fetchMovieTrailer(movieId, type, parent) {
   if((type.toString().toLowerCase() == "movie") || (type.toString().toLowerCase() == "movies")){
     one()
   }
   else if((type.toString().toLowerCase() == "series") || (type.toString().toLowerCase() == "tv")){
     two()
   }
   function one(){
  fetch(`https://api.themoviedb.org/3/movie/${movieId}/videos?api_key=${API_KEY}`)
    .then(response => response.json())
    .then(data => {
      // Find the first trailer video from the API response
      const trailer = data.results.find(result => result.type === "Trailer");
      
      if (trailer) {
        const trailerKey = trailer.key; // Get the trailer video key
        const trailerUrl = `https://www.youtube.com/embed/${trailerKey}`; // Construct the YouTube video URL
        
        // Create an iframe element
        const iframe = document.createElement("iframe");
        iframe.src = trailerUrl;
        iframe.width = "560";
        iframe.height = "315";
        iframe.frameBorder = "0";
        iframe.allowFullscreen = true;
        
        // Append the iframe to the "opera_vidsection" element
        var operaVidSection = document.getElementById(parent);
        operaVidSection.innerHTML = ""; // Clear any existing content
        operaVidSection.appendChild(iframe);
      } else {
      //  console.log("Trailer not found.");
      }
    })
    .catch(error => {
     // console.error("Error fetching movie trailer:", error);
    });
   
   }
  function two() {
  fetch(`https://api.themoviedb.org/3/tv/${movieId}/videos?api_key=${API_KEY}`)
    .then(response => response.json())
    .then(data => {
      let videoUrl = null;

      // Check for specific types of videos and prioritize them
      const typesToCheck = ["Main Trailer", "Trailer", "Teaser"];

      for (let i = 0; i < data.results.length; i++) {
        const video = data.results[i];

        if (typesToCheck.includes(video.type)) {
          const videoKey = video.key;
          videoUrl = `https://www.youtube.com/embed/${videoKey}`;
          break;
        }
      }

      // If no specific type found, use the first available video
      if (!videoUrl && data.results.length > 0) {
        const videoKey = data.results[0].key;
        videoUrl = `https://www.youtube.com/embed/${videoKey}`;
      }

      if (videoUrl) {
        // Create an iframe element
        const iframe = document.createElement("iframe");
        iframe.src = videoUrl;
        iframe.width = "560";
        iframe.height = "315";
        iframe.frameBorder = "0";
        iframe.allowFullscreen = true;

        // Append the iframe to the "opera_vidsection" element
         var operaVidSection = document.getElementById(parent);
        operaVidSection.innerHTML = ""; // Clear any existing content
        operaVidSection.appendChild(iframe);
      } else {
       // console.log("No videos found for the series.");
      }
    })
    .catch(error => {
   //   console.error("Error fetching series videos:", error);
    });
}

}

function extractMovieTitles(htmlmessage) {
  var container = document.createElement('div');
  container.innerHTML = htmlmessage;

  var movieTitleElements = container.querySelectorAll('span');
  
  var movieTitles = [];

  movieTitleElements.forEach(function(element) {
    var id = element.getAttribute('id'); // Get the ID from a custom data attribute
    var classy = element.getAttribute('class'); // Get the ID from a custom data attribute
    var value = element.textContent;
    
    // Create an object with ID and value properties
    var movie = {
      id: id,
      classy: classy,
      value: value
    };

    // Add the object to the movieTitles array
    movieTitles.push(movie);
  });

  container.remove();

  return movieTitles;
}

$(function(){
  // surf_list
  /*
   <div class= "option_item btn" id="quote_eightteen">

       <span> War </span>

       <span><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#fff" class="bi bi-chevron-right" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/>
</svg></span>
       </div>
  */
  //  genre       genre array      
 var genrearray = [
  "action",
  "adventure",
  "animation",
  "comedy",
  "crime",
  "documentary",
  "drama",
  "family",
  "fantasy",
  "history",
  "horror",
  "kids",
  "music",
  "mystery",
  "news",
  "reality",
  "romance",
  "sci-fi",
  "soap",
  "talk show",
  "thriller",
  "TV movie",
  "war",
  "western"
];

 var bgarray = [
  "action",
  "adventure",
  "animation",
  "comedy",
  "crime",
  "documentary",
  "drama",
  "family",
  "fantasy",
  "history",
  "horror",
  "kids",
  "music",
  "mystery",
  "news",
  "reality",
  "romance",
  "sci-fi",
  "soap",
  "talk show",
  "thriller",
  "TV movie",
  "war",
  "western"
];

 var subarray = [
  "action (Movies & Series)",
  "adventure (Movies)",
  "animation (Movies & Series)",
  "comedy (Movies & Series)",
  "crime (Movies & Series)",
  "documentary (Movies & Series)",
  "drama (Movies & Series)",
  "family (Movies & Series)",
  "fantasy (Movies)",
  "history (Movies)",
  "horror (Movies)",
  "kids (Series)",
  "music (Movies)",
  "mystery (Movies & Series)",
  "news (Series)",
  "reality (Series)",
  "romance (Movies)",
  "sci-fi",
  "soap (Series)",
  "talk show (Series)",
  "thriller (Movies)",
  "TV movie (Movies)",
  "war",
  "western (Movies & Series)"
];

var genremovid = [
  28,
  12,
  16,
  35,
  80,
  99,
  18,
  10751,
  14,
  36,
  27,
  'nothing here', // no actual genre number
  10402,
  9648,
  'nothing here', // no actual genre number
  'nothing here', // no actual genre number
  10749,
  878,
  'nothing here', // no actual genre number
  'nothing here', // no actual genre number
  53,
  10770,
  10752,
  37
];

var genreserid = [
  10759,
  12,
  16,
  35,
  80,
  99,
  18,
  10751,
  'nothing here', // no actual genre number
  'nothing here', // no actual genre number
  'nothing here', // no actual genre number
  10762,
  'nothing here', // no actual genre number
  9648,
  10763,
  10764,
  'nothing here', // no actual genre number
  'nothing here', // no actual genre number
  10766,
  10767,
  'nothing here', // no actual genre number
  'nothing here', // no actual genre number
  'nothing here', // no actual genre number
  37
];


var movarray = [
  'https://api.themoviedb.org/3/discover/movie',
  'https://api.themoviedb.org/3/discover/movie',
  'https://api.themoviedb.org/3/discover/movie',
  'https://api.themoviedb.org/3/discover/movie',
  'https://api.themoviedb.org/3/discover/movie',
  'https://api.themoviedb.org/3/discover/movie',
  'https://api.themoviedb.org/3/discover/movie',
  'https://api.themoviedb.org/3/discover/movie',
  'https://api.themoviedb.org/3/discover/movie',
  'https://api.themoviedb.org/3/discover/movie',
  'https://api.themoviedb.org/3/discover/movie',
  'nothing here', // no actual genre number
  'https://api.themoviedb.org/3/discover/movie',
  'https://api.themoviedb.org/3/discover/movie',
  'nothing here', // no actual genre number
  'nothing here', // no actual genre number
  'https://api.themoviedb.org/3/discover/movie',
  'https://api.themoviedb.org/3/discover/movie',
  'nothing here', // no actual genre number
  'nothing here', // no actual genre number
  'https://api.themoviedb.org/3/discover/movie',
  'https://api.themoviedb.org/3/discover/movie',
  'https://api.themoviedb.org/3/discover/movie',
  'https://api.themoviedb.org/3/discover/movie'
];

var serarray = [
  'https://api.themoviedb.org/3/discover/tv',
  'https://api.themoviedb.org/3/discover/tv',
  'https://api.themoviedb.org/3/discover/tv',
  'https://api.themoviedb.org/3/discover/tv',
  'https://api.themoviedb.org/3/discover/tv',
  'https://api.themoviedb.org/3/discover/tv',
  'https://api.themoviedb.org/3/discover/tv',
  'https://api.themoviedb.org/3/discover/tv',
  'nothing here',
  'nothing here',
  'nothing here',
  'https://api.themoviedb.org/3/discover/tv',
  'nothing here',
  'https://api.themoviedb.org/3/discover/tv',
  'https://api.themoviedb.org/3/discover/tv', // no actual genre number
  'https://api.themoviedb.org/3/discover/tv', // no actual genre number
  'nothing here',
  'https://api.themoviedb.org/3/discover/tv',
  'https://api.themoviedb.org/3/discover/tv', // no actual genre number
  'https://api.themoviedb.org/3/discover/tv', // no actual genre number
  'nothing here',
  'nothing here',
  'https://api.themoviedb.org/3/discover/tv',
  'https://api.themoviedb.org/3/discover/tv'
];
var combinedArray = [];

for (var i = 0; i < genrearray.length; i++) {
  var item = genrearray[i];
  var id = genremovid[i];
  var id2 = genreserid[i];
  var sub = subarray[i];
  var bgimage = bgarray[i];
  var movieurl = movarray[i];
  var serieurl = serarray[i];
  
  combinedArray.push({
    name: item,
    movid: id,
    serid: id2,
    bgsrc: bgimage,
    movurl: movieurl,
    serurl: serieurl,
    subject: sub
  });
}

combinedArray.forEach(item => {
  var cover = document.getElementById("surf_list");
  var div = document.createElement('div');
  var span1 = document.createElement('span');
  var span2 = document.createElement('span');

  $(div).addClass("option_item btn");
  $(span1).addClass("capital_text");
  
  div.style.backgroundImage = `url('${item.bgsrc}')`;   
  
  $(span1).text(item.name);
  $(span2).append('<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#fff" class="bi bi-chevron-right" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z"/></svg>');
  $(div).append(span1, span2);

  $(div).click(function() {
    $("#tag_headerval").text(item.subject);
// alert(item.id)
    open_tagbg (item.movid, item.serid, item.movurl, item.serurl);
  // console.log(item.movid, item.serid, item.movurl, item.serurl, item.subject )
  });

  cover.appendChild(div);
});

  
  
  
  
  
  
  
  
  
  
  
})
//  end of function 

 function open_tagbg(movgenreID, sergenreID, link1, link2){
   //   alert(tag)
        document.getElementById("tag_bg").classList.add("drop");
        
  PREVIOUS_TAB = CURRENT_TAB
  CURRENT_TAB = "tag_bg"
  history.pushState(null, null, null);
   visitedPages.push("tag_bg");
        
        
        
        var action = document.getElementById("action_tagdiv")
        action.innerHTML = ""
   
    
  //alert(url)

    
$(function(){
    
var currentPage = 1;
var currentPage2 = 1;
var moviesPerPage = 15;
var totalMovies = 0;
var totalSeries = 0;

// Function to fetch more images (movies) from TMDB API
function fetchGenreMovies() {
  // Calculate the total number of pages needed to fetch the desired number of movies
  var totalPages = Math.ceil(totalMovies / moviesPerPage);
  
  // Check if all movies have been fetched already
  if (currentPage > totalPages) {
 //   console.log('All movies have been fetched!');
    return;
  }
       var url1 = `${link1}?with_genres=${movgenreID}&api_key=${API_KEY}&sort_by=popularity.desc&include_adult=false&with_original_language=en&page=${currentPage}`;
 window.clear_searchtagurl1 = function(){
  url1 = ""
  link1 = "undefined"
  movgenreID = "undefined"
  currentPage = "undefined"
} 
// alert(link1)
  fetch(url1)
    .then(response => response.json())
    .then(data => {
   //  console.log(data, url1);
      data.results.forEach(result => {
      // Handle the response data
        var section = document.createElement('section');
    section.style.backgroundImage = `url('https://image.tmdb.org/t/p/w500${result.poster_path}')`;   
    action.appendChild(section);
     $(section).click(function(){
       open_opera (result.title, result.id, url1)
     })
      // Do something with the data
      })
      currentPage++;
    })    
    .catch(error => {
      // Handle any errors that occurred during the request
    //  console.error('Error fetching TV shows:', error);
    });
  
}

function fetchGenreSeries() {  
  // Calculate the total number of pages needed to fetch the desired number of movies
  var totalPages = Math.ceil(totalSeries / moviesPerPage);
  
  // Check if all movies have been fetched already
  if (currentPage2 > totalPages) {
 //   console.log('All movies have been fetched!');
    return;
  }
    var url2 = `${link2}?with_genres=${sergenreID}&api_key=${API_KEY}&sort_by=popularity.desc&include_adult=false&with_original_language=en&page=${currentPage2}`;
    window.clear_searchtagurl2 = function(){
  url2 = ""
  link2 = "undefined"
  sergenreID = "undefined"
  currentPage2 = "undefined"
} 
 //  alert(link2)
 fetch(url2)
    .then(response => response.json())
    .then(data => {
  //    console.log(data, url2);
      data.results.forEach(result => {
      // Handle the response data
        var section = document.createElement('section');
    section.style.backgroundImage = `url('https://image.tmdb.org/t/p/w500${result.poster_path}')`;
    action.appendChild(section);
     $(section).click(function(){
       open_opera (result.name, result.id, url2)
     })
      // Do something with the data
      })
      currentPage2++;
    })
    .catch(error => {
      // Handle any errors that occurred during the request
    //  console.error('Error fetching TV shows:', error);
    });
  
}

// Wrap the code inside DOMContentLoaded event listener
$(function(){
  // Fetch the total number of movies from TMDB API to calculate the total number of pages
  fetch(`https://api.themoviedb.org/3/discover/movie?with_genres=${movgenreID}&api_key=${API_KEY}`)
    .then(response => response.json())
    .then(data => {
      totalMovies = data.total_results;
      
      fetchGenreMovies();
    })
    .catch(error => {
    //  console.error('Error fetching total number of movies:', error);
    });
    
  fetch(`https://api.themoviedb.org/3/discover/tv?with_genres=${sergenreID}&api_key=${API_KEY}`)
    .then(response => response.json())
    .then(data => {
      totalSeries = data.total_results;
      
      fetchGenreSeries();
    })
    .catch(error => {
    //  console.error('Error fetching total number of movies:', error);
    });

  // Add scroll event listener to "popular_late" div
  
action.addEventListener('scroll', function() {
  if (isDivScrolledToBottom(action)) {
 
  //    alert(search_input )
      fetchGenreMovies();  
      fetchGenreSeries();  
  }
});

});

})






    } // end of function in totality 

  //  tweet     post    symbol     symbols      comment   message    send     
$(function(){

var inputBox = document.getElementById('msg_textinput');
inputBox.addEventListener('input', (event) => {
 handleWordsInSymbolsWhileTyping(inputBox.innerText, ['*', ':', '!', '<','^','`'], 'msg_textinput') 

});

var inputBoxa = document.getElementById('back_textinput');
inputBoxa.addEventListener('input', (event) => {
 handleWordsInSymbolsWhileTyping(inputBoxa.innerText, ['*', ':', '!', '<','^','`'], 'back_textinput') 

});
var inputBoxy = document.getElementById('poll_topinput');
inputBoxy.addEventListener('input', (event) => {
 handleWordsInSymbolsWhileTyping(inputBoxy.innerText, ['*', ':', '!', '<','^','`'], 'poll_topinput')  
});
var inputBox1 = document.getElementById('comment_text');
inputBox1.addEventListener('input', (event) => {
 handleWordsInSymbolsWhileTyping(inputBox1.innerText, ['*', ':', '!', '<','^','`'], 'comment_text')  
});
var inputBox2 = document.getElementById('review_text');
inputBox2.addEventListener('input', (event) => {
 handleWordsInSymbolsWhileTyping(inputBox2.innerText, ['*', ':', '!', '<','^','`'], 'review_text')  
});
var inputBox3 = document.getElementById('whatsapp_input');
inputBox3.addEventListener('input', (event) => {
 handleWordsInSymbolsWhileTyping(inputBox3.innerText, ['*', ':', '!', '<','^','`'], 'whatsapp_input')  
});
var handledWords = {
  '*': new Set(),
  ':': new Set(),
  '!': new Set(),
  '^': new Set(),
  '`': new Set(),
  '<': new Set()
};

function handleWordsInSymbolsWhileTyping(str, symbols, div) {
  var pattern = new RegExp(`[${symbols.map(symbol => `\\${symbol}`).join('')}]\\s*([^${symbols.join('')}]+)\\s*[${symbols.map(symbol => `\\${symbol}`).join('')}]*`, 'g');
  var matches = str.match(pattern);

  if (matches) {
    matches.forEach(match => {
      symbols.forEach(symbol => {
        if (match.startsWith(symbol) && match.endsWith(symbol)) {
          var word = match.slice(1, -1);
          switch (symbol) {
            case '*':
              handleAsteriskWord(word, div);
              break;
            case ':':
              handleSlashWord(word, div);
              break;
            case '!':
              handleExclamationWord(word, div);
              break;
            case '`':
              handleColonWord(word, div);
              break;
            case '^':
              handleSuperWord(word, div);
              break;
            case '<':
              handleLessThanWord(word, div);
              break;
            // Add more cases for other symbols as needed
          }
        }
      });
    });
  }
}

function handleAsteriskWord(word, div) {  
//  console.log(`Asterisk word found: ${word}`);
  var divy = document.getElementById(div);
var text = divy.innerHTML;
var mod = '*' + word +'*'
var newText = text.replace(mod, `&nbsp;<b class="" id="" >${word}</b>&nbsp;`);
 divy.innerHTML = newText;
 move_cursorback(div)
}
function handleSlashWord(word, div) {
 // console.log(`Slash word found: ${word}`);
  var divy = document.getElementById(div);
var text = divy.innerHTML;
var mod = ':' + word +':'
var newText = text.replace(mod, `&nbsp;<i class="" id="">${word}</i>&nbsp;`);
 divy.innerHTML = newText;
 move_cursorback(div)
  // Perform specific action for a slash word
}

function handleExclamationWord(word, div) {
//  console.log(`Exclamation word found: ${word}`);
 var divy = document.getElementById(div);
var text = divy.innerHTML;
var mod = '!' + word +'!'
var newText = text.replace(mod, `&nbsp;<u class="" id="">${word}</u>&nbsp;`);
 divy.innerHTML = newText;
 move_cursorback(div)
}

function handleColonWord(word, div) {
//  console.log(`Exclamation word found: ${word}`);
  var divy = document.getElementById(div);
var text = divy.innerHTML;
var mod = '`' + word +'`'
var newText = text.replace(mod, `&nbsp;<del class="" id="">${word}</del>&nbsp;`);
 divy.innerHTML = newText;
 move_cursorback(div)
}

function handleSuperWord(word, div) {
//  console.log(`Exclamation word found: ${word}`);
 var divy = document.getElementById(div);
var text = divy.innerHTML;
var mod = '^' + word +'^'
var newText = text.replace(mod, `&nbsp;<sup class="" id="">${word}</sup>&nbsp;`);
 divy.innerHTML = newText;
 move_cursorback(div)
}

function handleLessThanWord(word, div) {
//  console.log(`Less than word found: ${word}`);
  // Perform specific action for a less than word
}

   
  
})

function move_cursorback(div){
   var div = document.getElementById(div);
div.focus();

var range = document.createRange();
range.selectNodeContents(div);
range.collapse(false);

var selection = window.getSelection();
selection.removeAllRanges();
selection.addRange(range);

}
// end of overall function 

$(function(){
 
  $("#tweet_threebutton").click(function(){
    send_tweetmsg()
  })
  $("#back_sendbtn").click(function(){
    send_backgroundtweet()
  })
  //  tweet     post       comment   message    send     
  function send_tweetmsg(){
    var textmessage = document.getElementById("msg_textinput").innerText
    var htmlmessage = document.getElementById("msg_textinput").innerHTML 
    var d = new Date(); 

       var time = d.toLocaleTimeString();
      var date = d.getDate();
    var fullyear = d.getFullYear();
    var month = d.getMonth();
   month= month+1;
var date=(fullyear+"|"+month+"|"+date);

//console.log("textmessage:", textmessage, "htmlmessage:", htmlmessage);


  if ((navigator.onLine) && (textmessage !== "")) {
  

var myArray = [1, 2, 3, 4, 5,6,7 ,8, 9, 0 ];
var randomItem = getRandomItem(myArray);
var postId = Date.now() + '-' + useremail.toString() + '-' +randomItem.toString()
send_my_hashtags("msg_textinput", postId)
/*
    firebase.database().ref("global_posts").push({
  
 "useremail":useremail.toString(),
 "channelId":useremail.toString(),
 "image_string":"",
 "textmessage":textmessage.toString(),
 "htmlmessage":htmlmessage.toString(), 
 "post_type":"post_3",
 "nation":user_nation.toString(),
 "date":date.toString(),
 "time":time.toString(),
 "fontFamily":"",
 "backgroundImage":"",
 "color":"".toString(),
 "poll":"none",
 "post_id":postId,
 "extra1":"extra_one",
 "extra2":"extra_two"   
 });
  htmlmessage = ""
  textmessage = ""
  $("#tweet_exitbtn").click()  
  */
  }
  else{
  //  alert('no')
  }
    
  }
  function send_backgroundtweet(){  
   
    
    
    
      var editableInner = document.getElementById("back_subdiv");

  var editableDiv = document.getElementById("back_textinput");
var computedStyle = window.getComputedStyle(editableDiv);
var computedStyle2 = window.getComputedStyle(editableInner);
var media_string;
 var textmessage = editableDiv.innerText
 var htmlmessage = editableDiv.innerHTML 
//var color = computedStyle.getPropertyValue("color");
var fontFamily = computedStyle.getPropertyValue("font-family");
var background = computedStyle2.getPropertyValue("background");
var backgroundImage = computedStyle2.getPropertyValue("background-image");


    var d = new Date(); 

       var time = d.toLocaleTimeString();
      var date = d.getDate();
    var fullyear = d.getFullYear();
    var month = d.getMonth();
   month= month+1;
var date=(fullyear+"|"+month+"|"+date);

 console.log (htmlmessage , textmessage, fontFamily, backgroundImage, background)


  if ((navigator.onLine) && (textmessage !== "")) {
  

var myArray = [1, 2, 3, 4, 5,6,7 ,8, 9, 0 ];
var randomItem = getRandomItem(myArray);

    firebase.database().ref("global_posts").push({

 "useremail":useremail.toString(),
 "channelId":useremail.toString(),
 "image_string":"",
 "textmessage":textmessage.toString(),
 "htmlmessage":htmlmessage.toString(), 
 "post_type":"post_1",
 "nation":user_nation.toString(),
 "date":date.toString(),
 "time":time.toString(),
 "fontFamily":fontFamily.toString(),
 "backgroundImage":backgroundImage.toString(),
 "color":"".toString(),
 "poll":"none",
 "post_id":Date.now() + '-' + useremail.toString() + '-' +randomItem.toString(),
 "extra1":"extra_one",
 "extra2":"extra_two"   
 });
  htmlmessage = ""
  textmessage = ""
  $("#tweet_exitbtn").click()  
  }
  else{
  //  alert('no')
  }
    
  }
  // end of function 
 //       hashtag         

//   getHashtags      
getnewHashtags('msg_textinput')
getnewHashtags('back_textinput')
getnewHashtags('comment_text')
getnewHashtags('review_text')
getnewHashtags('poll_topinput')
getnewHashtags('whatsapp_input')


})
function getnewHashtags(one) {
  var editable = document.getElementById(one);
var hashtagDiv = document.getElementById('tweet_hashtab');
editable.addEventListener('input', function(e) {
  
  $(function(){
  var text = editable.innerText;
  var lastIndex = text.lastIndexOf('@');
  var lastWordIndex = text.lastIndexOf('  ');
  var hashtagIndex = lastIndex > lastWordIndex ? lastIndex : -1;
  
  if (hashtagIndex !== -1) {
    var hashtag = text.substring(hashtagIndex + 1, text.length);
    
    
  //  keepFocusOnDiv(one);
    hashtagDiv.style.display = 'block';
    
  var hashtag2 = hashtag.toString().toLowerCase()
 $(function(){

  var modifiedMovieName = hashtag2.toString().toLowerCase().trim()

  // Call the TMDB API with the modified movie name
  fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${modifiedMovieName.toString()}`)
    .then(response => response.json())
    .then(data => {  
   
      var movies = data.results;

      movies.forEach((movie) => {
        // Create a div element to hold the movie information
        var movieDiv = document.createElement('section');
        
        // Create an image element for the movie poster
        var moviePoster = document.createElement('nav');
        var src = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;
        moviePoster.alt = `${movie.title} poster`;
        moviePoster.style.backgroundImage = "url("+src+")";
        
        // Create a p element for the movie title
        var movieTitle = document.createElement('p');
        movieTitle.textContent = movie.title;

        // Add the image and title elements to the div
        movieDiv.appendChild(moviePoster);
        movieDiv.appendChild(movieTitle);

        $(movieDiv).click(function(){
  

          var text = editable.innerHTML;
          text = text.toLowerCase()
  //   alert(modifiedMovieName)
       var newText = text.replace('@' + modifiedMovieName, `&nbsp;<span class="movie_title" id="${movie.id}" onclick="open_opera('${movie.title}', ${movie.id}, 'movies')">${movie.title}</span>&nbsp;`);

     //     var newText = text.replace(new RegExp('@' + modifiedMovieName, 'g'), `&nbsp;<span class="movie_title" id="${movie.id}">${movie.title}</span>&nbsp;`);
//console.log(newText)
   editable.innerHTML = newText;
  hide_hashtab()
   
 //  stopKeepingFocus();
   move_cursorback(one)
        });

        // Add the div to the movie list
        $("#movies_hash").append(movieDiv);
      });

      // Handle the TMDB API response
    })
    .catch(error => {
      // console.error(error);
    });
    
  fetch(`https://api.themoviedb.org/3/search/tv?api_key=${API_KEY}&query=${modifiedMovieName.toString()}`)
    .then(response => response.json())
    .then(data => {
     // console.log (hashtag2+"🇦🇷🇦🇷🇦🇷")
    //  console.log (modifiedMovieName)
      // Assume movies is an array of movie objects returned from the TMDB API
      var movies = data.results;

      movies.forEach((movie) => {
        // Create a div element to hold the movie information
        var movieDiv = document.createElement('section');
        
        // Create an image element for the movie poster
        var moviePoster = document.createElement('nav');
        var src = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;
        moviePoster.alt = `${movie.name} poster`;
        moviePoster.style.backgroundImage = "url("+src+")";
        
        // Create a p element for the movie title
        var movieTitle = document.createElement('p');
        movieTitle.textContent = movie.name;

        // Add the image and title elements to the div
        movieDiv.appendChild(moviePoster);
        movieDiv.appendChild(movieTitle);

        $(movieDiv).click(function(){
          var text = editable.innerHTML;
   
            var newText = text.replace(new RegExp('@' + modifiedMovieName, 'g'), `&nbsp;<span class="serie_title" id="${movie.id}"  onclick="open_opera('${movie.name}', ${movie.id}, 'series')">${movie.name}</span>&nbsp;`);
//console.log(newText)
          editable.innerHTML = newText;

          hide_hashtab()
   
  // stopKeepingFocus();
   move_cursorback(one)
       
        });

        // Add the div to the movie list
        $("#series_hash").append(movieDiv);
      });

      // Handle the TMDB API response
    })
    .catch(error => {
      // console.error(error);
    });
  fetch(`https://api.themoviedb.org/3/search/person?api_key=${API_KEY}&query=${modifiedMovieName.toString()}`)
    .then(response => response.json())
    .then(data => { 
     // console.log (hashtag2+"🇦🇷🇦🇷🇦🇷")
    //  console.log (modifiedMovieName)
      // Assume movies is an array of movie objects returned from the TMDB API
      var movies = data.results;

      movies.forEach((movie) => {
        // Create a div element to hold the movie information
        var movieDiv = document.createElement('section');
        
        // Create an image element for the movie poster
        var moviePoster = document.createElement('nav');
        var src = `https://image.tmdb.org/t/p/w500${movie.profile_path}`;
        moviePoster.alt = `${movie.name} poster`;
        moviePoster.style.backgroundImage = "url("+src+")";
        
        // Create a p element for the movie title
        var movieTitle = document.createElement('p');
        movieTitle.textContent = movie.name;

        // Add the image and title elements to the div
        movieDiv.appendChild(moviePoster);
        movieDiv.appendChild(movieTitle);

        $(movieDiv).click(function(){
    //      alert(movie.title)
        
          var text = editable.innerHTML;
   
            var newText = text.replace(new RegExp('@' + modifiedMovieName, 'g'), `&nbsp;<span class="cast_title" id="${movie.id}" onclick =" open_actorfunc(${movie.id})">${movie.name}</span>&nbsp;`);
//console.log(newText)
          editable.innerHTML = newText;
          hide_hashtab()
   
  // stopKeepingFocus();
   move_cursorback(one)
          });

        // Add the div to the movie list
        $("#actor_hash").append(movieDiv);
      });

      // Handle the TMDB API response
    })
    .catch(error => {
      // console.error(error);
    });
    
});


    
    document.getElementById('tweet_hashtext').innerHTML = hashtag2;
     document.getElementById('movies_hash').innerHTML = '';
     document.getElementById('series_hash').innerHTML = '';
     document.getElementById('actor_hash').innerHTML = '';
     document.getElementById('account_hash').innerHTML = '';
     document.getElementById('group_hash').innerHTML = '';
    
    
    
    
  } else {
    hashtagDiv.style.display = 'none';
  }
    
  })
  // end of movie or series hashtag   
 
});


}

function handleInput(one) {    
  var editable = document.getElementById(one);
var hashtagDiv = document.getElementById('research_tab');
editable.addEventListener('input', function(e) {
    
  $(function(){
  var text = editable.innerText;
  text = text.trim()
  var lastIndex = text.lastIndexOf('#');
  var lastWordIndex = text.lastIndexOf(' ');
  var hashtagIndex = lastIndex > lastWordIndex ? lastIndex : -1;
  
  if (hashtagIndex !== -1) {
    var hashtag = text.substring(hashtagIndex + 1, text.length);
    
    
  //  keepFocusOnDiv(one);
    hashtagDiv.classList.add ("drop");
    
 // var hashtag2 = hashtag.toString().toLowerCase()
  var hashtag2 = hashtag.toString()
//  console.log (hashtag2 )
 $(function(){
document.getElementById("research_inner").innerHTML = ""
 // var modifiedMovieName = hashtag2.toString().toLowerCase().trim()  
  var modifiedMovieName = hashtag2.toString().trim()  
var y = firebase.database().ref("hashtag_dictionary")
    y.on("value", function(snapshot)
 { snapshot.forEach(function(child) {
  if (child.val().name.toString().toLowerCase().indexOf(modifiedMovieName.toString().toLowerCase()) > -1)
   {   
     var content = document.createElement("section")
     $(content).text(child.val().name)  
     $(content).click(function(){
       
          var text = editable.innerHTML;
   
            var newText = text.replace(new RegExp('#' + modifiedMovieName, 'g'), `&nbsp;#${child.val().name}&nbsp;`);
//console.log(newText)
          editable.innerHTML = newText;
           hide_researchtab()
   
  // stopKeepingFocus();
   move_cursorback(one)
   
   
     })
     // end of click 
     
     $("#research_inner").prepend(content)  
     
   }
   else{
     /*
     window.get_hash =function(){
        var text = editable.innerHTML;
   
            var newText = text.replace(new RegExp('#' + modifiedMovieName, 'g'), `&nbsp;<span class="hash_title" id="">${modifiedMovieName}</span>&nbsp;`);
//console.log(newText)
          editable.innerHTML = newText;
           move_cursorback(one)
//    console.log(modifiedMovieName)
   }
   */
   }
 })
 })
 // end of firebase.database 
 
});
// end of function 
    
    
  } else {
    /*
     if(typeof get_hash != 'function'){
   window.get_hash = function(){
    return false;
   };
}
    get_hash()  
    */
    hashtagDiv.classList.remove ("drop");
    
    
    
  }
    
  })
  // end of movie or series hashtag   
 
});


}
// Listen for input in the editor divh
handleInput('msg_textinput')



$(function(){
  $("#clear_searchbtn").click(function(){
      document.getElementById('answer_input').value = ''
   
  })
})

function eraser_backtweet(){
  //  erase   eraser   
  document.getElementById("back_textinput").innerHTML = ""
 // document.getElementById("back_subdiv").style.backgroundColor = "#e67e22"
}




$(function(){
  //  group      channel     club   
  $("#club_thirdsubmit").click(function(){
     var name = document.getElementById("club_ansname").value
    var desc = document.getElementById("club_ansdesc").value
  var type = $("#club_anstype").text()
  
  name = name.trim()
  desc = desc.trim()
  type = type.trim()
  
  var div1 = document.getElementById('club_coverimg');
  var cover = window.getComputedStyle(div1).background;
  
  var div2 = document.getElementById('club_posterimg');
  var poster = window.getComputedStyle(div2).background;
   
   
var myArray = [1, 2, 3, 4, 5,6,7 ,8, 9, 0 ];
var randomItem = getRandomItem(myArray);
var randomLetters = getRandomLetters(name);
var groupId = Date.now() + '-' + useremail.toString() + '-groupid-'+ randomLetters.toString() +'-' +randomItem.toString()

    
    var checkboxes = document.querySelectorAll('.group_radios');
var checkedValues = [];

checkboxes.forEach((checkbox) => {
  if (checkbox.checked) {
    var spanValue = checkbox.parentNode.querySelector('span').textContent.trim();
    checkedValues.push(spanValue);
  }
});

var tag_string = checkedValues.join('{_}');


  //  alert(name +"&&"+ desc)  
    
    if((cover.toString().trim() == "rgba(0, 0, 0, 0) none no-repeat scroll 0% 0% / cover padding-box border-box") || (poster.toString().trim() == "rgba(0, 0, 0, 0) none no-repeat scroll 0% 0% / cover padding-box border-box")){
    //  alert("Add back")
    }
    else{  
     
//    console.log(name, type, desc, cover, poster, groupId, tag_string)
      var d = new Date(); 

// var downloadURLsString;
       var time = d.toLocaleTimeString();
      var date = d.getDate();
    var fullyear = d.getFullYear();
    var month = d.getMonth();
   month= month+1;
var date=(fullyear+"|"+month+"|"+date);

 start_loading();
   // alert(randomLetters)
//   alert(groupId)

 firebase.database().ref("group_globallist").push({
 "group_id":groupId.toString(),
 "useremail":useremail.toString(),
 "extra1":"extra1",
 "extra2":"extra2"
 })
 firebase.database().ref("group_byuser/"+useremail.toString()).push({
 "useremail":useremail.toString(),
 "channelId":useremail.toString(),
  "date":date.toString(),
 "time":time.toString(),
 "group_name":name.toString(),
 "group_type":type.toString(),
 "group_desc":desc.toString(),
 "group_cover":cover.toString(),
 "group_poster":poster.toString(),
 "group_id":groupId.toString(),
 "group_tags":tag_string.toString(),
 "extra1":"extra1",
 "extra2":"extra2",
 "extra3":"extra3"
     })
 firebase.database().ref("group_byid/"+groupId.toString()).set({
 "useremail":useremail.toString(),
 "channelId":useremail.toString(),
  "date":date.toString(),
 "time":time.toString(),
 "group_name":name.toString(),
 "group_type":type.toString(),
 "group_desc":desc.toString(),
 "group_cover":cover.toString(),
 "group_poster":poster.toString(),
 "group_id":groupId.toString(),
 "group_tags":tag_string.toString(),
 "extra1":"extra1",
 "extra2":"extra2",
 "extra3":"extra3"
     })
     .then(function(){
       
 stop_loading();
 
 $("#club_formexit").click()
 
        alert_function('good', ` ${name} has been successfully created.`)  
     })
    
    }
    
    
    
    
    
  })
  
  
  
  $("#club_formexit").click(function(){
    
  
 document.querySelector('.film_subtabs').style.marginRight = '0';
 document.getElementById("club_formbg").style.width = '0';     

   history.back();     

    CURRENT_TAB = visitedPages[visitedPages.length - 1];

  history_back()

 // setTimeout(function() {
 
  // }, 1000)
  })
  $("#club_secondsubmit").click(function(){
    
      $("#club_secondsection").hide()
      $("#club_thirdsection").show()
  })
  $("#club_firstsubmit").click(function(){
    var name = document.getElementById("club_ansname").value
    var desc = document.getElementById("club_ansdesc").value
    
 if((name.trim() == "") || (desc.trim() =="")){
      return false;
    }
  else{
    
  if((name.includes('.') ) || (name.includes('#') ) || (name.includes('$') ) ||(name.includes('[') ) ||(name.includes(']') )){
    $("#club_nameerror").text("The group's name should not include: '.', '#', '$', '[', ']'")
  }
    else{
      $("#club_firstsection").hide()
      $("#club_secondsection").show()
    }
    
  }
    
  })// end of click function 
  
  
  
})
// end of function 

let stopFocusKeeping; // Variable to store the function reference

function keepFocusOnDiv(elementId) {
  const div = document.getElementById(elementId);
//  alert("")
  function handleBlur() {
    div.focus();
  }

  div.addEventListener('blur', handleBlur);

  stopFocusKeeping = function() {
    div.removeEventListener('blur', handleBlur);
    stopFocusKeeping = null; // Reset the function reference
  };
}

function stopKeepingFocus() {
  if (typeof stopFocusKeeping === 'function') {
  //  alert("gh")
    stopFocusKeeping();
  }
}

function getUsernameFromFirebase(userId) {
  const userRef = firebase.database().ref("users_list/" + userId.toString().toLowerCase());

  return userRef.once("value").then((snapshot) => {
    const userData = snapshot.val();
    if (userData && userData.username) {
      return userData.username;
    } else if (userData && userData.displayName) {
      return userData.displayName;
    } else {
      return null;
    }
  });
}

$(function(){
 
  $("#first_poll").keydown(function(event){
 var input = $("#second_poll")
 input.prop('disabled', false);
 input.css({"border-color":"#818181"});
 var bake = $("#first_poll").val()
   var cake = bake.length
   
   $("#first_count").text(30 - cake)
    if (event.which === 13) {
      $("#second_poll").focus()
    }
   
  })
  $("#second_poll").keydown(function(event){
 var input = $("#third_poll")
 input.prop('disabled', false);
 input.css({"border-color":"#818181"});
 var bake = $("#second_poll").val()
   var cake = bake.length
   
   $("#second_count").text(30 - cake)
    if (event.which === 13) {
      $("#third_poll").focus()
    }
  })
  $("#third_poll").keydown(function(event){
 var input = $("#fourth_poll")
 input.prop('disabled', false);
 input.css({"border-color":"#818181"});
 var bake = $("#third_poll").val()
   var cake = bake.length
   
   $("#third_count").text(30 - cake)
    if (event.which === 13) {
      $("#fourth_poll").focus()
    }
  })
  $("#fourth_poll").keydown(function(event){
    /*
 var input = $("#fourth_poll")
 input.prop('disabled', false);
 input.css({"border-color":"#818181"});
 */
 var bake = $("#fourth_poll").val()
   var cake = bake.length
   
   $("#fourth_count").text(30 - cake)
    if (event.which === 13) {
      $("#first_poll").focus()
    }
  })
  
  //   poll        
  $("#post_pollmsg").click(function(){
    var topic = document.getElementById("poll_topinput") 
    var htmlmessage = topic.innerHTML 
    var textmessage = topic.innerText
    var one_p = document.getElementById("first_poll").value
    var two_p = document.getElementById("second_poll").value
    var three_p = document.getElementById("third_poll").value
    var four_p = document.getElementById("fourth_poll").value
    
    

var myArray = [1, 2, 3, 4, 5,6,7 ,8, 9, 0 ];
var randomItem = getRandomItem(myArray);
  var d = new Date();

       var time_string = d.toLocaleTimeString();

     var date = d.getDate();
    var fullyear = d.getFullYear();
    var month = d.getMonth();
   month= month+1;
var date_string=(fullyear+"|"+month+"|"+date);

//  console.log (one_p, two_p, three_p, four_p, htmlmessage , textmessage )


var one_id = getRandomforpoll(one_p);
var two_id = getRandomforpoll(two_p);
var three_id = getRandomforpoll(three_p);
var four_id = getRandomforpoll(four_p);

var expiryTimestamp = Date.now() + (24 * 60 * 60 * 1000);
/*
// Get the current timestamp
const currentTimestamp = Date.now();

// Calculate the expiry timestamp (current timestamp + 24 hours)
const expiryTimestamp = currentTimestamp + (24 * 60 * 60 * 1000);

// Store the expiry timestamp in your database along with the poll

// Check if the poll has expired
if (currentTimestamp > expiryTimestamp) {
  // The poll has expired, take appropriate actions (e.g., disable voting, hide results)
} else {
  // The poll is still active, allow voting and show results
}
// Get the current timestamp
const currentTimestamp = Date.now();

// Retrieve the expiry timestamp from your database
const expiryTimestamp = ... // Retrieve the stored expiry timestamp

// Calculate the time difference between current and expiry timestamps
const timeDifference = expiryTimestamp - currentTimestamp;

// Calculate the time remaining in hours and minutes
const hoursRemaining = Math.floor(timeDifference / (1000 * 60 * 60));
const minutesRemaining = Math.floor((timeDifference % (1000 * 60 * 60)) / (1000 * 60));

// Display the time remaining
console.log(`Time remaining: ${hoursRemaining} hours, ${minutesRemaining} minutes`);

*/
if(textmessage.toString().trim() !== ""){
  
firebase.database().ref("global_posts").push({
  
 "useremail":useremail.toString(),
 "channelId":useremail.toString(),
 "image_string":"",
 "textmessage":textmessage.toString(),
 "htmlmessage":htmlmessage.toString(),
 "post_type":"post_4",
 "nation":user_nation.toString(),   
 "date":date_string.toString(),
 "time":time_string.toString(),
 "option_1_val":one_p.toString(),
 "option_2_val":two_p.toString(),
 "option_3_val":three_p.toString(),
 "option_4_val":four_p.toString(),
 "option_1_id":one_id.toString(),
 "option_2_id":two_id.toString(),
 "option_3_id":three_id.toString(),
 "option_4_id":four_id.toString(),
 "expiry_date":expiryTimestamp.toString(),
 "fontFamily":"",
 "backgroundImage":"",
 "color":"",
 "poll":"none",
 "post_id":Date.now() + '-' + useremail.toString() + '-' +randomItem.toString(),
 "extra1":"extra_one",
 "extra2":"extra_two"   
 });
 
  $("#tweet_exitbtn").click()
  setTimeout(function() {
document.getElementById("poll_topinput").innerHTML = ""
document.getElementById("first_poll").value = ""
document.getElementById("second_poll").value = ""
document.getElementById("third_poll").value = ""
document.getElementById("fourth_poll").value = ""

 var input2 = $("#second_poll")
 input2.prop('disabled', true);
 input2.css({"border-color":"#323232"});
 
 var input3 = $("#third_poll")
 input3.prop('disabled', true);
 input3.css({"border-color":"#323232"});
 
 var input4 = $("#fourth_poll")
 input4.prop('disabled', true);
 input4.css({"border-color":"#323232"});
  }, 500); // same duration as the transition in CSS
  
}  // end of if 
    
    
  })
  // end of click function 
  
  
  
})
// end of function 

/*
var tagsArray = [
  { tag: 'alien', code: '9951' },
  { tag: 'zombie', code: '12377' },
  { tag: 'witch', code: '616' },
  { tag: 'music', code: '283297' },
  { tag: 'dysfunctional family', code: '10041' },
  // Add more tag and code objects as needed
];

tagsArray.forEach(tagObj => {
  fetchMovieData(tagObj);
});
function fetchMovieData(tagObj) {
  const apiKey = `${API_KEY}`;
  const baseUrl = 'https://api.themoviedb.org/3/discover/movie';

  // Construct the tag and code part of the URL
  const tagCode = `${tagObj.code}`;

  // Construct the complete TMDB API URL
  const tmdbURL = `${baseUrl}?api_key=${apiKey}&with_keywords=${tagCode}`;

  // Make a GET request to the TMDB API endpoint
  alert(tmdbURL)
  fetch(tmdbURL)
    .then(response => response.json())
    .then(data => {
      const movieItems = data.results.map(movie => ({
        title: movie.title,
        poster_url: movie.poster_path,
        release_date: movie.release_date
      }));

      createDivs(movieItems);
    })
    .catch(error => {
      console.log(error);
    });
}

function createDivs(movieItems) {
  var swiperSlide = document.createElement('div');
  swiperSlide.classList.add('swiper-slide', 'swiper_section');

  movieItems.forEach(function(movie) {
    var movieHTML = document.createElement('section');
    movieHTML.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_url})`;
    swiperSlide.appendChild(movieHTML);
  });

  $('#search_tagval').append(swiperSlide);
}

function displayTags(tagsArray) {
  const tagsContainer = document.getElementById('search_taghead');
  
  tagsArray.forEach(tagObj => {
    const tagElement = document.createElement('span');
    tagElement.classList.add('search_tagspans');
    tagElement.textContent = tagObj.tag;
    tagsContainer.appendChild(tagElement);
  });
}
displayTags(tagsArray)
*/

 //  end of js end of javascript  emd of js 





//  open_sharewithid  share    
function open_sharewithid(filmArray){

   PREVIOUS_TAB = CURRENT_TAB

    CURRENT_TAB = "whatsapp_bg"

   var newURL = "whatsapp_bg";
   history.replaceState(null, null, null);
   var currentStateIndex = visitedPages.length - 1;
  visitedPages[currentStateIndex] = newURL;
  
  document.getElementById("whatsapp_bg").classList.add ("drop");
   document.getElementById("whatsapp_bot").innerHTML = ""
  $(function(){
      firebase.database().ref("group_byuser/"+useremail.toString()).on("child_added", (snapshot) => {
  
    var id  =[snapshot.val().group_id];
    id.reverse();
 // alert(id)
      for(let i=0; i<id.length; i++){
    firebase.database().ref("group_byid/"+id.toString()).on("value", (snapshot) => {
    var idy  =[snapshot.val().group_id];
    var name  =[snapshot.val().group_name];
    var poster  =[snapshot.val().group_poster];
      for(let i=0; i<idy.length; i++){
        var a = document.createElement("section")
        var b = document.createElement("nav")
        var c = document.createElement("div")
        var d = document.createElement("aside")
        var e = document.createElement("header")
        
        a.id = idy.toString()
        //a.id = "extra"+idy.toString()
        
  $(e).text(name)
  $(b).css({"background":poster})
// console.log(snapshot.val())
// alert(name + "" +poster  )
$(c).text("30K Subscribers")
        $(d).append(e,c)
        $(a).append(b,d)
        
$(a).click(function(){
  a.classList.toggle("selected_to_share")
  var selectedCount = countSelectedElements();
$("#whatsapp_count").text(`${selectedCount} Selected`)

})
        
        
        $("#whatsapp_bot").prepend(a)
    //  stop_load_no_node()
      }
    })
      }
    ///   end of for each 
    })
     var a = document.createElement("section")
        var b = document.createElement("nav")
        var c = document.createElement("div")
        var d = document.createElement("aside")
        var e = document.createElement("header")
        
        a.id = useremail.toString()
        //a.id = "extra"+idy.toString()
        
  $(e).text("Post this")
 // $(b).css({"background":poster})
$(c).text("")
        $(d).append(e,c)
        $(a).append(b,d)
        
$(a).click(function(){
  a.classList.toggle("selected_to_share")
  var selectedCount = countSelectedElements();
$("#whatsapp_count").text(`${selectedCount} Selected`)

})
$("#whatsapp_head").html(a)
// $("#whatsapp_bot").prepend(a)
$("#whatsapp_send").click(function(){
  start_load_no_node()
  $("#whatsapp_send").hide()
  var at = getSelectedElementIDs()
    var d = new Date(); 
//  WhatsApp    
// var downloadURLsString;
       var time = d.toLocaleTimeString();
      var date = d.getDate();
    var fullyear = d.getFullYear();
    var month = d.getMonth();
   month= month+1;
var date=(fullyear+"|"+month+"|"+date);

var myArray = [1, 2, 3, 4, 5,6,7 ,8, 9, 0 ];
var randomItem = getRandomItem(myArray);
var divy = document.getElementById("whatsapp_input")
var textmessage = divy.innerText 
var htmlmessage = divy.innerHTML 
var id_y = Date.now() + '-' + useremail.toString() + '-' +randomItem.toString()
//    alert(id_y +"😍😍😍"+filmArray)
 
   window.clearshareid = function(){
    filmArray = ""
    id_y = ""
  }
  if(filmArray.toString() !== ""){
    // alert(filmArray.filmId)
  //  console.log (at)  
    if (at.includes("div_to_toggle")) {
  var index = at.indexOf("div_to_toggle");
  at[index] = useremail;
}
    at.forEach((checkbox) => {
    
firebase.database().ref("global_posts").push({
  
 "useremail":useremail.toString(),
 "channelId":checkbox.toString(),
 "image_string":"",
 "textmessage":textmessage.toString(),
 "htmlmessage":htmlmessage.toString(),
 "post_type":"post_5",
 "filmId":filmArray.filmId,
 "filmType":filmArray.filmType,
 "nation":user_nation.toString(),
 "date":date.toString(),
 "time":time.toString(),
 "fontFamily":"",
 "backgroundImage":"",
 "color":"",
 "poll":"none",
 "post_id":id_y,
 "extra1":"extra_one",
 "extra2":"extra_two"   
 })
 .then(function(){
   stop_load_no_node()
  $("#whatsapp_exit").click()
 })
 
});
  }else{
  return ;
  }
})

        
  })
  
 
  
}
// end of function

function countSelectedElements() {
  var selectedElements = document.getElementsByClassName("selected_to_share");
  var count = selectedElements.length;
  
    var content = $("#whatsapp_send")
  if (count === 0) {
    content.css({display:"none"})
    return "None";
  } else {
    content.css({display:"flex"})
    return count;
  }
}

function getSelectedElementIDs() {
  var selectedElements = document.getElementsByClassName("selected_to_share");
  var selectedIDs = [];
  
  for (var i = 0; i < selectedElements.length; i++) {
    selectedIDs.push(selectedElements[i].id);
  }
  
  return selectedIDs;
}

function convertMinutesToDuration(minutes) {
  const hours = Math.floor(minutes / 60);
  const remainingMinutes = minutes % 60;

  if (hours === 0) {
    return `${remainingMinutes}min`;
  } else if (remainingMinutes === 0) {
    return `${hours}hr`;
  } else {
    return `${hours}hr ${remainingMinutes}min`;
  }
}

function findHashtagWord(input) {
  const divContent = document.getElementById(input).innerHTML; // Replace 'yourDivId' with the actual ID of your contenteditable div
  const regex = /#(\w+)/gi; // Regular expression to match hashtags and capture the word (\w+ matches one or more word characters)
  const hashtags = divContent.match(regex) || []; // Extract hashtags using the match() method

  // Remove case-insensitive duplicates and return without the '#' character
  const uniqueHashtags = [...new Set(hashtags.map(tag => tag.slice(1).toLowerCase()))];

  return uniqueHashtags;
}



function send_my_hashtags(input, postId){
 var tage = findHashtagWord(input);
// console.log(tage);

tage.forEach((tag) => {
  // Check if the hashtag exists in the "hashtag_dictionary" reference
  const hashtagRef = firebase.database().ref('hashtag_dictionary').orderByChild('name').equalTo(tag);
  hashtagRef.once('value', (snapshot) => {
    if (!snapshot.exists()) {
      // Hashtag does not exist, create a new entry with the hashtag name
      var randomLetters = getRandomLetters(tag);
      const newHashtagRef = firebase.database().ref('hashtag_dictionary').push();
      newHashtagRef.set({
        name: tag.toString().trim(),
        id: `${randomLetters}-${useremail}-${Date.now()}`  
      })
        .then(() => {
   //       console.log(`New hashtag added: ${tag}`);
        })
        .catch((error) => {
    //      console.log(`Error creating hashtag entry: ${error.message}`);
        });
    }
    // nope couldn't found the hashtag do I made a new one 
    /*
    else {
  //   alert("found");
      snapshot.forEach((childSnapshot) => {
        const hashtag = childSnapshot.val().name;
        console.log(hashtag); // Log the name of the tag
      });
    }
    // yeah found the hashtag 
    */ 
  });
const timestamp = firebase.database.ServerValue.TIMESTAMP; // Get server timestamp

console.log (timestamp)
 firebase.database().ref('hashtag_factory').push().set({
        name: tag.toString().trim(),
        postId: postId,    
        timeframe: timestamp,    
      })

}); // end of for each tag  
  
}
// end of function 



     
function checkDate(dateString) {
  // Parse the input date string into a Date object
  const inputDate = new Date(dateString);

  // Get the current date
  const currentDate = new Date();

  // Get tomorrow's date
  const tomorrow = new Date();
  tomorrow.setDate(currentDate.getDate() + 1);

  // Get the date for one week from now
  const nextWeek = new Date();
  nextWeek.setDate(currentDate.getDate() + 7);

  // Compare the input date with the current date
  if (inputDate < currentDate) {
    return 'past';
  } else if (inputDate.toDateString() === currentDate.toDateString()) {
    return 'today';
  } else if (inputDate.toDateString() === tomorrow.toDateString()) {
    return 'tomorrow';
  } else if (inputDate <= nextWeek) {
    return 'within';
  } else {
    return 'beyond';
  }
}

function removeSelectedClass() {
  var elements = document.getElementsByClassName('selected_to_share');
  
  // Convert HTMLCollection to an array for easier manipulation
  var elementsArray = Array.from(elements);
  
  elementsArray.forEach(function(element) {
    element.classList.remove('selected_to_share');
  });
 // alert ("")
}

// Call the function to remove the class from all elements


 function clear_groupform(){
  $("#club_firstsection").show()
  $("#group_optionbg").hide()
  $("#club_secondsection").hide()
  $("#club_thirdsection").hide()
  $("#club_firstsubmit").hide()
   document.getElementById("club_ansname").value = ''; 
 $("#club_nameerror").text("")
 $("#club_anstype").text("Public")
 document.getElementById("club_ansdesc").value = '';  
  $("#club_coverimg").css({"background-image":""})
  $("#club_posterimg").css({"background-image":""})
 // Get all checkboxes with the class "group_radios"
var checkboxes = document.querySelectorAll('.group_radios');

// Loop through each checkbox and uncheck it
checkboxes.forEach((checkbox) => {
  checkbox.checked = false;
});
}
//  phoenix    
function open_phoenix(groupId){
  
 firebase.database().ref("group_byid/"+groupId.toString()).on("value", (snapshot) => {
  
    var name  =[snapshot.val().group_name];
    var type  =[snapshot.val().group_type];
    var desc  =[snapshot.val().group_desc];
    var cover  =[snapshot.val().group_cover];
    var poster  =[snapshot.val().group_poster];
    var idy  =[snapshot.val().group_id];
    var tag_string  =[snapshot.val().group_tags];
    var owner_email  =[snapshot.val().useremail];
  
   var modal = document.getElementById("phoenix_bg");
          modal.style.bottom = "4px";
PREVIOUS_TAB = CURRENT_TAB

    CURRENT_TAB = "phoenix_bg"
   var newURL = "phoenix_bg";
   history.replaceState(null, null, null);
   var currentStateIndex = visitedPages.length - 1;
  visitedPages[currentStateIndex] = newURL; 
  
 //   console.log(snapshot.val())
  $("#phoenix_top").css({"background":cover})
  $("#phoenix_name").text(name)
  
  
   var editableDiv = document.getElementById("phoenix_top");
   var computedStyle2 = window.getComputedStyle(editableDiv);
   var backgroundImage = computedStyle2.getPropertyValue("background-image");
  function color_thief() {
    var colorThief = new ColorThief();

    var img = new Image();
    
        
        img.onload = function() {
        // Display main color e.g [125, 189, 193]
        var mainRGB = colorThief.getColor(img);
        // console.log(mainRGB.join(','));
        
   //     var mainColor = document.querySelector('.colors .main .color')
        var a = `rgb(${mainRGB[0]}, ${mainRGB[1]}, ${mainRGB[2]})`;
        $("#phoenix_inner").css({"background-image":"linear-gradient(to bottom, "+a+", #000000) "})
      //  $("#opera_inner").css({"background":a})
    
    }
    
    img.crossOrigin = "Anonymous";
    img.src = backgroundImage.toString(); 
    
}
color_thief()
  
  window.sendgrouptooverall = function(){
  open_thisgroup(groupId)
}

})
}
//  end of function 


//   open group      page      open_thisgroup  
function open_thisgroup(groupId){
 // alert("")
   document.getElementById('page_bg').style.width = '100%';
//   alert(person_id +"ggetColorf"+department)PREVIOUS_TAB = CURRENT_TAB

    CURRENT_TAB = "page_bg"
   var newURL = "page_bg";
   history.replaceState(null, null, null);
   var currentStateIndex = visitedPages.length - 1;
  visitedPages[currentStateIndex] = newURL;       
  
  
 firebase.database().ref("group_byid/"+groupId.toString()).on("value", (snapshot) => {
  
    var name  =[snapshot.val().group_name];
    var type  =[snapshot.val().group_type];
    var desc  =[snapshot.val().group_desc];
    var cover  =[snapshot.val().group_cover];
    var poster  =[snapshot.val().group_poster];
    var idy  =[snapshot.val().group_id];
    var tag_string  =[snapshot.val().group_tags];
    var owner_email  =[snapshot.val().useremail];
  
 //   console.log(snapshot.val())
  $("#page_board").css({"background":cover})
  $("#page_pic").css({"background":poster})
  $("#page_name").text(name)
  $("#page_inleg").text(desc)
  
  var delimiter = '{_}'
  var substrings = tag_string.toString().split(delimiter);

// Define a function to be applied on each substring
function myFunction(substring) {
 var e = document.createElement("span")
 $(e).text(substring)
  
 $(e).appendTo("#page_intags")
  // Your custom logic here
}

// Loop through the substrings and apply the function on each substring
substrings.forEach(myFunction);
  
    })
}
//  end of function 

function hide_hashtab(){
  document.getElementById("tweet_hashtab").style.display = "none"
   
}
function  hide_researchtab(){
 document.getElementById("research_tab").classList.remove("drop");     
   
}

//   date    format   time   

function joformatDae(dateString, timeString) {
  const now = new Date();
  const dateParts = dateString.split('|');
  const year = parseInt(dateParts[0]);
  const month = parseInt(dateParts[1]) - 1; // Months are zero-based
  const day = parseInt(dateParts[2]);

  const timeParts = timeString.match(/(\d+):(\d+):(\d+)(\w+)/);
  let hours = parseInt(timeParts[1]);
  const minutes = parseInt(timeParts[2]);
  const seconds = parseInt(timeParts[3]);
  const meridian = timeParts[4].toUpperCase();

  if (meridian === 'PM' && hours !== 12) {
    hours += 12;
  } else if (meridian === 'AM' && hours === 12) {
    hours = 0;
  }

  const date = new Date(year, month, day, hours, minutes, seconds);
  const diff = now - date;

  // Calculate time difference in minutes, hours, and days
  const diffMinutes = Math.floor(diff / (1000 * 60));
  const diffHours = Math.floor(diff / (1000 * 60 * 60));
  const diffDays = Math.floor(diff / (1000 * 60 * 60 * 24));

  if (diffMinutes < 60) {
    return `${diffMinutes} min${diffMinutes !== 1 ? 's' : ''} ago`;
  } else if (diffHours < 24) {
    return `${diffHours} hour${diffHours !== 1 ? 's' : ''} ago`;
  } else if (year === now.getFullYear()) {
    const options = { day: 'numeric', month: 'long' };
    return date.toLocaleDateString(undefined, options);
  } else {
    const options = { day: 'numeric', month: 'long', year: 'numeric' };
    return date.toLocaleDateString(undefined, options);
  }
}

function updateFormattedDate(dateString, timeString, formattedDateElement) {
  var formattedDate = joformatDae(dateString, timeString);
//  const formattedDateElement = document.getElementById('formatted-date');
  formattedDateElement.textContent = formattedDate;
}

function comment_formatDae(dateString, timeString) {
  const now = new Date();
  const dateParts = dateString.toString().split('|');
  const year = parseInt(dateParts[0]);
  const month = parseInt(dateParts[1]) - 1; // Months are zero-based
  const day = parseInt(dateParts[2]);

  const timeParts = timeString.toString().match(/(\d+):(\d+):(\d+)(\w+)/);
  let hours = parseInt(timeParts[1]);
  const minutes = parseInt(timeParts[2]);
  const seconds = parseInt(timeParts[3]);
  const meridian = timeParts[4].toUpperCase();

  if (meridian === 'PM' && hours !== 12) {
    hours += 12;
  } else if (meridian === 'AM' && hours === 12) {
    hours = 0;
  }

  const date = new Date(year, month, day, hours, minutes, seconds);
  const diff = now - date;

  // Calculate time difference in minutes, hours, and days
  const diffMinutes = Math.floor(diff / (1000 * 60));
  const diffHours = Math.floor(diff / (1000 * 60 * 60));
  const diffDays = Math.floor(diff / (1000 * 60 * 60 * 24));

  if (diffMinutes < 60) {
    return `${diffMinutes} min${diffMinutes !== 1 ? 's' : ''}`;
  } else if (diffHours < 24) {
    return `${diffHours} hour${diffHours !== 1 ? 's' : ''}`;
  } else if (year === now.getFullYear()) {
    const options = { day: 'numeric', month: 'long' };
    return date.toLocaleDateString(undefined, options);
  } else {
    const options = { day: 'numeric', month: 'long', year: 'numeric' };
    return date.toLocaleDateString(undefined, options);
  }
}

function update_commentFormattedDate(dateString, timeString, formattedDateElement) {
  var formattedDate = comment_formatDae(dateString, timeString);
//  const formattedDateElement = document.getElementById('formatted-date');
  formattedDateElement.textContent = formattedDate;
}
function sanitizeString(inputString) {
  // Remove whitespace
  var stringWithoutSpaces = inputString.replace(/\s/g, '');
  
  // Remove non-alphanumeric characters except '_', '-', and digits
  var sanitizedString = stringWithoutSpaces.replace(/[^a-z0-9_-]/gi, '');
  
  return sanitizedString;
}

 function getRandomLetters(word) {
  word = word.toString().replaceAll(' ', '')
  word = word.toString().toLowerCase()
  let startIndex;
  if (word.length < 5) {
    startIndex = 0;
  } else {
    startIndex = Math.floor(Math.random() * (word.length - 4));
  }
  
  const randomLetters = word.substring(startIndex, startIndex + 5);

  return randomLetters;
}
 function getRandomforpoll(wordy) {
   
   var word = sanitizeString(wordy)
  word = word.toString().replaceAll(' ', '');
 

  let startIndex;
  if (word.length < 5) {
    startIndex = 0;
  } else {
    startIndex = Math.floor(Math.random() * (word.length - 4));
  }
  
  const randomLetters = word.substring(startIndex, startIndex + 5);
  
  // Convert the randomLetters string to an array
  const lettersArray = randomLetters.split('');
  
  // Shuffle the array using the Fisher-Yates algorithm
  for (let i = lettersArray.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [lettersArray[i], lettersArray[j]] = [lettersArray[j], lettersArray[i]];
  }
  
  // Join the shuffled array back into a string
  var scatteredWord = lettersArray.join('');
   scatteredWord = "xt_" + scatteredWord.toString() + "_ra";
  return scatteredWord;


}

function relative_find(keyword , id, type){
  //    relative       keyword        genre         relative_find        search       item     tag    
  //console.log(keyword , id, type)
     document.getElementById("relative_bg").classList.add("drop");    
     PREVIOUS_TAB = CURRENT_TAB

  CURRENT_TAB = "relative_bg"

   
  history.pushState(null, null, null);
   visitedPages.push("relative_bg");
  $("#relative_item").text(keyword)
  var url;
  var url2;
  if(type.toString().toLowerCase().trim() == "keyword"){
    url = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_keywords=${id}&include_adult=false&sort_by=popularity.desc`
    url2 = `https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&with_keywords=${id}&include_adult=false&sort_by=popularity.desc`
  }
  else if(type.toString().toLowerCase().trim() == "company"){
    url = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_companies=${id}&include_adult=false&sort_by=popularity.desc`
    url2 = `https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&with_companies=${id}&include_adult=false&sort_by=popularity.desc`
  }
  else if(type.toString().toLowerCase().trim() == "language"){
  url = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_original_language=${id}&include_adult=false&sort_by=popularity.desc`
  url2 = `https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&with_original_language=${id}&include_adult=false&sort_by=popularity.desc`
  }
  else if(type.toString().toLowerCase().trim() == "genre"){
    url = `https://api.themoviedb.org/3/discover/movie?with_genres=${id}&api_key=${API_KEY}`   
    url2 = `https://api.themoviedb.org/3/discover/tv?with_genres=${id}&api_key=${API_KEY}`   
  
  }

//   alert(url)
  document.getElementById("relative_body").innerHTML = ""

       var popular = document.getElementById('relative_body');
let currentPage = 1;
let currentPage2 = 1;
var moviesPerPage = 15;
let totalMovies = 0;
let totalSeries = 0;
function fetchRelativeMovies() {
  // Calculate the total number of pages needed to fetch the desired number of movies
  var totalPages = Math.ceil(totalMovies / moviesPerPage);
  
  // Check if all movies have been fetched already
  if (currentPage > totalPages) {
 //   console.log('All movies have been fetched!');
    return;
  }
   
  // Fetch popular movies from TMDB API
  var bedy = `${url}&page=${currentPage}`
  var bedy2 = `${url2 }&page=${currentPage}`
//  console.log(bedy)
 // alert(bedy)
  window.clear_relative = function(){
    url = ""
    url2 = ""
  }
//  alert(bedy)
  fetch(bedy)
    .then(response => response.json())
    .then(data => {
      // popular_late     
     
      data.results.forEach(movie => {
    var a = document.createElement("section")
   
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
   //  $(a).addClass("late_kids")
     $(a).appendTo("#relative_body")
     $(a).click(function(){
       open_opera (movie.title, movie.id, bedy)
     })
      });
      
      // Increment the current page counter
      currentPage++;
    })
    .catch(error => {
     // console.error('Error fetching movies:', error);
    });
  
    
  // Fetch popular tv from TMDB API
 
}
function fetchRelativeSeries() {
  // Calculate the total number of pages needed to fetch the desired number of movies
  var totalPages = Math.ceil(totalSeries / moviesPerPage);
  
  // Check if all movies have been fetched already
  if (currentPage2 > totalPages) {
 //   console.log('All movies have been fetched!');
    return;
  }
   
  // Fetch popular movies from TMDB API
 // var bedy = `${url}&page=${currentPage}`
  var bedy2 = `${url2 }&page=${currentPage2}`
//  console.log(bedy)
 // alert(bedy)
  window.clear_relative = function(){
    url = ""
    url2 = ""
  }
  
  //  alert(bedy2)
  fetch(bedy2)
    .then(response => response.json())
    .then(data => {
      // popular_late     
     
      data.results.forEach(movie => {
    var a = document.createElement("section")
   
     a.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${movie.poster_path})`
   //  $(a).addClass("late_kids")
     $(a).appendTo("#relative_body")
     $(a).click(function(){
       open_opera (movie.name, movie.id, bedy2)
     })
      });
      
      // Increment the current page counter
      currentPage2++;
    })
    .catch(error => {
     // console.error('Error fetching movies:', error);
    });
    
  // Fetch popular tv from TMDB API
 
}

// Wrap the code inside DOMContentLoaded event listener
$(function() {
  // Fetch the total number of movies from TMDB API to calculate the total number of pages
  fetch(`${url}`)
    .then(response => response.json())
    .then(data => {
      totalMovies = data.total_results;
    //  console.log(data)
      fetchRelativeMovies();
    })
    .catch(error => {
    //  console.error('Error fetching total number of movies:', error);
    });
  fetch(`${url2}`)
    .then(response => response.json())
    .then(data => {
      totalSeries = data.total_results;
    //  console.log(data)
      fetchRelativeSeries();
    })
    .catch(error => {
    //  console.error('Error fetching total number of movies:', error);
    });

  // Add scroll event listener to "popular_late" div
 
popular.addEventListener('scroll', function() {
  if (isDivScrolledToBottom(popular)) {
 
   
      fetchRelativeMovies();  
      fetchRelativeSeries();  
  }
});

});

     
     
}
 //  end of function 
 
 
 
 
function estimateToDecimal(number) {
  // Convert the number to a string and round it to 1 decimal place
  const roundedNumber = Number(number.toFixed(1));

  return roundedNumber;
}
function loader_popup(){
    var mes=document.getElementById('loader_bgcom');
    mes.style.transform="scale(1)";
    mes.style.transitionTimingFunction="cubic-bezier(0,0,0,1.47)";
    navigator.vibrate(50);
}

//function for closing the popup 
function loader_popin(){
    var mes=document.getElementById('loader_bgcom');
    mes.style.transform="scale(0)";
    mes.style.transitionTimingFunction="cubic-bezier(0,0,0,-1.47)";
}

  

let startY;
        let endY;

        window.addEventListener('touchstart', e => {
            startY = e.touches[0].clientY;
        });

        window.addEventListener('touchend', e => {
            endY = e.changedTouches[0].clientY;
            let direction = startY - endY > 0 ? 1 : -1;
            if (Math.abs(startY - endY) > 50) {
                window.scrollBy({
                    top: window.innerHeight * direction,
                    left: 0,
                    behavior: 'smooth'
                });
            }
        });
        /*
let startY2;
        let endY2;

        document.getElementById("follow_tabinner").addEventListener('touchstart', e => {
            startY2 = e.touches[0].clientY;
        });

        document.getElementById("follow_tabinner").addEventListener('touchend', e => {
            endY2 = e.changedTouches[0].clientY;
            let direction = startY2 - endY2 > 0 ? 1 : -1;
            if (Math.abs(startY2 - endY2) > 50) {
                document.getElementById("follow_tabinner").scrollBy({
                    top: window.innerHeight * direction,
                    left: 0,
                    behavior: 'smooth'  
                });
            }
        });

*/
/*

*/
/*
// Attach an event listener to the "popstate" event
window.addEventListener("popstate", handleAppBackNavigation);

// Modify the history when the user navigates within your app
// For example, when the user clicks a button or performs an action
function navigateWithinApp() {
  // Update the URL and push a new state to the history
  const newState = { page: "example" };
  const pageTitle = "Example Page";
  const newURL = "/example-page";

  history.pushState(null, null, null);
}
*/



function handleContextBackNavigation() {
  // Perform context-specific actions here based on the provided identifier
// alert(CURRENT_TAB)
  switch (CURRENT_TAB.toString().toLowerCase()) {  
    case "hometab":
      // Handle back navigation for function1
    $("#view_footbtn").click()
      break;
    case "searchtab":
      // Handle back navigation for function1
     $("#view_footbtn").click()
      break;
    case "moretab":
     // alert("here")
      // Handle back navigation for function1
    $("#more_bg").css({"bottom":"-300px"});
         $("#moretab").slideUp()
         CURRENT_TAB = PREVIOUS_TAB
      break;
    case "filmtab":
      // Handle back navigation for function1
     $("#view_footbtn").click()
      break;
    case "opera_bg":
      // Handle back navigation for function2
     opera_exit()
 
      break;
    case "phoenix_bg":
      // Handle back navigation for function2
     phoenix_exit()
 
      break;
    case "macro_bg":
      // Handle back navigation for function2
      document.getElementById('macro_bg').style.width = '0';
     overallexit_func()
      break;
    case "drive_bg":
      // Handle back navigation for function2
      document.getElementById('drive_bg').style.width = '0';
     document.getElementById('viewtab').style.marginRight = '0%';
      break;
    case "search_answer":
      // Handle back navigation for function2
   document.getElementById('searchtab').style.marginRight = '0%';
     document.getElementById('search_answer').style.width = '0%';
      break;
    case "crew_bg":
      // Handle back navigation for function2
   document.getElementById('crew_bg').style.width = '0';
      break;
    case "crew_postdiv":
      // Handle back navigation for function2
     $("#crew_workbtn").removeClass("week_controlclass")
    $("#crew_postbtn").removeClass("week_controlclass")
    document.getElementById("crew_workdiv").style.width = '0'
    document.getElementById("crew_postdiv").style.width = '0'
   
      break;
    case "moretab_divs":
      // Handle back navigation for function2
 $(".add_emaildivs").css({"bottom":"-300px"});
        
$(".content").removeClass("visible")
$(".chevron").removeClass("collapsed")
  document.getElementById('amenities_bg').style.width = '0%';  
  document.getElementById('add_emailval').value = '';  
  document.getElementById('add_listval').value = '';  
      break;
    case "confirm_bg":
      // Handle back navigation for function2
     document.getElementById("confirm_bg").style.bottom = "-300px";
      break;
    case "addmoment_bg":
      // Handle back navigation for function2
     document.getElementById("addmoment_bg").classList.remove ("drop");
      break;
    case "addcloset_bg":
      // Handle back navigation for function2
     document.getElementById("addcloset_bg").classList.remove ("drop");
      break;
    case "biglatest_bg":
      // Handle back navigation for function2
      if(typeof clear_latesturl != 'function'){
   window.clear_latesturl = function(){
    return false;
   };
}
     clear_latesturl()
  document.getElementById("biglatest_bg").classList.remove("drop");
      break;
    case "tag_bg":
      // Handle back navigation for function2
     document.getElementById("tag_bg").classList.remove("drop");
       if(typeof clear_searchtagurl2 != 'function'){
   window.clear_searchtagurl2 = function(){
    return false;
   };
}
  if(typeof clear_searchtagurl1 != 'function'){
   window.clear_searchtagurl1 = function(){
    return false;
   };
}
     clear_searchtagurl1()
     clear_searchtagurl2()
      break;
    case "tweet_bg":
      // Handle back navigation for function2
     document.getElementById("tweet_bg").classList.remove("drop");
     hide_hashtab()
      hide_researchtab()
      break;
    case "function2":
      // Handle back navigation for function2
      console.log("Back navigation for function2");
      break;
    case "season_overall":
      // Handle back navigation for function2
       document.getElementById("season_overall").style.width = '0'
          
    document.getElementById("seas_overalltotal").innerHTML = ''
    document.getElementById("season_counter").innerHTML = ''  
  //  document.getElementById("season_square").style.backgroundImage= ''  
      break;
    case "season_commentdiv":
      // Handle back navigation for function2
       document.getElementById("season_commentdiv").style.width = '0';
      break;
    case "long_commtab":
      // Handle back navigation for function2
       document.getElementById("long_commtab").style.width = '0';
      break;
    case "long_reviewtab":
      // Handle back navigation for function2
       document.getElementById("long_reviewtab").style.width = '0';
        hide_hashtab()
      break;
    case "intro_body":
      // Handle back navigation for function2
       document.getElementById('intro_body').style.width = '0';
 //   document.getElementById('content').style.marginLeft = '0';
      $("#intro_bot").hide()
      $("#intro_skip").hide()
   $("#second_come").show()  
   $("#second_come").addClass("shrink_class")  
setTimeout(function() {



   $("#second_come").removeClass("shrink_class")  
  }, 100)
      break;
    case "longman_bg":
      
         $(".tag_controlbtns").css({"background-color":"#4444"})
      $("#tag_movbtn").css({"background-color":"#e67e22"})
      // Handle back navigation for function2
         document.getElementById("long_commtab").style.width = '0';
          document.getElementById("long_reviewtab").style.width = '0';
       document.getElementById("longman_bg").style.width = '0';
      break;
    case "page_bg":
      
       document.getElementById("page_bg").style.width = '0';
      break;
    case "chan_searchtab":
      
         document.querySelector('.film_subtabs').style.marginRight = '0%';
      document.getElementById('chan_searchtab').style.width = '0%';
      break;
    case "relative_bg":
      
       document.getElementById("relative_bg").classList.remove("drop");    
       //  if(!function  )
       if(typeof clear_relative != 'function'){
   window.clear_relative = function(){
    return false;
   };
}
     clear_relative()
      break;
    case "trending_bg":
      
       document.getElementById("trending_bg").classList.remove("drop");    
    
      break;
    case "closet_bg":
      
       document.getElementById("closet_bg").style.width = '0';    
    $("#closet_listbtn").click()
  //   $("#closet_body").css({"position":"relative", "overflow-y":"visible"})
     
      $("#closet_birthdate").text("")
    $("#closet_birthplace").text("")
    $("#closet_listdiv").text("")
    $("#closet_describe").text("")
    $("#closet_aka").text("")
    $("#closet_dept").text("")
    $("#closet_name").text("")
    $("#closet_image").css({"background-image":""})
    $("#closet_deathdiv").hide()
    $("#closet_webdiv").hide()
     
      break;
    case "comment_tabbg":
    document.getElementById('comment_tabbg').style.width = '0';
    hide_hashtab()
    hide_researchtab()
      break;
    case "feed_tabdiv":
 document.getElementById("feed_tabdiv").classList.remove("drop");     
      break;
    case "club_formbg":
 $("#group_optionbg").hide()
  $("#club_firstsection").show()
  $("#club_secondsection").hide()
  $("#club_thirdsection").hide()
 document.querySelector('.film_subtabs').style.marginRight = '0';
 document.getElementById("club_formbg").style.width = '0';     
 document.getElementById("club_ansname").value = ''; 
 $("#club_nameerror").text("")
 $("#club_anstype").text("Public")
 document.getElementById("club_ansdesc").value = '';  
  $("#club_coverimg").css({"background-image":""})
  $("#club_posterimg").css({"background-image":""})
 // Get all checkboxes with the class "group_radios"
var checkboxes = document.querySelectorAll('.group_radios');

// Loop through each checkbox and uncheck it
checkboxes.forEach((checkbox) => {
  checkbox.checked = false;
});
$("#club_firstsubmit").hide()
      break;
    case "tweet_hashtab":
 $("#tweet_hashtab").hide()

      break;
    case "loader_spinbg":
$("#loader_spinbg").hide()   

      break;
    case "mygroup_list":
document.getElementById("mygroup_list").classList.remove ("drop");

      break;
    case "gallery_bg":
document.getElementById("gallery_bg").classList.remove ("drop");

      break;
    case "option_tabdiv":
document.getElementById("option_tabdiv").classList.remove ("drop");

      break;
    case "whatsapp_bg":
document.getElementById("whatsapp_bg").classList.remove ("drop");
 removeSelectedClass();
document.getElementById("whatsapp_bg").classList.remove ("drop");
   if(typeof clearshareid != 'function'){
   window.clearshareid = function(){
    return false;
   };
}
     clearshareid()
  $("#whatsapp_count").text("None Selected")
  document.getElementById("whatsapp_input").innerHTML = ""
  document.getElementById("whatsapp_bot").innerHTML = ""
  $("#whatsapp_send").hide()
      break;
    case "term_slide":
document.getElementById('term_slide').style.width = '0%';


      break;
    // Add additional cases for other functions
    default:
      // Handle default case if needed
      break;
  }
}
// Function to handle back navigation for a specific context       history     back      navigation     back navigation   


// Array to track the pages visited in your app


// Push a new page to the array when navigating
function navigateToPage(pageUrl) {
 
//  history.pushState(null, "", pageUrl);
}


// Check if the current page is the last page in your app
function isLastPage() {
 // console.log(visitedPages)
  if(visitedPages.length === 1){
  //alert("Last page")
    
    return true ;
  }
  else{
 // alert(visitedPages.length )
    return false ;
  }
}

// Attach an event listener to the "popstate" event
window.addEventListener("popstate", function() {
  // Determine the appropriate back navigation behavior based on the current context
  //console.log (CURRENT_TAB)
  // Replace with your logic to determine the current context
//  console.log(history)
  
  // Get the last history entry state

/*
// Get the last history entry URL
const lastURL = history.location.href;

// Access specific properties from the last state
if (lastState) {
  const lastPage = lastState.page;
  // Perform actions based on the last page value or other state properties
  console.log("Last page:", lastPage);
}

// Print the last URL
console.log("Last URL:", lastURL);
*/
  // Call the corresponding back navigation function for the current context

  isLastPage()
  handleContextBackNavigation();  
  visitedPages.pop();
  CURRENT_TAB = visitedPages[visitedPages.length - 1];
 console.log(visitedPages);
});
function history_back(){
 // CURRENT_TAB = visitedPages[visitedPages.length - 1];
}
// Example functions with unique back navigation behaviors
function function1() {
  // Perform function1 specific actions

  // Update the URL and push a new state to the history
  const newState = { context: "function1" };
  const pageTitle = "Function 1 Page";
  const newURL = "/function1-page";

  history.pushState(null, null, null);
}

function function2() {
  // Perform function2 specific actions

  // Update the URL and push a new state to the history
  const newState = { context: "function2" };
  const pageTitle = "Function 2 Page";
  const newURL = "/function2-page";

  history.pushState(null, null, null);
}

function checkDivDisplay(divId) {
  const div = document.getElementById(divId);

  if (window.getComputedStyle(div).display === "block") {
  //  alert(`The div with ID "${divId}" is currently displayed as block`);
  return true ;
  } else {
   // alert(`The div with ID "${divId}" is not displayed as block`);
   return false ;
  }
}

function detectLinks(input) {
  var pattern = /(https?:\/\/[^\s]+)/g;
 // var inputValue = input.value;
  var links = input.match(pattern);
  
  if (links) {
    return links; // Do something with the links
  }
}

///     season          season_overall      
function open_seasonoverall(seriesId, currentseason ){
    // alert(seriesId)
      document.getElementById("season_overall").style.width = '100%'
       PREVIOUS_TAB = CURRENT_TAB

  CURRENT_TAB = "season_overall"

  history.pushState(null, null, null);
   visitedPages.push("season_overall");
// var currentseason = 1

   var movieDetailsUrl = `https://api.themoviedb.org/3/tv/${seriesId}?api_key=${API_KEY}`;

fetch(movieDetailsUrl)
  .then(response => response.json())
  .then(data => {
  //  console.log(data)
 
    
      var backdrop = data.backdrop_path;
      var posterPath = data.poster_path;
  $("#series_title").text(data.name)
 
var count = data.number_of_seasons 
for (let i = 1; i <= count; i++) {
    var div = document.createElement('section');
 //   div.textContent = `Season ${i}`;
    document.getElementById("season_counter").appendChild(div);
  }
  function fill_in_stuff(){
    
    
   document.getElementById("seas_overalltotal").innerHTML = ''
    document.getElementById("season_counter").innerHTML = ''  
var overall = document.createElement("div")
var top = document.createElement("div")
var left = document.createElement("div")
var middle = document.createElement("div")
var square = document.createElement("div")
var right = document.createElement("div")
var info = document.createElement("div")
var ser_name = document.createElement("div")
var sea_name = document.createElement("div")
var list = document.createElement("div")
var listinn = document.createElement("div")
 
overall.id = "seas_overallinner"
top.id = "seas_overtop"
left.id = "season_left"
middle.id = "season_middle"
square.id = "season_square"
right.id = "season_right"
info.id = "season_info"
ser_name.id = "series_title"
sea_name.id = "season_title"
list.id = "seas_episodeslist"
listinn.id = "seas_episodesinner"


//   overall.style.marginRight = '100%'
overall.style.transform="translateX(0)";
//alert("")
fetchSeason(seriesId, currentseason)   
  .then(season => {
    // Process the season data
 //   console.log('Season:', season);
     $(sea_name).text(season.name)
     
     if (season.poster_path) {
 // console.log("Season has a poster image:", season.poster_path);
 square.style.backgroundImage = `url(https://image.tmdb.org/t/p/w300${season.poster_path})`;  
   function color_thief() {
    var colorThief = new ColorThief();

    var img = new Image();
    
        
        img.onload = function() {
        // Display main color e.g [125, 189, 193]
        var mainRGB = colorThief.getColor(img);
      
        var a = `rgb(${mainRGB[0]}, ${mainRGB[1]}, ${mainRGB[2]})`;
     // alert(a)
      
        $("#seas_overalltotal").css({"background-image":"linear-gradient(to bottom, "+a+", #000004) "})
       
    }
    
    img.crossOrigin = "Anonymous";
    img.src = `https://image.tmdb.org/t/p/w300${season.poster_path}`; 
    
}
color_thief()
} else {
   square.style.backgroundImage = `url(https://image.tmdb.org/t/p/w300${data.poster_path})`;  
   function color_thief() {
    var colorThief = new ColorThief();

    var img = new Image();
    
        
        img.onload = function() {
        // Display main color e.g [125, 189, 193]
        var mainRGB = colorThief.getColor(img);
      
        var a = `rgb(${mainRGB[0]}, ${mainRGB[1]}, ${mainRGB[2]})`;
     // alert(a)
      
        $("#seas_overalltotal").css({"background-image":"linear-gradient(to bottom, "+a+", #000004) "})
       
    }
    
    img.crossOrigin = "Anonymous";
    img.src = `https://image.tmdb.org/t/p/w300${data.poster_path}`; 
    
}
color_thief()
 // console.log("Season does not have a poster image.");
}
  //   const url = `https://api.themoviedb.org/3/tv/${tvSeriesId}/season/1?api_key=${apiKey}`;

 
     
 season.episodes.forEach(episode => {
   /*
    // Call your desired function or perform actions for each episode
    console.log("Episode Name:", episode.name);
    console.log("Episode Number:", episode.episode_number);
    console.log("Overview:", episode.overview);
    console.log("Air Date:", episode.air_date);
    console.log("-------------------");  
    */
       var cover = document.createElement("div")
          var image = document.createElement("div")
          var post = document.createElement("div")
          var hold = document.createElement("div")
          var section = document.createElement("nav")
          var text = document.createElement("div")
          var btns = document.createElement("div")
          var span1 = document.createElement("span")
          var span2 = document.createElement("span")
          var span3 = document.createElement("span")
          var spannumber = document.createElement("span")
          var span5 = document.createElement("span")
          var episode_name = document.createElement("b")
          var episode_rate = document.createElement("span")
          var episode_info = document.createElement("span")
          var episode_date = document.createElement("span")
          var episode_summ = document.createElement("div")
          
          $(cover).addClass("twit_cover")
          $(image).addClass("twit_profileimg")
          $(post).addClass("twit_post")
          $(hold).addClass("twit_content")
             hold.style.display = "flex"
          $(text).addClass("season_twit_text")
          $(episode_rate).addClass("episode_rate")
          $(episode_info).addClass("episode_info")
          $(btns).addClass("twit_btns")
          $(span5).addClass("display_flex align_center")
            
          $(span1).append('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-heart" viewBox="0 0 16 16"><path d="m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z"/></svg>')
          $(span2).append('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-chat-left-dots" viewBox="0 0 16 16"><path d="M14 1a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H4.414A2 2 0 0 0 3 11.586l-2 2V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12.793a.5.5 0 0 0 .854.353l2.853-2.853A1 1 0 0 1 4.414 12H14a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z"/><path d="M5 6a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0zm4 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/></svg>')
          $(span3).append('<svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-three-dots-vertical" viewBox="0 0 16 16"><path d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/></svg>')
          image.id = "season_twit_image"
          // season_twit_section
          $(image).text(episode.episode_number)
          $(episode_name).text(episode.name)
          $(episode_rate).text(estimateToDecimal(episode.vote_average))
        var commentId = `${seriesId}-season ${season.season_number}-episode ${episode.episode_number}`
$(span2).click(function(){
  open_commenttab(`${commentId}`, 'series_episode', seriesId, season.season_number, episode.episode_number)
})
var seasonno = season.season_number 
var episodeno = episode.episode_number

   $(function(){
 var database = firebase.database();
 
 var userId = useremail;    
  var userRef = database.ref(`filmcomment_likes/series/${seriesId.toString()}/${seasonno}/${episodeno}/${commentId}/${userId}`);   
span1.addEventListener('click', function() {
 // alert(userRef)
  // Check if the user has already liked the post

  userRef.once('value', function(snapshot) {
    var hasLiked = snapshot.val();

    if (hasLiked) {
      // User has already liked the post, so remove the like
      userRef.remove();
     
    } else {
      // User has not liked the post, so add the like
      userRef.set(true);
   
    }
  });
});
userRef.on('value', function(snapshot) {
    var hasLiked = snapshot.val();
    if (hasLiked) {
      $(span1).addClass('like_effect')
      $(span1).css({"color":"red", "transition" : "color 0.5s"})
    }
    else{
      $(span1).removeClass('like_effect')
      $(span1).css({"color":"#fff"})
    }
  })
function getTotalLikes( commentId) {
  var likesRef =  database.ref(`filmcomment_likes/series/${seriesId.toString()}/${seasonno}/${episodeno}/${commentId}`);
//  alert(likesRef)
  likesRef.on('value', function(snapshot) {
    var likes = snapshot.val(); 
  //  console.log(likes)
    var totalLikes = Object.keys(likes || {}).length;
  
var formattedLikes = formatNumber(totalLikes);
$(spannumber).text(formattedLikes);
  });
}
getTotalLikes(commentId);               
// I removed the postId varivake getTotalLikes(postId , commentId)
               
        })

          $(episode_date).text(episode.air_date)
          $(episode_summ).html(episode.overview)
         // $(section).text(episode.overview)
 section.style.backgroundImage = `url(https://image.tmdb.org/t/p/w300${backdrop })`;  
  var img = new Image();  
 
img.src = `https://image.tmdb.org/t/p/w300${backdrop}`;  
img.onload = function() {

  const aspectRatio = img.naturalWidth / img.naturalHeight;
  var bed = "calc(100% /"+ aspectRatio+")" 
//alert(bed)
 $(section).css({"padding-top": bed})    
  



}
          $(episode_info).append(episode_rate, episode_date)
          $(text).append(episode_name, episode_info, episode_summ)
          $(span5).append(span1, spannumber)
          $(btns).append(span5, span2, span3)
          $(hold).append(section)
          $(post).append(hold ,text, btns)
          $(cover).append(image, post)
          $(listinn).append(cover)
     
    
  });
     
     
// Usage example
fetchEpisodeVideos(seriesId, 1, 1)
  .then(videos => {
    // Process the videos data
    console.log('Videos:', videos);
  })
  .catch(error => {
  //  console.log('Error:', error.message);
  });

     
  })
  .catch(error => {
 //   console.log('Error:', error.message);
  });
$(right).click(function() {
  if (currentseason < count) {
   // alert("")
    currentseason++;
  overall.style.transform="translateX(-100%)";
  //  overall.style.marginLeft = '100%'
    setTimeout(function() {
    fill_in_stuff();
  }, 300)
  }
});
$(left).click(function() {
  if (currentseason > 1) {
    currentseason--;
   overall.style.transform="translateX(100%)";
     setTimeout(function() {
  fill_in_stuff();
  }, 300)
  }
});
 // alert("done") 

  
  $(middle).append(square)
  $(top).append(left, middle, right)
  $(info).append(ser_name, sea_name)
  $(list).append(listinn)
  $(overall).append(top, info, list)
  $('#seas_overalltotal').append(overall)
//alert("done")
  }
  fill_in_stuff()
})

   }
//  end of function    

// Function to fetch the seasons of a TV series
async function fetchSeasons(tvSeriesId) {
  const url = `https://api.themoviedb.org/3/tv/${tvSeriesId }?api_key=${API_KEY}&append_to_response=seasons`;

  try {
    const response = await fetch(url);
    const data = await response.json();

    const seasons = data.seasons;
    return seasons;
  } catch (error) {
   // console.log('Error:', error.message);
    return [];
  }
}


// Function to fetch a specific season of a TV series
async function fetchSeason(tvSeriesId, seasonNumber) {
  const url = `https://api.themoviedb.org/3/tv/${tvSeriesId}/season/${seasonNumber}?api_key=${API_KEY}`;
//alert(url)
  try {
    const response = await fetch(url);
    const season = await response.json();

    return season;
  } catch (error) {
  //  console.log('Error:', error.message);
    return null;
  }
}


// Function to fetch videos for an episode
async function fetchEpisodeVideos(tvSeriesId, seasonNumber, episodeNumber) {
  const url = `https://api.themoviedb.org/3/tv/${tvSeriesId}/season/${seasonNumber}/episode/${episodeNumber}/videos?api_key=${API_KEY}`;

  try {
    const response = await fetch(url);
    const data = await response.json();

    const videos = data.results;
    return videos;
  } catch (error) {
  //  console.log('Error:', error.message);
    return [];
  }
}

//  moment       

var imageFileInput = document.getElementById("addmoment_input");
  imageFileInput.addEventListener('change', function(event) {
   // function addmoment_func(id, type){
    //  alert("")$
$("#confirm_decline").click()
       var d = new Date(); 

// var downloadURLsString;
       var time = d.toLocaleTimeString();
      var date = d.getDate();
    var fullyear = d.getFullYear();
    var month = d.getMonth();
   month= month+1;
var date=(fullyear+"|"+month+"|"+date);
      
  
     var storage = firebase.storage();
var files = imageFileInput.files;
//  console.log(files)
// Array to store Promises for each upload
var uploadPromises = [];

// Loop through each file selected
for (var i = 0; i < files.length; i++) {
  var file = files[i];
var fileName = Date.now() + '-' + file.name;
  // Create a storage reference to the file
// var type = 'movies'
// var id = 385687
 var id = $("#film_pathid").text()
  var type = $("#film_pathtype").text()
//  alert(`${id}/${type}`)
 var post_type ;
  if (file && file.type.match('image.*')) {
    post_type = 'image'
  }
  else if (file && file.type.match('video.*')) {
    post_type = 'video'
  }
  else {
    post_type = 'something else'
  }

  var storageRef = storage.ref().child(type.toString()+"_images/"+id.toString()+"/"+useremail.toString()+"/"+ fileName);

  // Push the upload task promise to the array
  var uploadTask = storageRef.put(file);
  uploadPromises.push(uploadTask);
}

// Wait for all uploads to complete
Promise.all(uploadPromises).then(function(snapshots) {
  // Array to store download URLs
  var downloadURLs = [];

  // Loop through the snapshots and get the download URLs
  snapshots.forEach(function(snapshot) {
    snapshot.ref.getDownloadURL().then(function(url) {
      downloadURLs.push(url);

      // Check if all download URLs are retrieved
    //  console.log(downloadURLs);
 //    alert(downloadURLs)
     
     firebase.database().ref(`moments/${type}/${id}`).push({

 "useremail":useremail.toString(),
 "image_string":downloadURLs.toString(),
 "post_type":post_type.toString(),
 "date":date.toString(),
 "time":time.toString(),
 "type":type.toString(),
 "movieId":id.toString(),
 "extra1":"extra_one",
 "extra2":"extra_two"
 });
     
 success_alert("Posted successfully ")
 document.getElementById("addmoment_input").value = ''
      
    }).catch(function(error) {
     // console.error("Error getting download URL for file:", error);
 failure_alert(error)
        
    });
  });
}).catch(function(error) {
 // console.error("Error uploading files:", error);
 failure_alert(error)
});


 //     alert(downloadURLsString)
      
      
    
    // }

})



var imageFileInput = document.getElementById("addcloset_input");
  imageFileInput.addEventListener('change', function(event) {
   // function addmoment_func(id, type){
    //  alert("")$
$("#confirm_nega").click()
       var d = new Date(); 

// var downloadURLsString;
       var time = d.toLocaleTimeString();
      var date = d.getDate();
    var fullyear = d.getFullYear();
    var month = d.getMonth();
   month= month+1;
var date=(fullyear+"|"+month+"|"+date);
      
  
     var storage = firebase.storage();
var files = imageFileInput.files;
//  console.log(files)
// Array to store Promises for each upload
var uploadPromises = [];

// Loop through each file selected
for (var i = 0; i < files.length; i++) {
  var file = files[i];
var fileName = Date.now() + '-' + file.name;
  // Create a storage reference to the file
// var type = 'movies'
// var id = 385687
 var id = $("#closet_id").text()
//  alert(`${id}/${type}`)
 var post_type ;
  if (file && file.type.match('image.*')) {
    post_type = 'image'
  }
  else if (file && file.type.match('video.*')) {
    post_type = 'video'
  }
  else {
    post_type = 'something else'
  }

  var storageRef = storage.ref().child("actor_images/"+id.toString()+"/"+useremail.toString()+"/"+ fileName);

  // Push the upload task promise to the array
  var uploadTask = storageRef.put(file);
  uploadPromises.push(uploadTask);
}

// Wait for all uploads to complete
Promise.all(uploadPromises).then(function(snapshots) {
  // Array to store download URLs
  var downloadURLs = [];

  // Loop through the snapshots and get the download URLs
  snapshots.forEach(function(snapshot) {
    snapshot.ref.getDownloadURL().then(function(url) {
      downloadURLs.push(url);

      // Check if all download URLs are retrieved
    //  console.log(downloadURLs);
 //    alert(downloadURLs)
     
     firebase.database().ref(`closets/${type}/${id}`).push({

 "useremail":useremail.toString(),
 "image_string":downloadURLs.toString(),
 "post_type":post_type.toString(),
 "date":date.toString(),
 "time":time.toString(),
 "type":"",
 "movieId":id.toString(),
 "extra1":"extra_one",
 "extra2":"extra_two"
 });
     
 success_alert("Posted successfully ")
 document.getElementById("addcloset_input").value = ''
      
    }).catch(function(error) {
     // console.error("Error getting download URL for file:", error);
 failure_alert(error)
        
    });
  });
}).catch(function(error) {
 // console.error("Error uploading files:", error);
 failure_alert(error)
});


 //     alert(downloadURLsString)
      
      
    
    // }

})


var imageFileInput2 = document.getElementById("addcloset_input");
  imageFileInput2.addEventListener('change', function(event) {
   // function addmoment_func(id, type){
      alert("")

       var d = new Date(); 

// var downloadURLsString;
       var time = d.toLocaleTimeString();
      var date = d.getDate();
    var fullyear = d.getFullYear();
    var month = d.getMonth();
   month= month+1;
var date=(fullyear+"|"+month+"|"+date);
      
  
//  var images = addNomisceneDiv.getElementsByTagName("img");
/*
// Create an array to store unique src values
var uniqueSrcValues = [];

// Loop through the images and retrieve their src attribute values
for (let i = 0; i < images.length; i++) {
  var src = images[i].src;

  // Check if src value is not already in the uniqueSrcValues array
  if (!uniqueSrcValues.includes(src)) {
    uniqueSrcValues.push(src); // Store unique src value in the array
  }
//  alert(src)
}

// Concatenate unique src values into a string separated by underscores
 srcString = uniqueSrcValues.join("{_}");
 */
     var storage = firebase.storage();
var files = imageFileInput.files;
//  console.log(files)
// Array to store Promises for each upload
var uploadPromises = [];

// Loop through each file selected
for (var i = 0; i < files.length; i++) {
  var file = files[i];
var fileName = Date.now() + '-' + file.name;
  // Create a storage reference to the file
 var type = 'movies'
 var post_type ;
 var id = 385687
  if (file && file.type.match('image.*')) {
    post_type = 'image'
  }
  else if (file && file.type.match('video.*')) {
    post_type = 'video'
  }
  else {
    post_type = 'something else'
  }

  var storageRef = storage.ref().child(type.toString()+"_images/"+id.toString()+"/"+useremail.toString()+"/"+ fileName);

  // Push the upload task promise to the array
  var uploadTask = storageRef.put(file);
  uploadPromises.push(uploadTask);
}

// Wait for all uploads to complete
Promise.all(uploadPromises).then(function(snapshots) {
  // Array to store download URLs
  var downloadURLs = [];

  // Loop through the snapshots and get the download URLs
  snapshots.forEach(function(snapshot) {
    snapshot.ref.getDownloadURL().then(function(url) {
      downloadURLs.push(url);

      // Check if all download URLs are retrieved
    //  console.log(downloadURLs);
 //    alert(downloadURLs)
     
     firebase.database().ref(`moments/${type}/${id}`).push({

 "useremail":useremail.toString(),
 "image_string":downloadURLs.toString(),
 "post_type":post_type.toString(),
 "date":date.toString(),
 "time":time.toString(),
 "type":type.toString(),
 "movieId":id.toString(),
 "extra1":"extra_one",
 "extra2":"extra_two"
 });
     
 success_alert("Posted successfully ")
 document.getElementById("addmoment_input").value = ''
      
    }).catch(function(error) {
     // console.error("Error getting download URL for file:", error);
 failure_alert(error)
        
    });
  });
}).catch(function(error) {
 // console.error("Error uploading files:", error);
 failure_alert(error)
});


 //     alert(downloadURLsString)
      
      
    
    // }

})
   
// Import Axios (if using a package manager)
// const axios = require('axios');


var apiUrl1 = `https://api.themoviedb.org/3/movie/popular?api_key=${API_KEY}&language=en-US`;

fetch(apiUrl1) 
 .then(response => response.json())
  .then(data => {
    var mostPopularMovie = data.results[0];
 //   console.log('Most Popular Movie:', mostPopularMovie);
 var cover = document.createElement('div')
 var inn = document.createElement('div')
 var top = document.createElement('div')
 var bot = document.createElement('div')
 var img = document.createElement('div')
 var side = document.createElement('div')
 var name = document.createElement('span')
 var gen = document.createElement('span')
 var extra = document.createElement('span')
 var imdb = document.createElement('span')
 var len = document.createElement('span')
 
 $(cover).addClass('one_status swiper-slide')
 $(inn).addClass('status_inner')
 $(top).addClass('status_top')
 $(bot).addClass('status_bot')
 $(img).addClass('status_image')
 $(side).addClass('status_side')
 $(name).addClass('son_filmname')
 $(gen).addClass('son_filmgen')
 $(extra).addClass('son_filmtwo')
 $(imdb).addClass('son_filmimdb')
 $(len).addClass('son_filmlen')
 
 fetch(`https://api.themoviedb.org/3/movie/${mostPopularMovie.id}/images?api_key=${API_KEY}&include_image_language=en&include_image_type=poster`)
  .then(response => response.json())
  .then(data => {
    var image = data.posters[0]; // or data.backdrops[0] for backdrops
    var ima = data.posters[1]; // or data.backdrops[0] for backdrops
    var imageU = `https://image.tmdb.org/t/p/original${image.file_path}`;
    var imageUrl = `https://image.tmdb.org/t/p/original${ima.file_path}`;
   // console.log(imageUrl); // log the URL of the image to the console  
    top.style.backgroundImage = "url("+imageUrl+")";
    img.style.backgroundImage = "url("+imageU+")";
  })  .catch(error => {  
   top.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${mostPopularMovie.backdrop_path})`  
   img.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${mostPopularMovie.poster_path})`
  })
 
    
 
 $(name).text(mostPopularMovie.title)
 
  var movieDetailsUrl = `https://api.themoviedb.org/3/movie/${mostPopularMovie.id}?api_key=${API_KEY}`;
  
  // Fetch movie details from TMDB API
  fetch(movieDetailsUrl)
    .then(response => response.json())
    .then(data => {
       var duration = data.runtime;
      
      var genres = data.genres;
 var movieYear = getMovieYear(data.release_date);
    genres.forEach(genre => {
      var genreSpan = document.createElement('span');
      genreSpan.textContent = genre.name;
      genreSpan.classList.add('tag');
      $(gen).append(genreSpan);
    });

      $(len).html(duration+" min");
      
   
    fetch(`https://www.omdbapi.com/?apikey=${OMDB_KEY}&t=${mostPopularMovie.title.toString().toLowerCase()}&y=${movieYear}&plot=full`)

  .then(response => response.json())
  .then(data => {
  //  console.log (data)
    if (data.Response === 'True') {  
       $(imdb).text(data.imdbRating);
    } else {
        return false;
    }
  })
  
  
    })
 
 var posterUrl = `https://image.tmdb.org/t/p/w500${mostPopularMovie.poster_path}`
 function color_thief() {
    var colorThief = new ColorThief();

    var img = new Image();
    
        
        img.onload = function() {
        // Display main color e.g [125, 189, 193]
        var mainRGB = colorThief.getColor(img);
        // console.log(mainRGB.join(','));
        
   //     var mainColor = document.querySelector('.colors .main .color')
        var a = `rgb(${mainRGB[0]}, ${mainRGB[1]}, ${mainRGB[2]})`;
   
        $(inn).css({"background-image":"linear-gradient(to bottom, "+a+", #000000) "})
    
    }
    
    img.crossOrigin = "Anonymous";
    img.src = posterUrl.toString(); 
    
}
color_thief()
$(cover).click(function(){
  open_opera(mostPopularMovie.title , mostPopularMovie.id , 'movie')
})
 
 
 $(extra).append(imdb, len)
 $(side).append(name, gen, extra)
 $(bot).append(img, side)
 $(inn).append(top, bot)
 $(cover).append(inn)
 $('#status_val').append(cover)
 
 
 
 
  })
  .catch(error => {
  //  console.error('Error:', error);
  });
  
  
var apiUrl2 = `https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&with_original_language=en&include_adult=false&sort_by=popularity.desc`;

fetch(apiUrl2) 
 .then(response => response.json())
  .then(data => {
    var moviey = data.results[0];
   // console.log ("rest", moviey)
var newText = `https://api.themoviedb.org/3/tv/${moviey.id}?api_key=${API_KEY}`;

fetch(newText) 
 .then(response => response.json())
  .then(data => {
    var mostPopularMovie = data;
  //  console.log('Most Popular Movie:', mostPopularMovie);

 var cover = document.createElement('div')
 var inn = document.createElement('div')
 var top = document.createElement('div')
 var bot = document.createElement('div')
 var img = document.createElement('div')
 var side = document.createElement('div')
 var name = document.createElement('span')
 var gen = document.createElement('span')
 var extra = document.createElement('span')
 var imdb = document.createElement('span')
 var len = document.createElement('span')
 
 $(cover).addClass('one_status swiper-slide')
 $(inn).addClass('status_inner')
 $(top).addClass('status_top')
 $(bot).addClass('status_bot')
 $(img).addClass('status_image')
 $(side).addClass('status_side')
 $(name).addClass('son_filmname')
 $(gen).addClass('son_filmgen')
 $(extra).addClass('son_filmtwo')
 $(imdb).addClass('son_filmimdb')
 $(len).addClass('son_filmfile')
 
 fetch(`https://api.themoviedb.org/3/movie/${mostPopularMovie.id}/images?api_key=${API_KEY}&include_image_language=en&include_image_type=poster`)
  .then(response => response.json())
  .then(data => {
    var image = data.posters[0]; // or data.backdrops[0] for backdrops
    var ima = data.posters[1]; // or data.backdrops[0] for backdrops
    var imageU = `https://image.tmdb.org/t/p/original${image.file_path}`;
    var imageUrl = `https://image.tmdb.org/t/p/original${ima.file_path}`;
   // console.log(imageUrl); // log the URL of the image to the console  
    top.style.backgroundImage = "url("+imageUrl+")";
    img.style.backgroundImage = "url("+imageU+")";
  })  .catch(error => {  
   top.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${mostPopularMovie.backdrop_path})`  
   img.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${mostPopularMovie.poster_path})`
  })
 
    
 
 $(name).text(mostPopularMovie.name)
 
  var movieDetailsUrl = `https://api.themoviedb.org/3/tv/${mostPopularMovie.id}?api_key=${API_KEY}`;
  
  // Fetch movie details from TMDB API
  fetch(movieDetailsUrl)
    .then(response => response.json())
    .then(data => {
       var duration = data.runtime;
      
      var genres = data.genres;
 var movieYear = getMovieYear(data.first_air_date);
    genres.forEach(genre => {
      var genreSpan = document.createElement('span');
      genreSpan.textContent = genre.name;
      genreSpan.classList.add('tag');
      $(gen).append(genreSpan);
    });

       $(len).text(`S${mostPopularMovie.number_of_seasons} E${mostPopularMovie.number_of_episodes}`)
      
   
    fetch(`https://www.omdbapi.com/?apikey=${OMDB_KEY}&t=${mostPopularMovie.name.toString().toLowerCase()}&y=${movieYear}&plot=full`)

  .then(response => response.json())
  .then(data => {
  //  console.log (data)
    if (data.Response === 'True') {  
       $(imdb).text(data.imdbRating);
    } else {
        return false;
    }
  })
  
  
    })
 
 var posterUrl = `https://image.tmdb.org/t/p/w500${mostPopularMovie.poster_path}`
 function color_thief() {
    var colorThief = new ColorThief();

    var img = new Image();
    
        
        img.onload = function() {
        // Display main color e.g [125, 189, 193]
        var mainRGB = colorThief.getColor(img);
        // console.log(mainRGB.join(','));
        
   //     var mainColor = document.querySelector('.colors .main .color')
        var a = `rgb(${mainRGB[0]}, ${mainRGB[1]}, ${mainRGB[2]})`;
    
        $(inn).css({"background-image":"linear-gradient(to bottom, "+a+", #000000) "})
    
    }
    
    img.crossOrigin = "Anonymous";
    img.src = posterUrl.toString(); 
    
}
color_thief()
$(cover).click(function(){
  open_opera(mostPopularMovie.title , mostPopularMovie.id , 'tv')
})
 
 
 $(extra).append(imdb, len)
 $(side).append(name, gen, extra)
 $(bot).append(img, side)
 $(inn).append(top, bot)
 $(cover).append(inn)
 $('#status_val').append(cover)
 
 
 
 
  })
  .catch(error => {
  //  console.error('Error:', error);
  });
  
  })
  
  
  
var apiUrl4 = `https://api.themoviedb.org/3/discover/tv?api_key=${API_KEY}&sort_by=popularity.desc&with_genres=16`;

fetch(apiUrl4) 
 .then(response => response.json())
  .then(data => {
    var moviey = data.results[0];
   // console.log ("rest", moviey)
var newText = `https://api.themoviedb.org/3/tv/${moviey.id}?api_key=${API_KEY}`;

fetch(newText) 
 .then(response => response.json())
  .then(data => {
    var mostPopularMovie = data;
  //  console.log('Most Popular Movie:', mostPopularMovie);

 var cover = document.createElement('div')
 var inn = document.createElement('div')
 var top = document.createElement('div')
 var bot = document.createElement('div')
 var img = document.createElement('div')
 var side = document.createElement('div')
 var name = document.createElement('span')
 var gen = document.createElement('span')
 var extra = document.createElement('span')
 var imdb = document.createElement('span')
 var len = document.createElement('span')
 
 $(cover).addClass('one_status swiper-slide')
 $(inn).addClass('status_inner')
 $(top).addClass('status_top')
 $(bot).addClass('status_bot')
 $(img).addClass('status_image')
 $(side).addClass('status_side')
 $(name).addClass('son_filmname')
 $(gen).addClass('son_filmgen')
 $(extra).addClass('son_filmtwo')
 $(imdb).addClass('son_filmimdb')
 $(len).addClass('son_filmfile')
 
 fetch(`https://api.themoviedb.org/3/movie/${mostPopularMovie.id}/images?api_key=${API_KEY}&include_image_language=en&include_image_type=poster`)
  .then(response => response.json())
  .then(data => {
    var image = data.posters[0]; // or data.backdrops[0] for backdrops
    var ima = data.posters[1]; // or data.backdrops[0] for backdrops
    var imageU = `https://image.tmdb.org/t/p/original${image.file_path}`;
    var imageUrl = `https://image.tmdb.org/t/p/original${ima.file_path}`;
   // console.log(imageUrl); // log the URL of the image to the console  
    top.style.backgroundImage = "url("+imageUrl+")";
    img.style.backgroundImage = "url("+imageU+")";
  })  .catch(error => {  
   top.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${mostPopularMovie.backdrop_path})`  
   img.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${mostPopularMovie.poster_path})`
  })
 
    
 
 $(name).text(mostPopularMovie.name)
 
  var movieDetailsUrl = `https://api.themoviedb.org/3/tv/${mostPopularMovie.id}?api_key=${API_KEY}`;
  
  // Fetch movie details from TMDB API
  fetch(movieDetailsUrl)
    .then(response => response.json())
    .then(data => {
       var duration = data.runtime;
      
      var genres = data.genres;
 var movieYear = getMovieYear(data.first_air_date);
    genres.forEach(genre => {
      var genreSpan = document.createElement('span');
      genreSpan.textContent = genre.name;
      genreSpan.classList.add('tag');
      $(gen).append(genreSpan);
    });

       $(len).text(`S${mostPopularMovie.number_of_seasons} E${mostPopularMovie.number_of_episodes}`)
      
   
    fetch(`https://www.omdbapi.com/?apikey=${OMDB_KEY}&t=${mostPopularMovie.name.toString().toLowerCase()}&y=${movieYear}&plot=full`)

  .then(response => response.json())
  .then(data => {
  //  console.log (data)
    if (data.Response === 'True') {  
       $(imdb).text(data.imdbRating);
    } else {
        return false;
    }
  })
  
  
    })
 
 var posterUrl = `https://image.tmdb.org/t/p/w500${mostPopularMovie.poster_path}`
 function color_thief() {
    var colorThief = new ColorThief();

    var img = new Image();
    
        
        img.onload = function() {
        // Display main color e.g [125, 189, 193]
        var mainRGB = colorThief.getColor(img);
        // console.log(mainRGB.join(','));
        
   //     var mainColor = document.querySelector('.colors .main .color')
        var a = `rgb(${mainRGB[0]}, ${mainRGB[1]}, ${mainRGB[2]})`;
    
        $(inn).css({"background-image":"linear-gradient(to bottom, "+a+", #000000) "})
    
    }
    
    img.crossOrigin = "Anonymous";
    img.src = posterUrl.toString(); 
    
}
color_thief()
$(cover).click(function(){
  open_opera(mostPopularMovie.title , mostPopularMovie.id , 'tv')
})
 
 
 $(extra).append(imdb, len)
 $(side).append(name, gen, extra)
 $(bot).append(img, side)
 $(inn).append(top, bot)
 $(cover).append(inn)
 $('#status_val').append(cover)
 
 
 
 
  })
  .catch(error => {
  //  console.error('Error:', error);
  });
  
  })
  
  
  
  
var apiUrl3 = `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&sort_by=popularity.desc&with_genres=16`;

fetch(apiUrl3) 
 .then(response => response.json())
  .then(data => {
    var mostPopularMovie = data.results[0];
 //   console.log('Most Popular Movie:', mostPopularMovie);
 var cover = document.createElement('div')
 var inn = document.createElement('div')
 var top = document.createElement('div')
 var bot = document.createElement('div')
 var img = document.createElement('div')
 var side = document.createElement('div')
 var name = document.createElement('span')
 var gen = document.createElement('span')
 var extra = document.createElement('span')
 var imdb = document.createElement('span')
 var len = document.createElement('span')
 
 $(cover).addClass('one_status swiper-slide')
 $(inn).addClass('status_inner')
 $(top).addClass('status_top')
 $(bot).addClass('status_bot')
 $(img).addClass('status_image')
 $(side).addClass('status_side')
 $(name).addClass('son_filmname')
 $(gen).addClass('son_filmgen')
 $(extra).addClass('son_filmtwo')
 $(imdb).addClass('son_filmimdb')
 $(len).addClass('son_filmlen')
 
 fetch(`https://api.themoviedb.org/3/movie/${mostPopularMovie.id}/images?api_key=${API_KEY}&include_image_language=en&include_image_type=poster`)
  .then(response => response.json())
  .then(data => {
    var image = data.posters[0]; // or data.backdrops[0] for backdrops
    var ima = data.posters[1]; // or data.backdrops[0] for backdrops
    var imageU = `https://image.tmdb.org/t/p/original${image.file_path}`;
    var imageUrl = `https://image.tmdb.org/t/p/original${ima.file_path}`;
   // console.log(imageUrl); // log the URL of the image to the console  
    top.style.backgroundImage = "url("+imageUrl+")";
    img.style.backgroundImage = "url("+imageU+")";
  })  .catch(error => {  
   top.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${mostPopularMovie.backdrop_path})`  
   img.style.backgroundImage = `url(https://image.tmdb.org/t/p/w500${mostPopularMovie.poster_path})`
  })
 
    
 
 $(name).text(mostPopularMovie.title)
 
  var movieDetailsUrl = `https://api.themoviedb.org/3/movie/${mostPopularMovie.id}?api_key=${API_KEY}`;
  
  // Fetch movie details from TMDB API
  fetch(movieDetailsUrl)
    .then(response => response.json())
    .then(data => {
       var duration = data.runtime;
      
      var genres = data.genres;
 var movieYear = getMovieYear(data.release_date);
    genres.forEach(genre => {
      var genreSpan = document.createElement('span');
      genreSpan.textContent = genre.name;
      genreSpan.classList.add('tag');
      $(gen).append(genreSpan);
    });

      $(len).html(duration+" min");
      
   
    fetch(`https://www.omdbapi.com/?apikey=${OMDB_KEY}&t=${mostPopularMovie.title.toString().toLowerCase()}&y=${movieYear}&plot=full`)

  .then(response => response.json())
  .then(data => {
  //  console.log (data)
    if (data.Response === 'True') {  
       $(imdb).text(data.imdbRating);
    } else {
        return false;
    }
  })
  
  
    })
 
 var posterUrl = `https://image.tmdb.org/t/p/w500${mostPopularMovie.poster_path}`
 function color_thief() {
    var colorThief = new ColorThief();

    var img = new Image();
    
        
        img.onload = function() {
        // Display main color e.g [125, 189, 193]
        var mainRGB = colorThief.getColor(img);
        // console.log(mainRGB.join(','));
        
   //     var mainColor = document.querySelector('.colors .main .color')
        var a = `rgb(${mainRGB[0]}, ${mainRGB[1]}, ${mainRGB[2]})`;
    
        $(inn).css({"background-image":"linear-gradient(to bottom, "+a+", #000000) "})
    
    }
    
    img.crossOrigin = "Anonymous";
    img.src = posterUrl.toString(); 
    
}
color_thief()
$(cover).click(function(){
  open_opera(mostPopularMovie.title , mostPopularMovie.id , 'movie')
})
 
 
 $(extra).append(imdb, len)
 $(side).append(name, gen, extra)
 $(bot).append(img, side)
 $(inn).append(top, bot)
 $(cover).append(inn)
 $('#status_val').append(cover)
 
 
 
 
  })
  .catch(error => {
  //  console.error('Error:', error);
  });
  

  


var swiper3 = new Swiper('.swiper_containerthree', {
  direction: 'horizontal',
  slidesPerView: 1,
  spaceBetween: 0,
  mousewheel: true,
  keyboard: true,
  grabCursor: true,
  autoHeight: true , // Set autoHeight to false initially
  pagination: {
    el: '.swiper-pagination',
    clickable: true,
  },
  on: {
    slideChange: function() {
      var activeSlide3 = swiper3.slides[swiper3.activeIndex];
      var activeSlideId3 = activeSlide3.id;
  //    console.log('Active tab ID:', activeSlideId2);
      // Call your custom function with the activeSlideId
      // swipe_hashtab(activeSlideId);
    },
  },
});
/*
function adjustTabHeight3() {
  var maxTabHeight = 0;
  
  $('.swiper_containerthree .swiper-slide').each(function() {
    var tabHeight = $(this).height();
    maxTabHeight = Math.max(maxTabHeight, tabHeight);
  // alert(maxTabHeight)  
  });
  
 // $('.swiper_containerthree .swiper-slide').height(maxTabHeight);
  $('.swiper_containerthree .swiper-slide').css({"height":maxTabHeight});
  swiper3.updateAutoHeight(); // Enable auto height after setting the equal height
}
swiper3.on('init', function() {
  adjustTabHeight3();
});

swiper3.on('slideChange', function() {
  adjustTabHeight3();
});

*/

var swiper8 = new Swiper('.swiper_containereight', {
  direction: 'horizontal',
  slidesPerView: 1,
  spaceBetween: 0,
  mousewheel: true,
  keyboard: true,
  grabCursor: true,
  autoHeight: false, // Set autoHeight to false initially
  pagination: {
    el: '.swiper-pagination',
    clickable: true,
  },
  on: {
    slideChange: function() {
      var activeSlide8= swiper8.slides[swiper8.activeIndex];
      var activeSlideId8 = activeSlide8.id;
    //  console.log('Active tab ID:', activeSlideId6);
      // Call your custom function with the activeSlideId
       //swipe_hashtab2(activeSlideId6);
    },
  },
});


var swiper7 = new Swiper('.swiper_containerseven', {
  direction: 'horizontal',
  slidesPerView: 1,
  spaceBetween: 0,
  mousewheel: true,
  keyboard: true,
  grabCursor: true,
  autoHeight: false, // Set autoHeight to false initially
  pagination: {
    el: '.swiper-pagination',
    clickable: true,
  },
  on: {
    slideChange: function() {
      var activeSlide7 = swiper7.slides[swiper7.activeIndex];
      var activeSlideId7 = activeSlide7.id;
    //  console.log('Active tab ID:', activeSlideId6);
      // Call your custom function with the activeSlideId
       //swipe_hashtab2(activeSlideId6);
    },
  },
});



var swiper6 = new Swiper('.swiper_containersix', {
  direction: 'horizontal',
  slidesPerView: 1,
  spaceBetween: 0,
  mousewheel: true,
  keyboard: true,
  grabCursor: true,
  autoHeight: false, // Set autoHeight to false initially
  pagination: {
    el: '.swiper-pagination',
    clickable: true,
  },
  on: {
    slideChange: function() {
      var activeSlide6 = swiper6.slides[swiper6.activeIndex];
      var activeSlideId6 = activeSlide6.id;
    //  console.log('Active tab ID:', activeSlideId6);
      // Call your custom function with the activeSlideId
       swipe_hashtab2(activeSlideId6);
    },
  },
});

function swipe_hashtab2(tabId) {
  
  var btn = tabId+"btn"
  $(".switch_btns").removeClass("switch_controlclass")
  $("#"+btn).addClass("switch_controlclass")
  // This function will be called with the active tab ID
//  console.log('Active tab ID:', tabId);
  // Perform any additional actions based on the active tab ID
}
function changeActiveTab2(index) {
  swiper6.slideTo(index);
}



var swiper5 = new Swiper('.swiper_containerfive', {
  direction: 'horizontal',
  slidesPerView: 1,
  spaceBetween: 0,
  mousewheel: true,
  keyboard: true,
  grabCursor: true,
  autoHeight: false, // Set autoHeight to false initially
  pagination: {
    el: '.swiper-pagination',
    clickable: true,
  },
  on: {
    slideChange: function() {
      var activeSlide5 = swiper5.slides[swiper5.activeIndex];
      var activeSlideId5 = activeSlide5.id;
    //  console.log('Active tab ID:', activeSlideId5);
      // Call your custom function with the activeSlideId
      // swipe_hashtab(activeSlideId);
    },
  },
});
var swiper4 = new Swiper('.swiper_containerfour', {
  direction: 'horizontal',
  slidesPerView: 1,
  spaceBetween: 0,
  mousewheel: true,
  keyboard: true,
  grabCursor: true,
  autoHeight: false, // Set autoHeight to false initially
  pagination: {
    el: '.swiper-pagination',
    clickable: true,
  },
  on: {
    slideChange: function() {
      var activeSlide4 = swiper4.slides[swiper4.activeIndex];
      var activeSlideId4 = activeSlide4.id;
      console.log('Active tab ID:', activeSlideId4);
      // Call your custom function with the activeSlideId
      // swipe_hashtab(activeSlideId);
    },
  },
});
var swiper2 = new Swiper('.swiper_containertwo', {
  direction: 'horizontal',
  slidesPerView: 1,
  spaceBetween: 0,
  mousewheel: true,
  keyboard: true,
  grabCursor: true,
  autoHeight: false, // Set autoHeight to false initially
  pagination: {
    el: '.swiper-pagination',
    clickable: true,
  },
  on: {
    slideChange: function() {
      var activeSlide2 = swiper2.slides[swiper2.activeIndex];
      var activeSlideId2 = activeSlide2.id;
  //    console.log('Active tab ID:', activeSlideId2);
      // Call your custom function with the activeSlideId
      // swipe_hashtab(activeSlideId);
    },
  },
});
function adjustTabHeight2() {
  var maxTabHeight = 0;
  
  $('.swiper_containertwo .swiper-slide').each(function() {
    var tabHeight = $(this).height();
    maxTabHeight = Math.max(maxTabHeight, tabHeight);
  });
  
  $('.swiper_containertwo .swiper-slide').height(maxTabHeight);
  swiper2.updateAutoHeight(); // Enable auto height after setting the equal height
}
swiper2.on('init', function() {
  adjustTabHeight2();
});

swiper2.on('slideChange', function() {
  adjustTabHeight2();
});



var swiper1 = new Swiper('.swiper_containerone', {
  direction: 'horizontal',
  slidesPerView: 1,
  spaceBetween: 0,
  mousewheel: true,
  keyboard: true,
  grabCursor: true,
  autoHeight : true ,
//  autoWidth : true ,
  pagination: {
    el: '.swiper-pagination',
    clickable: true,
  },
  on: {
    slideChange: function() {
      var activeSlide = swiper1.slides[swiper1.activeIndex];
   var activeSlideId = activeSlide.id;
   //  console.log('Active tab ID:', activeSlideId);
      // Call your custom function with the activeSlideId
      swipe_hashtab1(activeSlideId);
    },
  },
  
});


function adjustTabHeight1() {
  var maxTabHeight = 0;
  
  $('.swiper_containerone .swiper-slide').each(function() {
    var tabHeight = $(this).height();
    maxTabHeight = Math.max(maxTabHeight, tabHeight);
  });
  
  $('.swiper_containerone .swiper-slide').height(maxTabHeight);
  swiper1.updateAutoHeight(); // Enable auto height after setting the equal height
}
swiper1.on('init', function() {
  adjustTabHeight1();
});

swiper1.on('slideChange', function() {
  adjustTabHeight1();
});
function swipe_hashtab1(tabId) {
  
  var btn ;
  switch (tabId.toString().toLowerCase()) {  

    case "movies_hash":
     btn = "mov_hashbtn"
      break;
    case "series_hash":
     btn = "ser_hashbtn"
      break;
    case "actor_hash":
     btn = "act_hashbtn"
      break;
    case "account_hash":
     btn = "acc_hashbtn"
      break;
    case "group_hash":
     btn = "grp_hashbtn"
      break;
   default:
   btn = "ser_hashbtn"
      // Handle default case if needed
      break;
  }
  $(".hash_controlbtns").removeClass("week_controlclass")
  $("#"+btn).addClass("week_controlclass")
  // This function will be called with the active tab ID
//  console.log('Active tab ID:', tabId);
  // Perform any additional actions based on the active tab ID
}
function changeActiveTab1(index) {
  swiper1.slideTo(index);
}

/*
firebase.database().ref("my_hashipedia").push({
 name: "elite",
 id: `elite-poprizon-${Date.now()}`,
})
*/
    </script>
    
    
    
    
    </html>
    
    
    
    
    
    
    
    